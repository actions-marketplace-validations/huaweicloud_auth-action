require('./sourcemap-register.js');/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 13842:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getInputs = exports.ENDPOINT_SERVICE_NAME = exports.CUSTOM_USER_AGENT = void 0;
const core = __importStar(__nccwpck_require__(42186));
exports.CUSTOM_USER_AGENT = 'DevKit-GitHub:Authenticate to Huawei Cloud';
exports.ENDPOINT_SERVICE_NAME = 'iam';
function getInputs() {
    return {
        accessKey: core.getInput('access_key_id', { required: true }),
        secretKey: core.getInput('secret_access_key', { required: true }),
        region: core.getInput('region', { required: true }),
        projectId: core.getInput('project_id', { required: false }),
    };
}
exports.getInputs = getInputs;
//# sourceMappingURL=context.js.map

/***/ }),

/***/ 2166:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.exportCredentials = void 0;
const core = __importStar(__nccwpck_require__(42186));
/**
 * 华为云凭证设置为加密的环境变量
 * @param inputs
 */
function exportCredentials(inputs) {
    return __awaiter(this, void 0, void 0, function* () {
        core.setSecret(inputs.accessKey);
        core.exportVariable('HUAWEI_CLOUD_ACCESS_KEY_ID', inputs.accessKey);
        core.setSecret(inputs.secretKey);
        core.exportVariable('HUAWEI_CLOUD_SECRET_ACCESS_KEY', inputs.secretKey);
        core.setSecret(inputs.region);
        core.exportVariable('HUAWEI_CLOUD_REGION', inputs.region);
        if (inputs.projectId) {
            core.setSecret(inputs.projectId);
            core.exportVariable('HUAWEI_CLOUD_PROJECT_ID', inputs.projectId);
        }
        core.info('Huawei Cloud Credentials environment variables have been set');
    });
}
exports.exportCredentials = exportCredentials;
//# sourceMappingURL=credential.js.map

/***/ }),

/***/ 4705:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.keystoneShowProject = exports.showPermanentAccessKey = exports.getClientBuilder = void 0;
const context = __importStar(__nccwpck_require__(13842));
const utils = __importStar(__nccwpck_require__(50918));
const core = __importStar(__nccwpck_require__(42186));
const huaweicore = __importStar(__nccwpck_require__(24820));
const iam = __importStar(__nccwpck_require__(36757));
function getClientBuilder(inputs) {
    const credentials = new huaweicore.BasicCredentials()
        .withAk(inputs.accessKey)
        .withSk(inputs.secretKey);
    let credentialsWithProject = credentials;
    if (inputs.projectId) {
        credentialsWithProject = credentials.withProjectId(inputs.projectId);
    }
    const client = iam.IamClient.newBuilder()
        .withCredential(credentialsWithProject)
        .withEndpoint(utils.getEndpoint(inputs.region, context.ENDPOINT_SERVICE_NAME))
        .withOptions({ customUserAgent: context.CUSTOM_USER_AGENT })
        .build();
    return client;
}
exports.getClientBuilder = getClientBuilder;
/**
 * 查询指定永久访问密钥是否存在
 * @param
 * @returns
 */
function showPermanentAccessKey(inputs) {
    return __awaiter(this, void 0, void 0, function* () {
        const client = getClientBuilder(inputs);
        const request = new iam.ShowPermanentAccessKeyRequest();
        request.accessKey = inputs.accessKey;
        const result = yield client.showPermanentAccessKey(request);
        if (result.httpStatusCode !== 200) {
            core.setFailed('Show Permanent Access Key Failed.');
            return false;
        }
        return true;
    });
}
exports.showPermanentAccessKey = showPermanentAccessKey;
/**
 * 查询项目是否正常
 * @param
 * @returns
 */
function keystoneShowProject(inputs) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!inputs.projectId) {
            return true;
        }
        const client = getClientBuilder(inputs);
        const result = yield client.keystoneShowProject();
        if (result.httpStatusCode !== 200) {
            core.setFailed('Keystone Show Project Failed.');
            return false;
        }
        return true;
    });
}
exports.keystoneShowProject = keystoneShowProject;
//# sourceMappingURL=iam.js.map

/***/ }),

/***/ 3109:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.run = void 0;
const core = __importStar(__nccwpck_require__(42186));
const utils = __importStar(__nccwpck_require__(50918));
const context = __importStar(__nccwpck_require__(13842));
const iam = __importStar(__nccwpck_require__(4705));
const credential = __importStar(__nccwpck_require__(2166));
function run() {
    return __awaiter(this, void 0, void 0, function* () {
        const inputs = context.getInputs();
        // 如果参数输入有问题，终止操作
        if (!utils.checkInputs(inputs)) {
            core.setFailed('input parameters is not correct.');
            return;
        }
        // 检查AK/SK是否存在合法
        if (!(yield iam.showPermanentAccessKey(inputs))) {
            core.setFailed('AK/SK is not found.');
            return;
        }
        // 检查projectId是否正常
        if (!(yield iam.keystoneShowProject(inputs))) {
            core.setFailed('project_id is not found.');
            return;
        }
        yield credential.exportCredentials(inputs);
    });
}
exports.run = run;
run().catch(core.setFailed);
//# sourceMappingURL=main.js.map

/***/ }),

/***/ 50918:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getEndpoint = exports.checkRegion = exports.checkProjectId = exports.checkAkSk = exports.checkInputs = void 0;
const core = __importStar(__nccwpck_require__(42186));
// 正则校验表达式
const ACCESS_KEY_REG = new RegExp(/^[a-zA-Z0-9]{10,30}$/);
const SECRET_KEY_REG = new RegExp(/^[a-zA-Z0-9]{30,50}$/);
const PROJECT_ID_REG = new RegExp(/^[a-zA-Z0-9]{16,64}$/);
const REGION_REG = new RegExp(/^[a-zA-Z0-9]{1,5}-[a-zA-Z0-9]+-[1-9]$/);
/**
 * 检查每个inputs 属性value是否合法
 * @param inputs
 * @returns
 */
function checkInputs(inputs) {
    if (!checkAkSk(inputs.accessKey, inputs.secretKey)) {
        core.info('ak or sk is not correct.');
        return false;
    }
    if (!checkProjectId(inputs.projectId)) {
        core.info('project id is not correct.');
        return false;
    }
    if (!checkRegion(inputs.region)) {
        core.info('region is not correct.');
        return false;
    }
    return true;
}
exports.checkInputs = checkInputs;
/**
 * 检查aksk是否合法
 * @param inputs
 * @returns
 */
function checkAkSk(accessKey, secretKey) {
    return ACCESS_KEY_REG.test(accessKey) && SECRET_KEY_REG.test(secretKey);
}
exports.checkAkSk = checkAkSk;
/**
 * 检查projectId是否合法
 * @param projectId
 * @returns
 */
function checkProjectId(projectId) {
    return projectId ? PROJECT_ID_REG.test(projectId) : true;
}
exports.checkProjectId = checkProjectId;
/**
 * 检查region格式是否合法
 * @returns
 */
function checkRegion(region) {
    return REGION_REG.test(region);
}
exports.checkRegion = checkRegion;
/**
 * 获取终端节点
 * @param region
 * @param endpointServiceName
 * @returns
 */
function getEndpoint(region, endpointServiceName) {
    return 'https://' + endpointServiceName + '.' + region + '.myhuaweicloud.com';
}
exports.getEndpoint = getEndpoint;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 87351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(22037));
const utils_1 = __nccwpck_require__(5278);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 42186:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(87351);
const file_command_1 = __nccwpck_require__(717);
const utils_1 = __nccwpck_require__(5278);
const os = __importStar(__nccwpck_require__(22037));
const path = __importStar(__nccwpck_require__(71017));
const oidc_utils_1 = __nccwpck_require__(98041);
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        const delimiter = '_GitHubActionsFileCommandDelimeter_';
        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;
        file_command_1.issueCommand('ENV', commandValue);
    }
    else {
        command_1.issueCommand('set-env', { name }, convertedVal);
    }
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    return inputs;
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, value);
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message, properties = {}) {
    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message, properties = {}) {
    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message, properties = {}) {
    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    command_1.issueCommand('save-state', { name }, value);
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
function getIDToken(aud) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
}
exports.getIDToken = getIDToken;
/**
 * Summary exports
 */
var summary_1 = __nccwpck_require__(81327);
Object.defineProperty(exports, "summary", ({ enumerable: true, get: function () { return summary_1.summary; } }));
/**
 * @deprecated use core.summary
 */
var summary_2 = __nccwpck_require__(81327);
Object.defineProperty(exports, "markdownSummary", ({ enumerable: true, get: function () { return summary_2.markdownSummary; } }));
/**
 * Path exports
 */
var path_utils_1 = __nccwpck_require__(2981);
Object.defineProperty(exports, "toPosixPath", ({ enumerable: true, get: function () { return path_utils_1.toPosixPath; } }));
Object.defineProperty(exports, "toWin32Path", ({ enumerable: true, get: function () { return path_utils_1.toWin32Path; } }));
Object.defineProperty(exports, "toPlatformPath", ({ enumerable: true, get: function () { return path_utils_1.toPlatformPath; } }));
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 717:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issueCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(57147));
const os = __importStar(__nccwpck_require__(22037));
const utils_1 = __nccwpck_require__(5278);
function issueCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueCommand = issueCommand;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 98041:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OidcClient = void 0;
const http_client_1 = __nccwpck_require__(96255);
const auth_1 = __nccwpck_require__(35526);
const core_1 = __nccwpck_require__(42186);
class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
            allowRetries: allowRetry,
            maxRetries: maxRetry
        };
        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
        if (!token) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
        }
        return token;
    }
    static getIDTokenUrl() {
        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
        if (!runtimeUrl) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
        }
        return runtimeUrl;
    }
    static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const httpclient = OidcClient.createHttpClient();
            const res = yield httpclient
                .getJson(id_token_url)
                .catch(error => {
                throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.result.message}`);
            });
            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
            if (!id_token) {
                throw new Error('Response json body do not have ID Token field');
            }
            return id_token;
        });
    }
    static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                // New ID Token is requested from action service
                let id_token_url = OidcClient.getIDTokenUrl();
                if (audience) {
                    const encodedAudience = encodeURIComponent(audience);
                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;
                }
                core_1.debug(`ID token url is ${id_token_url}`);
                const id_token = yield OidcClient.getCall(id_token_url);
                core_1.setSecret(id_token);
                return id_token;
            }
            catch (error) {
                throw new Error(`Error message: ${error.message}`);
            }
        });
    }
}
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ 2981:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;
const path = __importStar(__nccwpck_require__(71017));
/**
 * toPosixPath converts the given path to the posix form. On Windows, \\ will be
 * replaced with /.
 *
 * @param pth. Path to transform.
 * @return string Posix path.
 */
function toPosixPath(pth) {
    return pth.replace(/[\\]/g, '/');
}
exports.toPosixPath = toPosixPath;
/**
 * toWin32Path converts the given path to the win32 form. On Linux, / will be
 * replaced with \\.
 *
 * @param pth. Path to transform.
 * @return string Win32 path.
 */
function toWin32Path(pth) {
    return pth.replace(/[/]/g, '\\');
}
exports.toWin32Path = toWin32Path;
/**
 * toPlatformPath converts the given path to a platform-specific path. It does
 * this by replacing instances of / and \ with the platform-specific path
 * separator.
 *
 * @param pth The path to platformize.
 * @return string The platform-specific path.
 */
function toPlatformPath(pth) {
    return pth.replace(/[/\\]/g, path.sep);
}
exports.toPlatformPath = toPlatformPath;
//# sourceMappingURL=path-utils.js.map

/***/ }),

/***/ 81327:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;
const os_1 = __nccwpck_require__(22037);
const fs_1 = __nccwpck_require__(57147);
const { access, appendFile, writeFile } = fs_1.promises;
exports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';
exports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';
class Summary {
    constructor() {
        this._buffer = '';
    }
    /**
     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
     * Also checks r/w permissions.
     *
     * @returns step summary file path
     */
    filePath() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._filePath) {
                return this._filePath;
            }
            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];
            if (!pathFromEnv) {
                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
            }
            try {
                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
            }
            catch (_a) {
                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);
            }
            this._filePath = pathFromEnv;
            return this._filePath;
        });
    }
    /**
     * Wraps content in an HTML tag, adding any HTML attributes
     *
     * @param {string} tag HTML tag to wrap
     * @param {string | null} content content within the tag
     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
     *
     * @returns {string} content wrapped in HTML element
     */
    wrap(tag, content, attrs = {}) {
        const htmlAttrs = Object.entries(attrs)
            .map(([key, value]) => ` ${key}="${value}"`)
            .join('');
        if (!content) {
            return `<${tag}${htmlAttrs}>`;
        }
        return `<${tag}${htmlAttrs}>${content}</${tag}>`;
    }
    /**
     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
     *
     * @param {SummaryWriteOptions} [options] (optional) options for write operation
     *
     * @returns {Promise<Summary>} summary instance
     */
    write(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);
            const filePath = yield this.filePath();
            const writeFunc = overwrite ? writeFile : appendFile;
            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });
            return this.emptyBuffer();
        });
    }
    /**
     * Clears the summary buffer and wipes the summary file
     *
     * @returns {Summary} summary instance
     */
    clear() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.emptyBuffer().write({ overwrite: true });
        });
    }
    /**
     * Returns the current summary buffer as a string
     *
     * @returns {string} string of summary buffer
     */
    stringify() {
        return this._buffer;
    }
    /**
     * If the summary buffer is empty
     *
     * @returns {boolen} true if the buffer is empty
     */
    isEmptyBuffer() {
        return this._buffer.length === 0;
    }
    /**
     * Resets the summary buffer without writing to summary file
     *
     * @returns {Summary} summary instance
     */
    emptyBuffer() {
        this._buffer = '';
        return this;
    }
    /**
     * Adds raw text to the summary buffer
     *
     * @param {string} text content to add
     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
     *
     * @returns {Summary} summary instance
     */
    addRaw(text, addEOL = false) {
        this._buffer += text;
        return addEOL ? this.addEOL() : this;
    }
    /**
     * Adds the operating system-specific end-of-line marker to the buffer
     *
     * @returns {Summary} summary instance
     */
    addEOL() {
        return this.addRaw(os_1.EOL);
    }
    /**
     * Adds an HTML codeblock to the summary buffer
     *
     * @param {string} code content to render within fenced code block
     * @param {string} lang (optional) language to syntax highlight code
     *
     * @returns {Summary} summary instance
     */
    addCodeBlock(code, lang) {
        const attrs = Object.assign({}, (lang && { lang }));
        const element = this.wrap('pre', this.wrap('code', code), attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML list to the summary buffer
     *
     * @param {string[]} items list of items to render
     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
     *
     * @returns {Summary} summary instance
     */
    addList(items, ordered = false) {
        const tag = ordered ? 'ol' : 'ul';
        const listItems = items.map(item => this.wrap('li', item)).join('');
        const element = this.wrap(tag, listItems);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML table to the summary buffer
     *
     * @param {SummaryTableCell[]} rows table rows
     *
     * @returns {Summary} summary instance
     */
    addTable(rows) {
        const tableBody = rows
            .map(row => {
            const cells = row
                .map(cell => {
                if (typeof cell === 'string') {
                    return this.wrap('td', cell);
                }
                const { header, data, colspan, rowspan } = cell;
                const tag = header ? 'th' : 'td';
                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));
                return this.wrap(tag, data, attrs);
            })
                .join('');
            return this.wrap('tr', cells);
        })
            .join('');
        const element = this.wrap('table', tableBody);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds a collapsable HTML details element to the summary buffer
     *
     * @param {string} label text for the closed state
     * @param {string} content collapsable content
     *
     * @returns {Summary} summary instance
     */
    addDetails(label, content) {
        const element = this.wrap('details', this.wrap('summary', label) + content);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML image tag to the summary buffer
     *
     * @param {string} src path to the image you to embed
     * @param {string} alt text description of the image
     * @param {SummaryImageOptions} options (optional) addition image attributes
     *
     * @returns {Summary} summary instance
     */
    addImage(src, alt, options) {
        const { width, height } = options || {};
        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));
        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML section heading element
     *
     * @param {string} text heading text
     * @param {number | string} [level=1] (optional) the heading level, default: 1
     *
     * @returns {Summary} summary instance
     */
    addHeading(text, level) {
        const tag = `h${level}`;
        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)
            ? tag
            : 'h1';
        const element = this.wrap(allowedTag, text);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML thematic break (<hr>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addSeparator() {
        const element = this.wrap('hr', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML line break (<br>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addBreak() {
        const element = this.wrap('br', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML blockquote to the summary buffer
     *
     * @param {string} text quote text
     * @param {string} cite (optional) citation url
     *
     * @returns {Summary} summary instance
     */
    addQuote(text, cite) {
        const attrs = Object.assign({}, (cite && { cite }));
        const element = this.wrap('blockquote', text, attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML anchor tag to the summary buffer
     *
     * @param {string} text link text/content
     * @param {string} href hyperlink
     *
     * @returns {Summary} summary instance
     */
    addLink(text, href) {
        const element = this.wrap('a', text, { href });
        return this.addRaw(element).addEOL();
    }
}
const _summary = new Summary();
/**
 * @deprecated use `core.summary`
 */
exports.markdownSummary = _summary;
exports.summary = _summary;
//# sourceMappingURL=summary.js.map

/***/ }),

/***/ 5278:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
        return {};
    }
    return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
    };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 35526:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;
class BasicCredentialHandler {
    constructor(username, password) {
        this.username = username;
        this.password = password;
    }
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BasicCredentialHandler = BasicCredentialHandler;
class BearerCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Bearer ${this.token}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BearerCredentialHandler = BearerCredentialHandler;
class PersonalAccessTokenCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
//# sourceMappingURL=auth.js.map

/***/ }),

/***/ 96255:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/* eslint-disable @typescript-eslint/no-explicit-any */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;
const http = __importStar(__nccwpck_require__(13685));
const https = __importStar(__nccwpck_require__(95687));
const pm = __importStar(__nccwpck_require__(19835));
const tunnel = __importStar(__nccwpck_require__(74294));
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                let output = Buffer.alloc(0);
                this.message.on('data', (chunk) => {
                    output = Buffer.concat([output, chunk]);
                });
                this.message.on('end', () => {
                    resolve(output.toString());
                });
            }));
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    const parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
        });
    }
    get(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('GET', requestUrl, null, additionalHeaders || {});
        });
    }
    del(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('DELETE', requestUrl, null, additionalHeaders || {});
        });
    }
    post(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('POST', requestUrl, data, additionalHeaders || {});
        });
    }
    patch(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PATCH', requestUrl, data, additionalHeaders || {});
        });
    }
    put(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PUT', requestUrl, data, additionalHeaders || {});
        });
    }
    head(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('HEAD', requestUrl, null, additionalHeaders || {});
        });
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(verb, requestUrl, stream, additionalHeaders);
        });
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    getJson(requestUrl, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            const res = yield this.get(requestUrl, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    postJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.post(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    putJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.put(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    patchJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.patch(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    request(verb, requestUrl, data, headers) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._disposed) {
                throw new Error('Client has already been disposed.');
            }
            const parsedUrl = new URL(requestUrl);
            let info = this._prepareRequest(verb, parsedUrl, headers);
            // Only perform retries on reads since writes may not be idempotent.
            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)
                ? this._maxRetries + 1
                : 1;
            let numTries = 0;
            let response;
            do {
                response = yield this.requestRaw(info, data);
                // Check if it's an authentication challenge
                if (response &&
                    response.message &&
                    response.message.statusCode === HttpCodes.Unauthorized) {
                    let authenticationHandler;
                    for (const handler of this.handlers) {
                        if (handler.canHandleAuthentication(response)) {
                            authenticationHandler = handler;
                            break;
                        }
                    }
                    if (authenticationHandler) {
                        return authenticationHandler.handleAuthentication(this, info, data);
                    }
                    else {
                        // We have received an unauthorized response but have no handlers to handle it.
                        // Let the response return to the caller.
                        return response;
                    }
                }
                let redirectsRemaining = this._maxRedirects;
                while (response.message.statusCode &&
                    HttpRedirectCodes.includes(response.message.statusCode) &&
                    this._allowRedirects &&
                    redirectsRemaining > 0) {
                    const redirectUrl = response.message.headers['location'];
                    if (!redirectUrl) {
                        // if there's no location to redirect to, we won't
                        break;
                    }
                    const parsedRedirectUrl = new URL(redirectUrl);
                    if (parsedUrl.protocol === 'https:' &&
                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&
                        !this._allowRedirectDowngrade) {
                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                    }
                    // we need to finish reading the response before reassigning response
                    // which will leak the open socket.
                    yield response.readBody();
                    // strip authorization header if redirected to a different hostname
                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                        for (const header in headers) {
                            // header names are case insensitive
                            if (header.toLowerCase() === 'authorization') {
                                delete headers[header];
                            }
                        }
                    }
                    // let's make the request with the new redirectUrl
                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                    response = yield this.requestRaw(info, data);
                    redirectsRemaining--;
                }
                if (!response.message.statusCode ||
                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {
                    // If not a retry code, return immediately instead of retrying
                    return response;
                }
                numTries += 1;
                if (numTries < maxTries) {
                    yield response.readBody();
                    yield this._performExponentialBackoff(numTries);
                }
            } while (numTries < maxTries);
            return response;
        });
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                function callbackForResult(err, res) {
                    if (err) {
                        reject(err);
                    }
                    else if (!res) {
                        // If `err` is not passed, then `res` must be passed.
                        reject(new Error('Unknown error'));
                    }
                    else {
                        resolve(res);
                    }
                }
                this.requestRawWithCallback(info, data, callbackForResult);
            });
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        if (typeof data === 'string') {
            if (!info.options.headers) {
                info.options.headers = {};
            }
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        function handleResult(err, res) {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        }
        const req = info.httpModule.request(info.options, (msg) => {
            const res = new HttpClientResponse(msg);
            handleResult(undefined, res);
        });
        let socket;
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error(`Request timeout: ${info.options.path}`));
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            for (const handler of this.handlers) {
                handler.prepareRequest(info.options);
            }
        }
        return info;
    }
    _mergeHeaders(headers) {
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (this._keepAlive && !useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.
        if (proxyUrl && proxyUrl.hostname) {
            const agentOptions = {
                maxSockets,
                keepAlive: this._keepAlive,
                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {
                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                })), { host: proxyUrl.hostname, port: proxyUrl.port })
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if reusing agent across request and tunneling agent isn't assigned create a new agent
        if (this._keepAlive && !agent) {
            const options = { keepAlive: this._keepAlive, maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        // if not using private agent and tunnel agent isn't setup then use global agent
        if (!agent) {
            agent = usingSsl ? https.globalAgent : http.globalAgent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _performExponentialBackoff(retryNumber) {
        return __awaiter(this, void 0, void 0, function* () {
            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
            return new Promise(resolve => setTimeout(() => resolve(), ms));
        });
    }
    _processResponse(res, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                const statusCode = res.message.statusCode || 0;
                const response = {
                    statusCode,
                    result: null,
                    headers: {}
                };
                // not found leads to null obj returned
                if (statusCode === HttpCodes.NotFound) {
                    resolve(response);
                }
                // get the result from the body
                function dateTimeDeserializer(key, value) {
                    if (typeof value === 'string') {
                        const a = new Date(value);
                        if (!isNaN(a.valueOf())) {
                            return a;
                        }
                    }
                    return value;
                }
                let obj;
                let contents;
                try {
                    contents = yield res.readBody();
                    if (contents && contents.length > 0) {
                        if (options && options.deserializeDates) {
                            obj = JSON.parse(contents, dateTimeDeserializer);
                        }
                        else {
                            obj = JSON.parse(contents);
                        }
                        response.result = obj;
                    }
                    response.headers = res.message.headers;
                }
                catch (err) {
                    // Invalid resource (contents not json);  leaving result obj null
                }
                // note that 3xx redirects are handled by the http layer.
                if (statusCode > 299) {
                    let msg;
                    // if exception/error in body, attempt to get better error
                    if (obj && obj.message) {
                        msg = obj.message;
                    }
                    else if (contents && contents.length > 0) {
                        // it may be the case that the exception is in the body message as string
                        msg = contents;
                    }
                    else {
                        msg = `Failed request: (${statusCode})`;
                    }
                    const err = new HttpClientError(msg, statusCode);
                    err.result = response.result;
                    reject(err);
                }
                else {
                    resolve(response);
                }
            }));
        });
    }
}
exports.HttpClient = HttpClient;
const lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 19835:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkBypass = exports.getProxyUrl = void 0;
function getProxyUrl(reqUrl) {
    const usingSsl = reqUrl.protocol === 'https:';
    if (checkBypass(reqUrl)) {
        return undefined;
    }
    const proxyVar = (() => {
        if (usingSsl) {
            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];
        }
        else {
            return process.env['http_proxy'] || process.env['HTTP_PROXY'];
        }
    })();
    if (proxyVar) {
        return new URL(proxyVar);
    }
    else {
        return undefined;
    }
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    const upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (const upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperReqHosts.some(x => x === upperNoProxyItem)) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;
//# sourceMappingURL=proxy.js.map

/***/ }),

/***/ 35414:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ClientBuilder = void 0;
var HcClient_1 = __nccwpck_require__(84429);
var DefaultHttpClient_1 = __nccwpck_require__(69873);
var BasicCredentials_1 = __nccwpck_require__(98794);
var GlobalCredentials_1 = __nccwpck_require__(96831);
var SdkException_1 = __nccwpck_require__(30576);
var path = __nccwpck_require__(71017);
var ClientBuilder = /** @class */ (function () {
    function ClientBuilder(init, credentialType) {
        this.credentialType = ["BasicCredentials", "GlobalCredentials"];
        this.envParams = process.env;
        this.init = init;
        if (credentialType) {
            this.credentialType = credentialType.split(",");
        }
    }
    ClientBuilder.prototype.withEndpoint = function (endpoint) {
        this.endpoint = endpoint;
        return this;
    };
    ClientBuilder.prototype.withCredential = function (credential) {
        this.credential = credential;
        return this;
    };
    ClientBuilder.prototype.withProxyAgent = function (proxyAgent) {
        this.proxyAgent = proxyAgent;
        return this;
    };
    ClientBuilder.prototype.withRegion = function (region) {
        this.region = region;
        return this;
    };
    ClientBuilder.prototype.withOptions = function (options) {
        this.userOptions = options;
        return this;
    };
    ClientBuilder.prototype.build = function () {
        var _a;
        var axiosOptions = {
            disableSslVerification: true
        };
        if (this.proxyAgent) {
            Object.assign(axiosOptions, { proxyAgent: this.proxyAgent });
        }
        if ((_a = this.userOptions) === null || _a === void 0 ? void 0 : _a.customUserAgent) {
            axiosOptions.headers = axiosOptions.headers || {};
            axiosOptions.headers["User-Agent"] = this.userOptions.customUserAgent;
        }
        if (!this.credential) {
            this.credential = this.getCredentialFromEnvironment();
        }
        if (!this.credential) {
            throw new SdkException_1.SdkException("credential can not be null, ".concat(this.credentialType, "Credential objects are required"));
        }
        var client = new DefaultHttpClient_1.DefaultHttpClient(axiosOptions);
        var hcClient = new HcClient_1.HcClient(client);
        hcClient.withEndpoint(this.endpoint).withCredential(this.credential);
        if (this.region) {
            hcClient.withRegion(this.region);
        }
        return this.init(hcClient);
    };
    /**
     * 从环境变量获取 HUAWEICLOUD_SDK_TYPE
     * 环境变量里没有则使用 credentialType[0]
     * 生成credential实体
     * 从环境变量获取 AK SK projectId/domainId 进行赋值， 如果环境变量是GlobalCredentials，则赋值domainId
     * @returns Credentials
     */
    ClientBuilder.prototype.getCredentialFromEnvironment = function () {
        var sdkType = process.env.HUAWEICLOUD_SDK_TYPE;
        var credentialTYPE = this.whichCredential(sdkType);
        return this.getInputParamCredential(credentialTYPE, this.envParams);
    };
    ClientBuilder.prototype.whichCredential = function (sdkType) {
        var credentialTYPE;
        if (sdkType) {
            switch (sdkType) {
                case 'BasicCredentials':
                    credentialTYPE = new BasicCredentials_1.BasicCredentials();
                    break;
                case 'GlobalCredentials':
                    credentialTYPE = new GlobalCredentials_1.GlobalCredentials();
                    break;
                default:
                    var obj = {};
                    var definedCredPath = path.join(this.init().getPath(), "".concat(sdkType));
                    if (!obj[sdkType]) {
                        credentialTYPE = require(definedCredPath);
                        // 多加一层
                        obj[sdkType] = credentialTYPE[sdkType];
                    }
                    credentialTYPE = new obj[sdkType]();
                    break;
            }
        }
        else {
            // 默认是basic
            credentialTYPE = new BasicCredentials_1.BasicCredentials();
        }
        return credentialTYPE;
    };
    ClientBuilder.prototype.getInputParamCredential = function (CredentialsType, credential) {
        // 判断是否有_
        var hash = {};
        for (var key in credential) {
            if (key.indexOf("HUAWEICLOUD_SDK_") == 0) {
                var value = credential[key];
                key = key.substring(16);
                if (key.indexOf('_') == -1) {
                    key = key.toLowerCase();
                    key = 'with' + key.charAt(0).toUpperCase() + key.slice(1);
                }
                else {
                    var arr = key.split('_').map(function (item) {
                        item = item.toLowerCase();
                        return item.charAt(0).toUpperCase() + item.slice(1);
                    });
                    if (Array.isArray(arr)) {
                        key = 'with' + arr.join("");
                    }
                }
                hash[key] = value;
            }
        }
        credential = hash;
        for (var key in credential) {
            if (CredentialsType[key]) {
                CredentialsType[key](credential[key]);
            }
        }
        return CredentialsType;
    };
    return ClientBuilder;
}());
exports.ClientBuilder = ClientBuilder;


/***/ }),

/***/ 84429:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HcClient = void 0;
var IHttpRequestBuilder_1 = __nccwpck_require__(45547);
var ExceptionUtil_1 = __nccwpck_require__(13106);
var logger_1 = __nccwpck_require__(91251);
var HcClient = /** @class */ (function () {
    function HcClient(client) {
        this.proxyAgent = '';
        this.httpClient = client;
        // Logging
        this.logger = (0, logger_1.getLogger)(HcClient.loggerName, logger_1.LogLevel.INFO);
        this.logger.debug('initialized');
    }
    HcClient.prototype.withEndpoint = function (endpoint) {
        this.endpoint = endpoint;
        return this;
    };
    HcClient.prototype.withCredential = function (credential) {
        this.credential = credential;
        return this;
    };
    HcClient.prototype.withRegion = function (region) {
        this.region = region;
        return this;
    };
    HcClient.prototype.withHttpsAgent = function (proxyAgent) {
        this.proxyAgent = proxyAgent;
        return this;
    };
    HcClient.prototype.sendRequest = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var request;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.debug('send request');
                        return [4 /*yield*/, this.buildRequest(options)];
                    case 1:
                        request = _a.sent();
                        // @ts-ignore
                        return [2 /*return*/, this.httpClient.sendRequest(request).then(function (res) {
                                return _this.extractResponse(res);
                            }, function (err) {
                                return ExceptionUtil_1.ExceptionUtil.generalException(err);
                            })];
                }
            });
        });
    };
    HcClient.prototype.buildRequest = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, url, pathParams, builder, httpRequest;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.region) return [3 /*break*/, 2];
                        this.endpoint = this.region.endpoint;
                        _a = this;
                        return [4 /*yield*/, this.credential.processAuthParams(this, this.region.id)];
                    case 1:
                        _a.credential = _b.sent();
                        _b.label = 2;
                    case 2:
                        url = this.endpoint + options.url;
                        pathParams = options.pathParams;
                        Object.keys(pathParams).forEach(function (x) {
                            url = url.replace("{" + x + "}", pathParams[x]);
                        });
                        if (options.method === 'DELETE' && (options.data && (Object.keys(options.data).length <= 0 || options.data.length <= 0))) {
                            delete options.data;
                        }
                        builder = new IHttpRequestBuilder_1.HttpRequestBuilder();
                        httpRequest = builder
                            .withEndpoint(url)
                            .withHeaders(options.headers)
                            .withMethod(options.method)
                            .withPathParams(options.pathParams)
                            .withData(options.data)
                            .withQueryParams(options.queryParams)
                            .build();
                        // @ts-ignore
                        httpRequest = this.credential.processAuthRequest(httpRequest);
                        if (options['responseHeaders']) {
                            httpRequest['responseHeaders'] = options['responseHeaders'];
                        }
                        httpRequest.proxy = this.proxyAgent;
                        return [2 /*return*/, httpRequest];
                }
            });
        });
    };
    HcClient.prototype.extractResponse = function (result) {
        var headers = result.headers;
        var contentType = headers['content-type'];
        contentType = contentType.toLowerCase();
        if (contentType && (contentType.startsWith('application/octet-stream') || contentType.startsWith("image"))) {
            return result.data;
        }
        else {
            var response = result.data instanceof Object ? result.data : {};
            var sdkRespone = response;
            sdkRespone.httpStatusCode = result.statusCode;
            return response;
        }
    };
    HcClient.loggerName = 'HcClient';
    return HcClient;
}());
exports.HcClient = HcClient;


/***/ }),

/***/ 69083:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SdkResponse = void 0;
var SdkResponse = /** @class */ (function () {
    function SdkResponse() {
    }
    return SdkResponse;
}());
exports.SdkResponse = SdkResponse;


/***/ }),

/***/ 62420:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RequiredError = exports.AKSKSigner = void 0;
var crypto = __importStar(__nccwpck_require__(6113));
var moment = __nccwpck_require__(99623);
var url = __nccwpck_require__(57310);
var _ = __importStar(__nccwpck_require__(90250));
var AKSKSigner = /** @class */ (function () {
    function AKSKSigner() {
    }
    AKSKSigner.hexTable = function () {
        if (this.hex.length <= 0) {
            for (var i = 0; i < 256; ++i) {
                this.hex[i] = '%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase();
            }
        }
        return this.hex;
    };
    ;
    AKSKSigner.sign = function (request, credential) {
        var authenticationHeaders = {};
        var dateTimeStamp = request.headers[this.HeaderXDate];
        if (dateTimeStamp) {
            dateTimeStamp = moment(dateTimeStamp).utcOffset(0).format(this.BasicDateFormat);
            dateTimeStamp = dateTimeStamp + "Z";
        }
        else {
            dateTimeStamp = moment().utcOffset(0).format(this.BasicDateFormat);
            dateTimeStamp = dateTimeStamp + "Z";
            Object.assign(authenticationHeaders, { "X-Sdk-Date": dateTimeStamp });
        }
        // @ts-ignore
        var parsedUrl = url.parse(request.endpoint, true);
        var host = parsedUrl.host;
        var reqUrlHostAndPort = request.headers[this.HeaderHost];
        if (reqUrlHostAndPort) {
            host = reqUrlHostAndPort;
        }
        Object.assign(authenticationHeaders, { "host": host });
        var allHeaders = {};
        Object.assign(allHeaders, request.headers, authenticationHeaders);
        var canonicalURI = this.CanonicalURI(parsedUrl.pathname);
        var canonicalQueryString = this.CanonicalQueryString(request);
        var sortedKeys = _.sortBy(Object.keys(allHeaders), function (x) {
            return x.toLocaleLowerCase();
        });
        var signedHeaderNames = sortedKeys.join(";").toLocaleLowerCase();
        var canonicalHeaders = this.buildCanonicalHeaders(allHeaders);
        var payloadHash = this.buildPayloadHash(request);
        var canonicalRequest = this.buildCanonicalRequest(request.method, canonicalURI, canonicalQueryString, canonicalHeaders, signedHeaderNames, payloadHash);
        var canonicalRequestHash = this.Hex(canonicalRequest);
        var stringToSign = this.getStringToSign(this.SDK_SIGNING_ALGORITHM, dateTimeStamp, canonicalRequestHash);
        var signatureString = this.hmacSHA256(credential.getSk(), stringToSign);
        var authorization = {
            Authorization: "".concat(this.SDK_SIGNING_ALGORITHM, " Access=").concat(credential.getAk(), ", SignedHeaders=").concat(signedHeaderNames, ", Signature=").concat(signatureString)
        };
        Object.assign(allHeaders, authorization);
        return allHeaders;
    };
    AKSKSigner.CanonicalURI = function (inputUri) {
        if (!inputUri) {
            return inputUri;
        }
        var uriList = inputUri.split('/');
        var uri = [];
        for (var item in uriList) {
            var uriValue = uriList[item];
            uri.push(encodeURIComponent(uriValue));
        }
        var urlpath = uri.join('/');
        if (urlpath[urlpath.length - 1] !== '/') {
            urlpath = urlpath + '/';
        }
        return urlpath;
    };
    AKSKSigner.getStringToSign = function (sdkSigningHash, dateTimeStamp, canonicalRequestHash) {
        var arr = [sdkSigningHash, dateTimeStamp, canonicalRequestHash];
        return arr.join("\n");
    };
    // eslint-disable-next-line max-params
    AKSKSigner.buildCanonicalRequest = function (method, canonicalURI, canonicalQueryString, canonicalHeaders, signedHeaderNames, payloadHash) {
        var arr = [method, canonicalURI, canonicalQueryString, canonicalHeaders, signedHeaderNames, payloadHash];
        return arr.join("\n");
    };
    AKSKSigner.buildPayloadHash = function (request) {
        if (request.headers[this.HeaderContentSha256]) {
            return request.headers[this.HeaderContentSha256];
        }
        if (request.data) {
            return this.Hex(JSON.stringify(request.data));
        }
        return this.EMPTY_BODY_SHA256;
    };
    AKSKSigner.buildCanonicalHeaders = function (allHeaders) {
        var sortedKeys = _.sortBy(Object.keys(allHeaders), function (x) {
            return x.toLocaleLowerCase();
        });
        var canonicalHeaders = "";
        for (var _i = 0, sortedKeys_1 = sortedKeys; _i < sortedKeys_1.length; _i++) {
            var key = sortedKeys_1[_i];
            var lowerKey = key.toLocaleLowerCase();
            canonicalHeaders += "".concat(lowerKey, ":").concat(allHeaders[key], "\n");
        }
        return canonicalHeaders;
    };
    AKSKSigner.CanonicalQueryString = function (r) {
        var keys = [];
        for (var key in r.queryParams) {
            keys.push(key);
        }
        keys.sort();
        var a = [];
        for (var i in keys) {
            var key = this.urlEncode(keys[i]);
            var value = r.queryParams[keys[i]];
            if (Array.isArray(value)) {
                value.sort();
                for (var iv in value) {
                    a.push(key + '=' + this.urlEncode(value[iv]));
                }
            }
            else {
                a.push(key + '=' + this.urlEncode(value));
            }
        }
        return a.join('&');
    };
    AKSKSigner.urlEncode = function (str) {
        if (typeof str !== 'string') {
            if (typeof str === 'object')
                str = String(str);
            else
                str += '';
        }
        var out = '';
        var lastPos = 0;
        for (var i = 0; i < str.length; ++i) {
            var c = str.charCodeAt(i);
            // ASCII
            if (c < 0x80) {
                if (this.noEscape[c] === 1)
                    continue;
                if (lastPos < i)
                    out += str.slice(lastPos, i);
                lastPos = i + 1;
                out += this.hexTable()[c];
                continue;
            }
            if (lastPos < i)
                out += str.slice(lastPos, i);
            // Multi-byte characters ...
            if (c < 0x800) {
                lastPos = i + 1;
                out += this.hexTable()[0xC0 | (c >> 6)] + this.hexTable()[0x80 | (c & 0x3F)];
                continue;
            }
            if (c < 0xD800 || c >= 0xE000) {
                lastPos = i + 1;
                out += this.hexTable()[0xE0 | (c >> 12)] +
                    this.hexTable()[0x80 | ((c >> 6) & 0x3F)] +
                    this.hexTable()[0x80 | (c & 0x3F)];
                continue;
            }
            // Surrogate pair
            ++i;
            if (i >= str.length)
                throw new RequiredError('ERR_INVALID_URI');
            var c2 = str.charCodeAt(i) & 0x3FF;
            lastPos = i + 1;
            c = 0x10000 + (((c & 0x3FF) << 10) | c2);
            out += this.hexTable()[0xF0 | (c >> 18)] +
                this.hexTable()[0x80 | ((c >> 12) & 0x3F)] +
                this.hexTable()[0x80 | ((c >> 6) & 0x3F)] +
                this.hexTable()[0x80 | (c & 0x3F)];
        }
        if (lastPos === 0)
            return str;
        if (lastPos < str.length)
            return out + str.slice(lastPos);
        return out;
    };
    AKSKSigner.EMPTY_BODY_SHA256 = "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";
    AKSKSigner.SDK_SIGNING_ALGORITHM = "SDK-HMAC-SHA256";
    AKSKSigner.BasicDateFormat = "YYYYMMDDTHHmmss";
    AKSKSigner.HeaderXDate = "X-Sdk-Date";
    AKSKSigner.HeaderHost = "host";
    AKSKSigner.HeaderContentSha256 = "X-Sdk-Content-Sha256";
    AKSKSigner.hex = [];
    AKSKSigner.noEscape = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0 // 112 - 127
    ];
    AKSKSigner.Hex = function (str) {
        return crypto
            .createHash("sha256")
            .update(str)
            .digest("hex");
    };
    AKSKSigner.hmacSHA256 = function (secretKey, str) {
        return crypto
            // @ts-ignore
            .createHmac("sha256", secretKey)
            .update(str)
            .digest("hex");
    };
    return AKSKSigner;
}());
exports.AKSKSigner = AKSKSigner;
/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
var RequiredError = /** @class */ (function (_super) {
    __extends(RequiredError, _super);
    function RequiredError(field, msg) {
        var _this = _super.call(this, msg) || this;
        _this.field = field;
        _this.name = "RequiredError";
        return _this;
    }
    return RequiredError;
}(Error));
exports.RequiredError = RequiredError;


/***/ }),

/***/ 98794:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BasicCredentials = void 0;
var AKSKSigner_1 = __nccwpck_require__(62420);
var IHttpRequestBuilder_1 = __nccwpck_require__(45547);
var AKSKSigner_2 = __nccwpck_require__(62420);
var iam_service_1 = __nccwpck_require__(44752);
var authcache_1 = __nccwpck_require__(37512);
var BasicCredentials = /** @class */ (function () {
    function BasicCredentials(data) {
        this.ak = data === null || data === void 0 ? void 0 : data.ak;
        this.sk = data === null || data === void 0 ? void 0 : data.sk;
        this.securityToken = data === null || data === void 0 ? void 0 : data.securityToken;
        this.projectId = data === null || data === void 0 ? void 0 : data.projectId;
        this.iamEndpoint = data === null || data === void 0 ? void 0 : data.iamEndpoint;
    }
    BasicCredentials.prototype.withAk = function (ak) {
        this.ak = ak;
        return this;
    };
    BasicCredentials.prototype.withSk = function (sk) {
        this.sk = sk;
        return this;
    };
    BasicCredentials.prototype.withProjectId = function (projectId) {
        this.projectId = projectId;
        return this;
    };
    BasicCredentials.prototype.withSecurityToken = function (securityToken) {
        this.securityToken = securityToken;
        return this;
    };
    BasicCredentials.prototype.withIamEndpoint = function (iamEndpoint) {
        this.iamEndpoint = iamEndpoint;
        return this;
    };
    BasicCredentials.prototype.getAk = function () {
        return this.ak;
    };
    BasicCredentials.prototype.getSk = function () {
        return this.sk;
    };
    BasicCredentials.prototype.setProjectId = function (value) {
        this.projectId = value;
    };
    BasicCredentials.prototype.getPathParams = function () {
        var pathParams = {};
        if (this.projectId) {
            Object.assign(pathParams, { project_id: this.projectId });
        }
        return pathParams;
    };
    BasicCredentials.prototype.processAuthRequest = function (httpRequest) {
        if (!this.ak) {
            throw new AKSKSigner_2.RequiredError('AK cannot be empty or undefined.');
        }
        if (!this.sk) {
            throw new AKSKSigner_2.RequiredError('SK cannot be empty or undefined.');
        }
        var builder = new IHttpRequestBuilder_1.HttpRequestBuilder();
        builder.addPathParams(this.getPathParams());
        // 替换所有的path参数
        if (this.projectId) {
            var url = this.parsePath(httpRequest.endpoint, this.getPathParams());
            builder.withEndpoint(url);
        }
        if (this.projectId) {
            builder.addHeaders("X-Project-Id", this.projectId);
        }
        if (this.securityToken) {
            builder.addHeaders("X-Security-Token", this.securityToken);
        }
        builder.addAllHeaders(httpRequest.headers);
        Object.assign(httpRequest, builder.build());
        var headers = AKSKSigner_1.AKSKSigner.sign(httpRequest, this);
        builder.addAllHeaders(headers);
        return Object.assign(httpRequest, builder.build());
    };
    BasicCredentials.prototype.processAuthParams = function (hcClient, region) {
        var _this = this;
        if (this.projectId) {
            return Promise.resolve(this);
        }
        var authCacheInstance = authcache_1.AuthCache.instance();
        var akWithName = this.getAk() + region;
        if (authCacheInstance.getCache(akWithName)) {
            this.projectId = authCacheInstance.getCache(akWithName);
            return Promise.resolve(this);
        }
        return new iam_service_1.IamService(hcClient, this.iamEndpoint).getProjecId(region).then(function (projectId) {
            authCacheInstance.putCache(akWithName, projectId);
            _this.projectId = projectId;
            return _this;
        });
    };
    BasicCredentials.prototype.parsePath = function (path, params) {
        if (!path || !params) {
            return path;
        }
        return Object.keys(params).reduce(function (parsedPath, param) {
            var value = encodeURIComponent(params[param]);
            return parsedPath.replace(new RegExp("{".concat(param, "}")), value);
        }, path);
    };
    return BasicCredentials;
}());
exports.BasicCredentials = BasicCredentials;


/***/ }),

/***/ 96831:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GlobalCredentials = void 0;
var AKSKSigner_1 = __nccwpck_require__(62420);
var IHttpRequestBuilder_1 = __nccwpck_require__(45547);
var AKSKSigner_2 = __nccwpck_require__(62420);
var iam_service_1 = __nccwpck_require__(44752);
var authcache_1 = __nccwpck_require__(37512);
var GlobalCredentials = /** @class */ (function () {
    function GlobalCredentials(data) {
        if (data === void 0) { data = {}; }
        this.ak = data === null || data === void 0 ? void 0 : data.ak;
        this.sk = data === null || data === void 0 ? void 0 : data.sk;
        this.securityToken = data === null || data === void 0 ? void 0 : data.securityToken;
        this.domainId = data === null || data === void 0 ? void 0 : data.domainId;
        this.iamEndpoint = data === null || data === void 0 ? void 0 : data.iamEndpoint;
    }
    GlobalCredentials.prototype.withAk = function (ak) {
        this.ak = ak;
        return this;
    };
    GlobalCredentials.prototype.withSk = function (sk) {
        this.sk = sk;
        return this;
    };
    GlobalCredentials.prototype.withDomainId = function (domainId) {
        this.domainId = domainId;
        return this;
    };
    GlobalCredentials.prototype.withSecurityToken = function (securityToken) {
        this.securityToken = securityToken;
        return this;
    };
    GlobalCredentials.prototype.withIamEndpoint = function (iamEndpoint) {
        this.iamEndpoint = iamEndpoint;
        return this;
    };
    GlobalCredentials.prototype.getAk = function () {
        if (!this.ak) {
            throw new AKSKSigner_2.RequiredError('AK cannot be empty or undefined.');
        }
        return this.ak;
    };
    GlobalCredentials.prototype.getSk = function () {
        if (!this.sk) {
            throw new AKSKSigner_2.RequiredError('SK cannot be empty or undefined.');
        }
        return this.sk;
    };
    GlobalCredentials.prototype.setDomainId = function (value) {
        this.domainId = value;
    };
    GlobalCredentials.prototype.getPathParams = function () {
        var pathParams = {};
        if (this.domainId) {
            Object.assign(pathParams, { domain_id: this.domainId });
        }
        return pathParams;
    };
    GlobalCredentials.prototype.processAuthRequest = function (httpRequest) {
        if (this.ak === null || this.ak === undefined) {
            throw new AKSKSigner_2.RequiredError('AK cannot be empty or undefined.');
        }
        if (this.sk === null || this.sk === undefined) {
            throw new AKSKSigner_2.RequiredError('SK cannot be empty or undefined.');
        }
        var builder = new IHttpRequestBuilder_1.HttpRequestBuilder();
        builder.addPathParams(this.getPathParams());
        // 替换所有的path参数
        if (this.domainId) {
            var url = parsePath(httpRequest.endpoint, this.getPathParams());
            builder.withEndpoint(url);
        }
        if (this.domainId) {
            builder.addHeaders("X-Domain-Id", this.domainId);
        }
        if (this.securityToken) {
            builder.addHeaders("X-Security-Token", this.securityToken);
        }
        builder.addAllHeaders(httpRequest.headers);
        Object.assign(httpRequest, builder.build());
        var headers = AKSKSigner_1.AKSKSigner.sign(httpRequest, this);
        builder.addAllHeaders(headers);
        return Object.assign(httpRequest, builder.build());
    };
    GlobalCredentials.prototype.processAuthParams = function (hcClient) {
        var _this = this;
        if (this.domainId) {
            return Promise.resolve(this);
        }
        var authCacheInstance = authcache_1.AuthCache.instance();
        var akWithName = this.getAk();
        if (authCacheInstance.getCache(akWithName)) {
            this.domainId = authCacheInstance.getCache(akWithName);
            return Promise.resolve(this);
        }
        return new iam_service_1.IamService(hcClient, this.iamEndpoint).getDomainId().then(function (domainId) {
            authCacheInstance.putCache(akWithName, domainId);
            _this.domainId = domainId;
            return _this;
        });
    };
    return GlobalCredentials;
}());
exports.GlobalCredentials = GlobalCredentials;
function parsePath(path, params) {
    if (!path || !params) {
        return path;
    }
    return Object.keys(params).reduce(function (parsedPath, param) {
        var value = encodeURIComponent(params[param]);
        return parsedPath.replace(new RegExp("{".concat(param, "}")), value);
    }, path);
}


/***/ }),

/***/ 49210:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ClientRequestException = void 0;
var ServiceResponseException_1 = __nccwpck_require__(37664);
var ClientRequestException = /** @class */ (function (_super) {
    __extends(ClientRequestException, _super);
    function ClientRequestException(httpStatusCode, errorMsg, errorCode, requestId) {
        var _this = _super.call(this, httpStatusCode, errorMsg, errorCode, requestId) || this;
        _this.name = 'ClientRequestException';
        return _this;
    }
    return ClientRequestException;
}(ServiceResponseException_1.ServiceResponseException));
exports.ClientRequestException = ClientRequestException;


/***/ }),

/***/ 13106:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExceptionUtil = void 0;
var ClientRequestException_1 = __nccwpck_require__(49210);
var ServerResponseException_1 = __nccwpck_require__(84329);
var ServiceResponseException_1 = __nccwpck_require__(37664);
var ExceptionUtil = /** @class */ (function () {
    function ExceptionUtil() {
    }
    ExceptionUtil.generalException = function (exception) {
        var data = exception.data || {};
        var errorCode = data.error ? data.error.code : exception.status;
        var errorMsg = data.error ? data.error.message : exception.message;
        var requestId = exception.requestId;
        var httpStatusCode = exception.status;
        if (httpStatusCode) {
            if (httpStatusCode >= 400 && httpStatusCode < 500) {
                return new ClientRequestException_1.ClientRequestException(httpStatusCode, errorMsg, errorCode, requestId);
            }
            else if (httpStatusCode >= 500 && httpStatusCode < 600) {
                return new ServerResponseException_1.ServerResponseException(httpStatusCode, errorMsg, errorCode, requestId);
            }
        }
        return new ServiceResponseException_1.ServiceResponseException(httpStatusCode, errorMsg, errorCode, requestId);
    };
    return ExceptionUtil;
}());
exports.ExceptionUtil = ExceptionUtil;


/***/ }),

/***/ 30576:
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SdkException = void 0;
var SdkException = /** @class */ (function (_super) {
    __extends(SdkException, _super);
    function SdkException(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'SdkException';
        return _this;
    }
    return SdkException;
}(Error));
exports.SdkException = SdkException;


/***/ }),

/***/ 84329:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerResponseException = void 0;
var ServiceResponseException_1 = __nccwpck_require__(37664);
var ServerResponseException = /** @class */ (function (_super) {
    __extends(ServerResponseException, _super);
    function ServerResponseException(httpStatusCode, errorMsg, errorCode, requestId) {
        var _this = _super.call(this, httpStatusCode, errorMsg, errorCode, requestId) || this;
        _this.name = 'ServerResponseException';
        return _this;
    }
    return ServerResponseException;
}(ServiceResponseException_1.ServiceResponseException));
exports.ServerResponseException = ServerResponseException;


/***/ }),

/***/ 37664:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServiceResponseException = void 0;
var SdkException_1 = __nccwpck_require__(30576);
var ServiceResponseException = /** @class */ (function (_super) {
    __extends(ServiceResponseException, _super);
    function ServiceResponseException(httpStatusCode, errorMsg, errorCode, requestId) {
        var _this = _super.call(this, errorMsg) || this;
        _this.name = 'ServiceResponseException';
        _this.httpStatusCode = httpStatusCode;
        _this.errorMsg = errorMsg;
        _this.errorCode = errorCode;
        _this.requestId = requestId;
        return _this;
    }
    return ServiceResponseException;
}(SdkException_1.SdkException));
exports.ServiceResponseException = ServiceResponseException;


/***/ }),

/***/ 69873:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultHttpClient = void 0;
var axios_1 = __importDefault(__nccwpck_require__(96545));
var querystring_1 = __nccwpck_require__(63477);
var HttpsProxyAgent = __nccwpck_require__(77219);
var logger_1 = __nccwpck_require__(91251);
var DefaultHttpClient = /** @class */ (function () {
    function DefaultHttpClient(options) {
        if (options === void 0) { options = {}; }
        // A request header consists of its case-insensitive name followed by a colon ':'
        // from: https://developer.mozilla.org/zh-TW/docs/Web/HTTP/Headers
        this.DEFAULT_HEADERS = {
            Accept: 'application/json',
            'content-type': 'application/json'
        };
        this.defaultOption = options;
        // Logging
        if (typeof options.logger !== 'undefined') {
            this.logger = options.logger;
            if (typeof options.logLevel !== 'undefined') {
                this.logger.debug('The logLevel given to client was ignored as you also gave logger');
            }
        }
        else {
            this.logger = (0, logger_1.getLogger)(DefaultHttpClient.loggerName, options.logLevel || logger_1.LogLevel.ERROR, options.logger);
        }
        this.init();
    }
    DefaultHttpClient.prototype.init = function () {
        var _this = this;
        // proxy
        var proxyAgent;
        if (this.defaultOption.proxy && this.defaultOption.proxy !== '') {
            proxyAgent = HttpsProxyAgent(this.defaultOption.proxy);
        }
        this.axiosInstance = axios_1.default.create({
            maxContentLength: Infinity,
            headers: Object.assign(this.DEFAULT_HEADERS, this.defaultOption.headers),
            proxy: false,
            httpAgent: proxyAgent,
            httpsAgent: proxyAgent
        });
        this.axiosInstance.interceptors.request.use(function (request) {
            var url = request.url, method = request.method, data = request.data, headers = request.headers;
            _this.logger.debug("Request: ".concat(method.toUpperCase(), " ").concat(url, " ").concat(JSON.stringify(headers), " ").concat(JSON.stringify(data)));
            return request;
        });
        this.axiosInstance.interceptors.response.use(function (response) {
            var _a = response.config, url = _a.url, method = _a.method, status = response.status, statusText = response.statusText, headers = response.headers;
            var statusStr = '';
            if (status && statusText) {
                statusStr += "".concat(status, ":").concat(statusText, " ");
            }
            else if (status) {
                statusStr += "".concat(status, " ");
            }
            else if (statusText) {
                statusStr += "".concat(statusText, " ");
            }
            var requestId = response.headers ? response.headers['x-request-id'] : undefined;
            var reponseLength = response.result ? JSON.stringify(response.result).length : 1;
            _this.logger.debug("Response: ".concat(method.toUpperCase(), " ").concat(statusStr, " ").concat(url, " ").concat(JSON.stringify(headers), " ").concat(reponseLength, " ").concat(requestId));
            return response;
        });
        delete this.axiosInstance.defaults.headers.post['Content-Type'];
        delete this.axiosInstance.defaults.headers.put['Content-Type'];
        this.logger.debug('initialized');
    };
    DefaultHttpClient.prototype.sendRequest = function (httpRequest) {
        var _this = this;
        return this._request(httpRequest).then(function (res) {
            DefaultHttpClient.httpResponse = res;
            var result = _this._convertResponse(httpRequest, res);
            return {
                data: result instanceof String ? undefined : result,
                statusCode: res.status,
                headers: res.headers
            };
        }).catch(function (err) {
            // TODO:
            DefaultHttpClient.httpResponse = err;
            var errorRespone = _this.formatError(err);
            _this.logger.error('some error found:', errorRespone);
            throw errorRespone;
        });
    };
    DefaultHttpClient.prototype._request = function (httpRequest) {
        return __awaiter(this, void 0, void 0, function () {
            var endpoint, queryParams, method, data, headers, url, customUserAgent, requestParams, methods, res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        endpoint = httpRequest.endpoint, queryParams = httpRequest.queryParams, method = httpRequest.method, data = httpRequest.data, headers = httpRequest.headers;
                        headers = headers || {};
                        this.logger.debug("send request start: ".concat(endpoint, " "));
                        url = endpoint;
                        url = stripTrailingSlash(url);
                        if (this.defaultOption.headers) {
                            customUserAgent = this.defaultOption.headers['User-Agent'];
                            if (customUserAgent) {
                                headers['User-Agent'] = ["huaweicloud-usdk-nodejs/3.0", customUserAgent].join(" ");
                            }
                            else {
                                headers['User-Agent'] = "huaweicloud-usdk-nodejs/3.0";
                            }
                        }
                        requestParams = {
                            url: url,
                            method: method,
                            headers: headers,
                            params: queryParams,
                            data: data,
                            paramsSerializer: function (params) {
                                return (0, querystring_1.stringify)(params);
                            },
                        };
                        methods = ['PUT', 'POST', 'PATCH', 'DELETE'];
                        if (method && methods.indexOf(method.toUpperCase()) !== -1) {
                            requestParams = Object.assign(requestParams, {
                                transformRequest: [this.transformOptions.bind(this)]
                            });
                        }
                        // TODO
                        DefaultHttpClient.httpReqParam = requestParams;
                        return [4 /*yield*/, this.axiosInstance(requestParams)];
                    case 1:
                        res = _a.sent();
                        return [2 /*return*/, res];
                }
            });
        });
    };
    DefaultHttpClient.prototype._convertResponse = function (httpRequest, axiosResult) {
        if (httpRequest['responseHeaders'] && axiosResult.data) {
            var responseHeaders = httpRequest['responseHeaders'];
            for (var _i = 0, responseHeaders_1 = responseHeaders; _i < responseHeaders_1.length; _i++) {
                var item = responseHeaders_1[_i];
                var lowerItem = item.toString().toLowerCase();
                if (!axiosResult.data[item] && axiosResult.headers[lowerItem]) {
                    axiosResult.data[item] = axiosResult.headers[lowerItem];
                }
            }
        }
        return axiosResult.data;
    };
    DefaultHttpClient.prototype.transformOptions = function (data, headers) {
        if (headers['content-type'] === 'multipart/form-data') {
            // data is form-data object
            for (var _i = 0, _a = Object.entries(data.getHeaders()); _i < _a.length; _i++) {
                var _b = _a[_i], header = _b[0], value = _b[1];
                headers[header] = value;
            }
            return data;
        }
        headers['content-type'] = 'application/json';
        return JSON.stringify(data);
    };
    DefaultHttpClient.prototype.formatError = function (error) {
        var _a;
        var transformedResponse = {
            data: error.response ? error.response.data : undefined,
            status: error.response ? error.response.status : undefined,
            headers: error.response ? error.response.headers : undefined,
            message: error.message || undefined,
            config: error.config,
            originalError: error,
            requestId: (_a = error.response) === null || _a === void 0 ? void 0 : _a.headers['x-request-id']
        };
        return transformedResponse;
    };
    DefaultHttpClient.loggerName = "DefaultHttpClient";
    return DefaultHttpClient;
}());
exports.DefaultHttpClient = DefaultHttpClient;
function stripTrailingSlash(url) {
    // Match a forward slash / at the end of the string ($)
    // @ts-ignore
    return url.replace(/\/$/, '');
}


/***/ }),

/***/ 92980:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpRequestImpl = void 0;
var HttpRequestImpl = /** @class */ (function () {
    function HttpRequestImpl() {
    }
    HttpRequestImpl.prototype.getPathParams = function () {
        if (!this.pathParams) {
            this.pathParams = {};
        }
        return this.pathParams;
    };
    HttpRequestImpl.prototype.getQueryParams = function () {
        if (!this.queryParams) {
            this.queryParams = {};
        }
        return this.queryParams;
    };
    HttpRequestImpl.prototype.getData = function () {
        if (!this.data) {
            this.data = {};
        }
        return this.pathParams;
    };
    HttpRequestImpl.prototype.getHeaders = function () {
        if (!this.headers) {
            this.headers = {};
        }
        return this.headers;
    };
    return HttpRequestImpl;
}());
exports.HttpRequestImpl = HttpRequestImpl;


/***/ }),

/***/ 45547:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/*
 * Copyright 2020 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpRequestBuilder = void 0;
var IHttpRequest_1 = __nccwpck_require__(92980);
var HttpRequestBuilder = /** @class */ (function () {
    function HttpRequestBuilder(httpRequest) {
        this.httpRequest = httpRequest || new IHttpRequest_1.HttpRequestImpl();
    }
    HttpRequestBuilder.prototype.build = function () {
        return this.httpRequest;
    };
    HttpRequestBuilder.prototype.withEndpoint = function (value) {
        this.httpRequest.endpoint = value;
        return this;
    };
    HttpRequestBuilder.prototype.withContentType = function (value) {
        this.httpRequest.contentType = value;
        return this;
    };
    HttpRequestBuilder.prototype.withMethod = function (value) {
        this.httpRequest.method = value;
        return this;
    };
    HttpRequestBuilder.prototype.withQueryParams = function (value) {
        this.httpRequest.queryParams = value;
        return this;
    };
    HttpRequestBuilder.prototype.withPathParams = function (value) {
        this.httpRequest.pathParams = value;
        return this;
    };
    HttpRequestBuilder.prototype.withHeaders = function (value) {
        this.httpRequest.headers = value;
        return this;
    };
    HttpRequestBuilder.prototype.withData = function (value) {
        this.httpRequest.data = value;
        return this;
    };
    HttpRequestBuilder.prototype.addPathParams = function (pathParams) {
        Object.assign(this.httpRequest.getPathParams(), pathParams);
        return this;
    };
    HttpRequestBuilder.prototype.addQueryParams = function (queryParams) {
        Object.assign(this.httpRequest.getQueryParams, queryParams);
        return this;
    };
    HttpRequestBuilder.prototype.addHeaders = function (key, value) {
        var headers = this.httpRequest.getHeaders();
        if (!headers[key]) {
            this.httpRequest.headers[key] = value;
        }
        return this;
    };
    HttpRequestBuilder.prototype.addAllHeaders = function (header) {
        Object.assign(this.httpRequest.getHeaders(), header);
        return this;
    };
    return HttpRequestBuilder;
}());
exports.HttpRequestBuilder = HttpRequestBuilder;


/***/ }),

/***/ 24820:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * Generated bundle index. Do not edit.
 */
__exportStar(__nccwpck_require__(50868), exports);


/***/ }),

/***/ 26571:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2021 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateProjectRequest = void 0;
var KeystoneCreateProjectRequest = /** @class */ (function () {
    function KeystoneCreateProjectRequest() {
    }
    KeystoneCreateProjectRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateProjectRequest;
}());
exports.KeystoneCreateProjectRequest = KeystoneCreateProjectRequest;


/***/ }),

/***/ 46191:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2021 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListProjectsRequest = void 0;
var KeystoneListProjectsRequest = /** @class */ (function () {
    function KeystoneListProjectsRequest() {
    }
    KeystoneListProjectsRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneListProjectsRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListProjectsRequest.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneListProjectsRequest.prototype.withParentId = function (parentId) {
        this['parent_id'] = parentId;
        return this;
    };
    Object.defineProperty(KeystoneListProjectsRequest.prototype, "parentId", {
        get: function () {
            return this['parent_id'];
        },
        set: function (parentId) {
            this['parent_id'] = parentId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListProjectsRequest.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    KeystoneListProjectsRequest.prototype.withIsDomain = function (isDomain) {
        this['is_domain'] = isDomain;
        return this;
    };
    Object.defineProperty(KeystoneListProjectsRequest.prototype, "isDomain", {
        get: function () {
            return this['is_domain'];
        },
        set: function (isDomain) {
            this['is_domain'] = isDomain;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListProjectsRequest.prototype.withPage = function (page) {
        this['page'] = page;
        return this;
    };
    KeystoneListProjectsRequest.prototype.withPerPage = function (perPage) {
        this['per_page'] = perPage;
        return this;
    };
    Object.defineProperty(KeystoneListProjectsRequest.prototype, "perPage", {
        get: function () {
            return this['per_page'];
        },
        set: function (perPage) {
            this['per_page'] = perPage;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListProjectsRequest;
}());
exports.KeystoneListProjectsRequest = KeystoneListProjectsRequest;


/***/ }),

/***/ 37512:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2021 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AuthCache = void 0;
var instance;
var AuthCache = /** @class */ (function () {
    function AuthCache() {
        this.authMap = new Map();
    }
    AuthCache.instance = function () {
        if (!instance) {
            instance = new AuthCache();
        }
        return instance;
    };
    AuthCache.prototype.putCache = function (key, value) {
        this.authMap.set(key, value);
    };
    AuthCache.prototype.getCache = function (key) {
        return this.authMap.get(key);
    };
    return AuthCache;
}());
exports.AuthCache = AuthCache;


/***/ }),

/***/ 44752:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/*
 * Copyright 2021 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IamService = void 0;
var SdkException_1 = __nccwpck_require__(30576);
var KeystoneCreateProjectRequest_1 = __nccwpck_require__(26571);
var KeystoneListProjectsRequest_1 = __nccwpck_require__(46191);
var lodash_1 = __nccwpck_require__(90250);
var IamService = /** @class */ (function () {
    function IamService(hclient, iamEndpoint) {
        this.client = (0, lodash_1.cloneDeep)(hclient);
        this.client.withEndpoint(iamEndpoint !== null && iamEndpoint !== void 0 ? iamEndpoint : IamService.DEFAULT_IAM_ENDPOINT);
        this.client.withRegion(undefined);
    }
    IamService.prototype.getProjecId = function (regionId) {
        return __awaiter(this, void 0, void 0, function () {
            var request;
            var _this = this;
            return __generator(this, function (_a) {
                request = new KeystoneListProjectsRequest_1.KeystoneListProjectsRequest();
                request.name = regionId;
                return [2 /*return*/, this.keystoneListProjects(request).then(function (projectRes) {
                        if (projectRes.projects && projectRes.projects.length == 1) {
                            return projectRes.projects[0].id;
                        }
                        else {
                            return _this.getCreateProjectId(regionId);
                        }
                    }).catch(function (error) {
                        console.log(error);
                        throw new SdkException_1.SdkException(error);
                    })];
            });
        });
    };
    IamService.prototype.getDomainId = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getAuthDomainId()];
            });
        });
    };
    IamService.prototype.getCreateProjectId = function (regionId) {
        return __awaiter(this, void 0, void 0, function () {
            var supportedRegions, domainId, createReq, createRes;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getSupportedRegions()];
                    case 1:
                        supportedRegions = _a.sent();
                        if (!supportedRegions || supportedRegions.length <= 0) {
                            throw new SdkException_1.SdkException("failed to list regions");
                        }
                        if (!(0, lodash_1.includes)(supportedRegions, regionId)) {
                            throw new SdkException_1.SdkException("the region input is not supported to create project automatically");
                        }
                        return [4 /*yield*/, this.getAuthDomainId()];
                    case 2:
                        domainId = _a.sent();
                        if (!domainId) {
                            throw new SdkException_1.SdkException("No domain id found, please select one of the following solutions:\n\t"
                                + "1. Manually specify domain_id when initializing the credentials.\n\t"
                                + "2. Use the domain account to grant the current account permissions of the IAM service.\n\t"
                                + "3. Use AK/SK of the domain account.");
                        }
                        createReq = new KeystoneCreateProjectRequest_1.KeystoneCreateProjectRequest();
                        createReq.withBody({
                            project: {
                                name: regionId,
                                domain_id: domainId
                            }
                        });
                        return [4 /*yield*/, this.keystoneCreateProject(createReq)];
                    case 3:
                        createRes = _a.sent();
                        if (!createRes.project) {
                            throw new SdkException_1.SdkException("failed to create project");
                        }
                        return [2 /*return*/, createRes.project.id];
                }
            });
        });
    };
    IamService.prototype.getSupportedRegions = function () {
        return __awaiter(this, void 0, void 0, function () {
            var publicRegionType, res, ans;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        publicRegionType = "public";
                        return [4 /*yield*/, this.keystoneListRegions()];
                    case 1:
                        res = _a.sent();
                        if (!res) {
                            throw new SdkException_1.SdkException("failed to list all regions");
                        }
                        ans = (0, lodash_1.filter)(res.regions, function (item) {
                            return publicRegionType === item.type;
                        }).map(function (item) {
                            return item.id;
                        });
                        return [2 /*return*/, ans];
                }
            });
        });
    };
    IamService.prototype.getAuthDomainId = function () {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.keystoneListAuthDomains()];
                    case 1:
                        res = _a.sent();
                        if (!res || !res.domains || res.domains.length <= 0) {
                            throw new SdkException_1.SdkException("No domain id found, please select one of the following solutions:\n\t"
                                + "1. Manually specify domain_id when initializing the credentials.\n\t"
                                + "2. Use the domain account to grant the current account permissions of the IAM service.\n\t"
                                + "3. Use AK/SK of the domain account.");
                        }
                        return [2 /*return*/, res.domains[0].id];
                }
            });
        });
    };
    IamService.prototype.keystoneListRegions = function () {
        var options = {
            method: "GET",
            url: "/v3/regions",
            contentType: "application/json",
            queryParams: {},
            pathParams: {},
            headers: {},
            data: {}
        };
        var localVarHeaderParameter = {};
        options.headers = localVarHeaderParameter;
        return this.client.sendRequest(options);
    };
    IamService.prototype.keystoneListProjects = function (keystoneListProjectsRequest) {
        var options = {
            method: "GET",
            url: "/v3/projects",
            contentType: "application/json",
            queryParams: {},
            pathParams: {},
            headers: {},
            data: {}
        };
        var localVarHeaderParameter = {};
        var localVarQueryParameter = {};
        var domainId;
        var name;
        var parentId;
        var enabled;
        var isDomain;
        var page;
        var perPage;
        if (keystoneListProjectsRequest !== null && keystoneListProjectsRequest !== undefined) {
            if (keystoneListProjectsRequest instanceof KeystoneListProjectsRequest_1.KeystoneListProjectsRequest) {
                domainId = keystoneListProjectsRequest.domainId;
                name = keystoneListProjectsRequest.name;
                parentId = keystoneListProjectsRequest.parentId;
                enabled = keystoneListProjectsRequest.enabled;
                isDomain = keystoneListProjectsRequest.isDomain;
                page = keystoneListProjectsRequest.page;
                perPage = keystoneListProjectsRequest.perPage;
            }
            else {
                domainId = keystoneListProjectsRequest['domain_id'];
                name = keystoneListProjectsRequest['name'];
                parentId = keystoneListProjectsRequest['parent_id'];
                enabled = keystoneListProjectsRequest['enabled'];
                isDomain = keystoneListProjectsRequest['is_domain'];
                page = keystoneListProjectsRequest['page'];
                perPage = keystoneListProjectsRequest['per_page'];
            }
        }
        if (domainId !== null && domainId !== undefined) {
            localVarQueryParameter['domain_id'] = domainId;
        }
        if (name !== null && name !== undefined) {
            localVarQueryParameter['name'] = name;
        }
        if (parentId !== null && parentId !== undefined) {
            localVarQueryParameter['parent_id'] = parentId;
        }
        if (enabled !== null && enabled !== undefined) {
            localVarQueryParameter['enabled'] = enabled;
        }
        if (isDomain !== null && isDomain !== undefined) {
            localVarQueryParameter['is_domain'] = isDomain;
        }
        if (page !== null && page !== undefined) {
            localVarQueryParameter['page'] = page;
        }
        if (perPage !== null && perPage !== undefined) {
            localVarQueryParameter['per_page'] = perPage;
        }
        options.queryParams = localVarQueryParameter;
        options.headers = localVarHeaderParameter;
        return this.client.sendRequest(options);
    };
    IamService.prototype.keystoneCreateProject = function (keystoneCreateProjectRequest) {
        var options = {
            method: "POST",
            url: "/v3/projects",
            contentType: "application/json;charset=UTF-8",
            queryParams: {},
            pathParams: {},
            headers: {},
            data: {}
        };
        var localVarHeaderParameter = {};
        var body;
        if (keystoneCreateProjectRequest !== null && keystoneCreateProjectRequest !== undefined) {
            if (keystoneCreateProjectRequest instanceof KeystoneCreateProjectRequest_1.KeystoneCreateProjectRequest) {
                body = keystoneCreateProjectRequest.body;
            }
            else {
                body = keystoneCreateProjectRequest['body'];
            }
        }
        options.data = body !== undefined ? body : {};
        options.headers = localVarHeaderParameter;
        return this.client.sendRequest(options);
    };
    IamService.prototype.keystoneListAuthDomains = function () {
        var options = {
            method: "GET",
            url: "/v3/auth/domains",
            contentType: "application/json",
            queryParams: {},
            pathParams: {},
            headers: {},
            data: {}
        };
        options.headers = {};
        return this.client.sendRequest(options);
    };
    IamService.DEFAULT_IAM_ENDPOINT = "https://iam.huaweicloud.com";
    return IamService;
}());
exports.IamService = IamService;


/***/ }),

/***/ 91251:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

/*
 * Copyright 2021 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getLogger = exports.LocalLogger = exports.LoggerUtils = exports.LogLevel = void 0;
var log4jLogger_1 = __nccwpck_require__(87014);
var LogLevel;
(function (LogLevel) {
    LogLevel["ERROR"] = "error";
    LogLevel["DEBUG"] = "debug";
    LogLevel["INFO"] = "info";
    LogLevel["WARN"] = "warn";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
var LoggerUtils = /** @class */ (function () {
    function LoggerUtils() {
    }
    LoggerUtils.isMoreOrEqualSevere = function (a, b) {
        return LoggerUtils.severity[a] >= LoggerUtils.severity[b];
    };
    /** Map of severity as comparable numbers for each log level */
    LoggerUtils.severity = (_a = {},
        _a[LogLevel.ERROR] = 400,
        _a[LogLevel.WARN] = 300,
        _a[LogLevel.INFO] = 200,
        _a[LogLevel.DEBUG] = 100,
        _a);
    return LoggerUtils;
}());
exports.LoggerUtils = LoggerUtils;
var LocalLogger = /** @class */ (function () {
    function LocalLogger() {
        this.level = LogLevel.INFO;
    }
    LocalLogger.prototype.debug = function () {
        var msg = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            msg[_i] = arguments[_i];
        }
        if (LoggerUtils.isMoreOrEqualSevere(LogLevel.DEBUG, this.level)) {
            log4jLogger_1.Logger4jInstance.debug.apply(log4jLogger_1.Logger4jInstance, __spreadArray([this.name], msg, false));
        }
    };
    LocalLogger.prototype.info = function () {
        var msg = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            msg[_i] = arguments[_i];
        }
        if (LoggerUtils.isMoreOrEqualSevere(LogLevel.INFO, this.level)) {
            log4jLogger_1.Logger4jInstance.info.apply(log4jLogger_1.Logger4jInstance, __spreadArray([this.name], msg, false));
        }
    };
    LocalLogger.prototype.warn = function () {
        var msg = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            msg[_i] = arguments[_i];
        }
        if (LoggerUtils.isMoreOrEqualSevere(LogLevel.WARN, this.level)) {
            log4jLogger_1.Logger4jInstance.warn.apply(log4jLogger_1.Logger4jInstance, __spreadArray([this.name], msg, false));
        }
    };
    LocalLogger.prototype.error = function () {
        var msg = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            msg[_i] = arguments[_i];
        }
        if (LoggerUtils.isMoreOrEqualSevere(LogLevel.ERROR, this.level)) {
            log4jLogger_1.Logger4jInstance.error.apply(log4jLogger_1.Logger4jInstance, __spreadArray([this.name], msg, false));
        }
    };
    LocalLogger.prototype.setLevel = function (level) {
        this.level = level;
    };
    LocalLogger.prototype.getLevel = function () {
        return this.level;
    };
    LocalLogger.prototype.setName = function (name) {
        this.name = name;
    };
    return LocalLogger;
}());
exports.LocalLogger = LocalLogger;
var instanceCount = 0;
function getLogger(name, level, existingLogger) {
    var instanceId = instanceCount;
    instanceCount += 1;
    var logger = (function () {
        if (existingLogger !== undefined) {
            return existingLogger;
        }
        return new LocalLogger();
    })();
    if (level !== undefined) {
        logger.setLevel(level);
    }
    logger.setName("nodesdk:".concat(name, ":").concat(instanceId));
    if (process.env.DEBUG === "DEBUG") {
        logger.setLevel(LogLevel.DEBUG);
    }
    return logger;
}
exports.getLogger = getLogger;


/***/ }),

/***/ 87014:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

/*
 * Copyright 2021 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Logger4jInstance = void 0;
var log4js_1 = __nccwpck_require__(13048);
(0, log4js_1.configure)({
    appenders: {
        console: { type: 'stdout', layout: { type: 'colored' } },
        dateFile: {
            type: 'dateFile',
            filename: "HuaweiCloud-SDK-Access.log",
            layout: {
                type: 'pattern',
                pattern: '[%d] [%p] - %l %m%n'
            },
            compress: true,
            daysToKeep: 7,
            keepFileExt: true
        },
    },
    categories: {
        default: { appenders: ['console'], level: 'debug', enableCallStack: true }
    }
});
exports.Logger4jInstance = (0, log4js_1.getLogger)();


/***/ }),

/***/ 50868:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__nccwpck_require__(98794), exports);
__exportStar(__nccwpck_require__(96831), exports);
__exportStar(__nccwpck_require__(64477), exports);


/***/ }),

/***/ 64477:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright 2021 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Region = void 0;
var Region = /** @class */ (function () {
    function Region(id, endpoint) {
        this.id = id;
        this.endpoint = endpoint;
    }
    return Region;
}());
exports.Region = Region;


/***/ }),

/***/ 36757:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__nccwpck_require__(81892), exports);


/***/ }),

/***/ 73674:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RequiredError = exports.ParamCreater = exports.IamClient = void 0;
var ClientBuilder_1 = __nccwpck_require__(35414);
var AssociateAgencyWithAllProjectsPermissionRequest_1 = __nccwpck_require__(18657);
var AssociateAgencyWithDomainPermissionRequest_1 = __nccwpck_require__(70970);
var AssociateAgencyWithProjectPermissionRequest_1 = __nccwpck_require__(48129);
var AssociateRoleToGroupOnEnterpriseProjectRequest_1 = __nccwpck_require__(88169);
var AssociateRoleToUserOnEnterpriseProjectRequest_1 = __nccwpck_require__(86383);
var CheckAllProjectsPermissionForAgencyRequest_1 = __nccwpck_require__(12508);
var CheckDomainPermissionForAgencyRequest_1 = __nccwpck_require__(6150);
var CheckProjectPermissionForAgencyRequest_1 = __nccwpck_require__(24791);
var CreateAgencyCustomPolicyRequest_1 = __nccwpck_require__(14474);
var CreateAgencyRequest_1 = __nccwpck_require__(7030);
var CreateBindingDeviceRequest_1 = __nccwpck_require__(96546);
var CreateCloudServiceCustomPolicyRequest_1 = __nccwpck_require__(97755);
var CreateLoginTokenRequest_1 = __nccwpck_require__(86181);
var CreateMetadataRequest_1 = __nccwpck_require__(49521);
var CreateMfaDeviceRequest_1 = __nccwpck_require__(55554);
var CreateOpenIdConnectConfigRequest_1 = __nccwpck_require__(52774);
var CreatePermanentAccessKeyRequest_1 = __nccwpck_require__(40275);
var CreateTemporaryAccessKeyByAgencyRequest_1 = __nccwpck_require__(37533);
var CreateTemporaryAccessKeyByTokenRequest_1 = __nccwpck_require__(53831);
var CreateTokenWithIdTokenRequest_1 = __nccwpck_require__(58293);
var CreateUnscopedTokenWithIdTokenRequest_1 = __nccwpck_require__(15413);
var CreateUserRequest_1 = __nccwpck_require__(13826);
var DeleteAgencyRequest_1 = __nccwpck_require__(73989);
var DeleteBindingDeviceRequest_1 = __nccwpck_require__(59928);
var DeleteCustomPolicyRequest_1 = __nccwpck_require__(51487);
var DeleteDomainGroupInheritedRoleRequest_1 = __nccwpck_require__(92910);
var DeleteMfaDeviceRequest_1 = __nccwpck_require__(28204);
var DeletePermanentAccessKeyRequest_1 = __nccwpck_require__(96396);
var KeystoneAddUserToGroupRequest_1 = __nccwpck_require__(79051);
var KeystoneAssociateGroupWithDomainPermissionRequest_1 = __nccwpck_require__(5998);
var KeystoneAssociateGroupWithProjectPermissionRequest_1 = __nccwpck_require__(46603);
var KeystoneCheckDomainPermissionForGroupRequest_1 = __nccwpck_require__(34270);
var KeystoneCheckProjectPermissionForGroupRequest_1 = __nccwpck_require__(4861);
var KeystoneCheckUserInGroupRequest_1 = __nccwpck_require__(25761);
var KeystoneCheckroleForGroupRequest_1 = __nccwpck_require__(65967);
var KeystoneCreateAgencyTokenRequest_1 = __nccwpck_require__(84896);
var KeystoneCreateGroupRequest_1 = __nccwpck_require__(66568);
var KeystoneCreateIdentityProviderRequest_1 = __nccwpck_require__(86032);
var KeystoneCreateMappingRequest_1 = __nccwpck_require__(59376);
var KeystoneCreateProjectRequest_1 = __nccwpck_require__(5507);
var KeystoneCreateProtocolRequest_1 = __nccwpck_require__(181);
var KeystoneCreateScopedTokenRequest_1 = __nccwpck_require__(19282);
var KeystoneCreateUserRequest_1 = __nccwpck_require__(76868);
var KeystoneCreateUserTokenByPasswordAndMfaRequest_1 = __nccwpck_require__(33670);
var KeystoneCreateUserTokenByPasswordRequest_1 = __nccwpck_require__(4892);
var KeystoneDeleteGroupRequest_1 = __nccwpck_require__(20274);
var KeystoneDeleteIdentityProviderRequest_1 = __nccwpck_require__(23611);
var KeystoneDeleteMappingRequest_1 = __nccwpck_require__(21312);
var KeystoneDeleteProtocolRequest_1 = __nccwpck_require__(72368);
var KeystoneDeleteUserRequest_1 = __nccwpck_require__(66863);
var KeystoneListAllProjectPermissionsForGroupRequest_1 = __nccwpck_require__(80740);
var KeystoneListDomainPermissionsForGroupRequest_1 = __nccwpck_require__(95788);
var KeystoneListEndpointsRequest_1 = __nccwpck_require__(37441);
var KeystoneListGroupsForUserRequest_1 = __nccwpck_require__(59213);
var KeystoneListGroupsRequest_1 = __nccwpck_require__(63082);
var KeystoneListPermissionsRequest_1 = __nccwpck_require__(25862);
var KeystoneListProjectPermissionsForGroupRequest_1 = __nccwpck_require__(96846);
var KeystoneListProjectsForUserRequest_1 = __nccwpck_require__(98666);
var KeystoneListProjectsRequest_1 = __nccwpck_require__(35983);
var KeystoneListProtocolsRequest_1 = __nccwpck_require__(35254);
var KeystoneListServicesRequest_1 = __nccwpck_require__(46641);
var KeystoneListUsersForGroupByAdminRequest_1 = __nccwpck_require__(73138);
var KeystoneListUsersRequest_1 = __nccwpck_require__(6340);
var KeystoneRemoveDomainPermissionFromGroupRequest_1 = __nccwpck_require__(94488);
var KeystoneRemoveProjectPermissionFromGroupRequest_1 = __nccwpck_require__(7559);
var KeystoneRemoveUserFromGroupRequest_1 = __nccwpck_require__(36191);
var KeystoneShowEndpointRequest_1 = __nccwpck_require__(331);
var KeystoneShowGroupRequest_1 = __nccwpck_require__(761);
var KeystoneShowIdentityProviderRequest_1 = __nccwpck_require__(54400);
var KeystoneShowMappingRequest_1 = __nccwpck_require__(61434);
var KeystoneShowPermissionRequest_1 = __nccwpck_require__(81407);
var KeystoneShowProtocolRequest_1 = __nccwpck_require__(31544);
var KeystoneShowRegionRequest_1 = __nccwpck_require__(85521);
var KeystoneShowSecurityComplianceByOptionRequest_1 = __nccwpck_require__(82384);
var KeystoneShowSecurityComplianceRequest_1 = __nccwpck_require__(96842);
var KeystoneShowServiceRequest_1 = __nccwpck_require__(55241);
var KeystoneShowUserRequest_1 = __nccwpck_require__(98240);
var KeystoneUpdateGroupRequest_1 = __nccwpck_require__(41894);
var KeystoneUpdateIdentityProviderRequest_1 = __nccwpck_require__(38572);
var KeystoneUpdateMappingRequest_1 = __nccwpck_require__(74666);
var KeystoneUpdateProjectRequest_1 = __nccwpck_require__(56524);
var KeystoneUpdateProtocolRequest_1 = __nccwpck_require__(9367);
var KeystoneUpdateUserByAdminRequest_1 = __nccwpck_require__(74965);
var KeystoneUpdateUserPasswordRequest_1 = __nccwpck_require__(63253);
var KeystoneValidateTokenRequest_1 = __nccwpck_require__(62201);
var ListAgenciesRequest_1 = __nccwpck_require__(78897);
var ListAllProjectsPermissionsForAgencyRequest_1 = __nccwpck_require__(87083);
var ListCustomPoliciesRequest_1 = __nccwpck_require__(4131);
var ListDomainPermissionsForAgencyRequest_1 = __nccwpck_require__(92966);
var ListEnterpriseProjectsForGroupRequest_1 = __nccwpck_require__(15781);
var ListEnterpriseProjectsForUserRequest_1 = __nccwpck_require__(1742);
var ListGroupsForEnterpriseProjectRequest_1 = __nccwpck_require__(65873);
var ListPermanentAccessKeysRequest_1 = __nccwpck_require__(20338);
var ListProjectPermissionsForAgencyRequest_1 = __nccwpck_require__(56827);
var ListRolesForGroupOnEnterpriseProjectRequest_1 = __nccwpck_require__(28728);
var ListRolesForUserOnEnterpriseProjectRequest_1 = __nccwpck_require__(42822);
var ListUsersForEnterpriseProjectRequest_1 = __nccwpck_require__(52849);
var RemoveAllProjectsPermissionFromAgencyRequest_1 = __nccwpck_require__(87920);
var RemoveDomainPermissionFromAgencyRequest_1 = __nccwpck_require__(7440);
var RemoveProjectPermissionFromAgencyRequest_1 = __nccwpck_require__(69842);
var RevokeRoleFromGroupOnEnterpriseProjectRequest_1 = __nccwpck_require__(79359);
var RevokeRoleFromUserOnEnterpriseProjectRequest_1 = __nccwpck_require__(77530);
var ShowAgencyRequest_1 = __nccwpck_require__(93930);
var ShowCustomPolicyRequest_1 = __nccwpck_require__(45830);
var ShowDomainApiAclPolicyRequest_1 = __nccwpck_require__(74322);
var ShowDomainConsoleAclPolicyRequest_1 = __nccwpck_require__(7020);
var ShowDomainLoginPolicyRequest_1 = __nccwpck_require__(50681);
var ShowDomainPasswordPolicyRequest_1 = __nccwpck_require__(90408);
var ShowDomainProtectPolicyRequest_1 = __nccwpck_require__(68884);
var ShowDomainQuotaRequest_1 = __nccwpck_require__(95950);
var ShowDomainRoleAssignmentsRequest_1 = __nccwpck_require__(71822);
var ShowMetadataRequest_1 = __nccwpck_require__(24591);
var ShowOpenIdConnectConfigRequest_1 = __nccwpck_require__(21897);
var ShowPermanentAccessKeyRequest_1 = __nccwpck_require__(24339);
var ShowUserLoginProtectRequest_1 = __nccwpck_require__(47731);
var ShowUserMfaDeviceRequest_1 = __nccwpck_require__(43985);
var ShowUserRequest_1 = __nccwpck_require__(1542);
var UpdateAgencyCustomPolicyRequest_1 = __nccwpck_require__(46587);
var UpdateAgencyRequest_1 = __nccwpck_require__(13872);
var UpdateCloudServiceCustomPolicyRequest_1 = __nccwpck_require__(90208);
var UpdateDomainApiAclPolicyRequest_1 = __nccwpck_require__(75021);
var UpdateDomainConsoleAclPolicyRequest_1 = __nccwpck_require__(57570);
var UpdateDomainGroupInheritRoleRequest_1 = __nccwpck_require__(51935);
var UpdateDomainLoginPolicyRequest_1 = __nccwpck_require__(83578);
var UpdateDomainPasswordPolicyRequest_1 = __nccwpck_require__(8451);
var UpdateDomainProtectPolicyRequest_1 = __nccwpck_require__(93473);
var UpdateLoginProtectRequest_1 = __nccwpck_require__(94078);
var UpdateOpenIdConnectConfigRequest_1 = __nccwpck_require__(83359);
var UpdatePermanentAccessKeyRequest_1 = __nccwpck_require__(16538);
var UpdateProjectStatusRequest_1 = __nccwpck_require__(87179);
var UpdateUserInformationRequest_1 = __nccwpck_require__(6402);
var UpdateUserRequest_1 = __nccwpck_require__(79922);
var IamClient = /** @class */ (function () {
    function IamClient(client) {
        this.hcClient = client;
    }
    IamClient.newBuilder = function () {
        return new ClientBuilder_1.ClientBuilder(newClient);
    };
    IamClient.prototype.getPath = function () {
        return __dirname;
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为委托授予所有项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 为委托授予所有项目服务权限
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} domainId 账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.associateAgencyWithAllProjectsPermission = function (associateAgencyWithAllProjectsPermissionRequest) {
        var options = (0, exports.ParamCreater)().associateAgencyWithAllProjectsPermission(associateAgencyWithAllProjectsPermissionRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为委托授予全局服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 为委托授予全局服务权限
     * @param {string} domainId 委托方账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.associateAgencyWithDomainPermission = function (associateAgencyWithDomainPermissionRequest) {
        var options = (0, exports.ParamCreater)().associateAgencyWithDomainPermission(associateAgencyWithDomainPermissionRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为委托授予项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 为委托授予项目服务权限
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.associateAgencyWithProjectPermission = function (associateAgencyWithProjectPermissionRequest) {
        var options = (0, exports.ParamCreater)().associateAgencyWithProjectPermission(associateAgencyWithProjectPermissionRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口用于基于用户组为企业项目授权。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 基于用户组为企业项目授权
     * @param {string} enterpriseProjectId 企业项目ID。
     * @param {string} groupId 用户组ID。
     * @param {string} roleId 权限ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.associateRoleToGroupOnEnterpriseProject = function (associateRoleToGroupOnEnterpriseProjectRequest) {
        var options = (0, exports.ParamCreater)().associateRoleToGroupOnEnterpriseProject(associateRoleToGroupOnEnterpriseProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 基于用户为企业项目授权。
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 基于用户为企业项目授权
     * @param {string} enterpriseProjectId 企业项目ID。
     * @param {string} userId 用户ID。
     * @param {string} roleId 权限ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.associateRoleToUserOnEnterpriseProject = function (associateRoleToUserOnEnterpriseProjectRequest) {
        var options = (0, exports.ParamCreater)().associateRoleToUserOnEnterpriseProject(associateRoleToUserOnEnterpriseProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)检查委托是否具有所有项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 检查委托下是否具有所有项目服务权限
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} domainId 账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.checkAllProjectsPermissionForAgency = function (checkAllProjectsPermissionForAgencyRequest) {
        var options = (0, exports.ParamCreater)().checkAllProjectsPermissionForAgency(checkAllProjectsPermissionForAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询委托是否拥有全局服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询委托是否拥有全局服务权限
     * @param {string} domainId 委托方账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.checkDomainPermissionForAgency = function (checkDomainPermissionForAgencyRequest) {
        var options = (0, exports.ParamCreater)().checkDomainPermissionForAgency(checkDomainPermissionForAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询委托是否拥有项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询委托是否拥有项目服务权限
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.checkProjectPermissionForAgency = function (checkProjectPermissionForAgencyRequest) {
        var options = (0, exports.ParamCreater)().checkProjectPermissionForAgency(checkProjectPermissionForAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建委托。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 创建委托
     * @param {CreateAgencyRequestBody} createAgencyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createAgency = function (createAgencyRequest) {
        var options = (0, exports.ParamCreater)().createAgency(createAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建委托自定义策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 创建委托自定义策略
     * @param {CreateAgencyCustomPolicyRequestBody} createAgencyCustomPolicyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createAgencyCustomPolicy = function (createAgencyCustomPolicyRequest) {
        var options = (0, exports.ParamCreater)().createAgencyCustomPolicy(createAgencyCustomPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建云服务自定义策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 创建云服务自定义策略
     * @param {CreateCloudServiceCustomPolicyRequestBody} createCloudServiceCustomPolicyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createCloudServiceCustomPolicy = function (createCloudServiceCustomPolicyRequest) {
        var options = (0, exports.ParamCreater)().createCloudServiceCustomPolicy(createCloudServiceCustomPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口用于用于获取自定义代理登录票据logintoken。logintoken是系统颁发给自定义代理用户的登录票据，承载用户的身份、session等信息。调用自定义代理URL登录云服务控制台时，可以使用本接口获取的logintoken进行认证。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * &gt; - logintoken的有效期为10分钟。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 获取自定义代理登录票据
     * @param {CreateLoginTokenRequestBody} createLoginTokenRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createLoginToken = function (createLoginTokenRequest) {
        var options = (0, exports.ParamCreater)().createLoginToken(createLoginTokenRequest);
        options['responseHeaders'] = ['X-Subject-LoginToken'];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)导入Metadata文件。
     *
     * 账号在使用联邦认证功能前，需要先将Metadata文件导入到IAM中。Metadata文件是SAML 2.0协议约定的接口文件，包含访问接口地址和证书信息，请找企业管理员获取企业IdP的Metadata文件。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 导入Metadata文件
     * @param {string} idpId 身份提供商ID。
     * @param {string} protocolId 协议ID。
     * @param {CreateMetadataRequestBody} createMetadataRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createMetadata = function (createMetadataRequest) {
        var options = (0, exports.ParamCreater)().createMetadata(createMetadataRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 创建OpenId Connect身份提供商配置
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 创建OpenId Connect身份提供商配置
     * @param {string} idpId 身份提供商ID
     * @param {CreateOpenIdConnectConfigRequestBody} createOpenIdConnectConfigRequestBody 创建身份提供商的信息
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createOpenIdConnectConfig = function (createOpenIdConnectConfigRequest) {
        var options = (0, exports.ParamCreater)().createOpenIdConnectConfig(createOpenIdConnectConfigRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 获取联邦认证token(OpenId Connect Id token方式)
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 获取联邦认证token(OpenId Connect Id token方式)
     * @param {string} xIdpId 身份提供商ID。
     * @param {GetIdTokenRequestBody} body 获取iam token必要的请求体auth参数
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createTokenWithIdToken = function (createTokenWithIdTokenRequest) {
        var options = (0, exports.ParamCreater)().createTokenWithIdToken(createTokenWithIdTokenRequest);
        options['responseHeaders'] = ['X-Subject-Token'];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 获取联邦认证token(OpenId Connect Id token方式)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 获取联邦认证unscoped token(OpenId Connect Id token方式)
     * @param {string} idpId 身份提供商id。
     * @param {string} protocolId 协议id。
     * @param {string} authorization OpenID Connect身份提供商的ID Token，格式为Bearer {ID Token}。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createUnscopedTokenWithIdToken = function (createUnscopedTokenWithIdTokenRequest) {
        var options = (0, exports.ParamCreater)().createUnscopedTokenWithIdToken(createUnscopedTokenWithIdTokenRequest);
        options['responseHeaders'] = ['X-Subject-Token'];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除委托。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除委托
     * @param {string} agencyId 待删除的委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.deleteAgency = function (deleteAgencyRequest) {
        var options = (0, exports.ParamCreater)().deleteAgency(deleteAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除自定义策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除自定义策略
     * @param {string} roleId 待删除的自定义策略ID，获取方式请参见：[自定义策略ID](https://apiexplorer.developer.huaweicloud.com/apiexplorer/doc?product&#x3D;IAM&amp;api&#x3D;ListCustomPolicies)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.deleteCustomPolicy = function (deleteCustomPolicyRequest) {
        var options = (0, exports.ParamCreater)().deleteCustomPolicy(deleteCustomPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于移除用户组的所有项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 移除用户组的所有项目服务权限
     * @param {string} domainId 用户组所属账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.deleteDomainGroupInheritedRole = function (deleteDomainGroupInheritedRoleRequest) {
        var options = (0, exports.ParamCreater)().deleteDomainGroupInheritedRole(deleteDomainGroupInheritedRoleRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)添加IAM用户到用户组。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 添加IAM用户到用户组
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} userId 待添加的IAM用户ID，获取方式请参见：[获取IAM用户ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneAddUserToGroup = function (keystoneAddUserToGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneAddUserToGroup(keystoneAddUserToGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为用户组授予全局服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 为用户组授予全局服务权限
     * @param {string} domainId 用户组所属账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneAssociateGroupWithDomainPermission = function (keystoneAssociateGroupWithDomainPermissionRequest) {
        var options = (0, exports.ParamCreater)().keystoneAssociateGroupWithDomainPermission(keystoneAssociateGroupWithDomainPermissionRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为用户组授予项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 为用户组授予项目服务权限
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneAssociateGroupWithProjectPermission = function (keystoneAssociateGroupWithProjectPermissionRequest) {
        var options = (0, exports.ParamCreater)().keystoneAssociateGroupWithProjectPermission(keystoneAssociateGroupWithProjectPermissionRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组是否拥有全局服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询用户组是否拥有全局服务权限
     * @param {string} domainId 用户组所属账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCheckDomainPermissionForGroup = function (keystoneCheckDomainPermissionForGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneCheckDomainPermissionForGroup(keystoneCheckDomainPermissionForGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组是否拥有项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询用户组是否拥有项目服务权限
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCheckProjectPermissionForGroup = function (keystoneCheckProjectPermissionForGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneCheckProjectPermissionForGroup(keystoneCheckProjectPermissionForGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户是否在用户组中。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询IAM用户是否在用户组中
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} userId 待查询的IAM用户ID，获取方式请参见：[获取IAM用户ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCheckUserInGroup = function (keystoneCheckUserInGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneCheckUserInGroup(keystoneCheckUserInGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组是否拥有所有项目指定权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询用户组是否拥有所有项目指定权限
     * @param {string} domainId 用户组所属账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCheckroleForGroup = function (keystoneCheckroleForGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneCheckroleForGroup(keystoneCheckroleForGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建用户组。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 创建用户组
     * @param {KeystoneCreateGroupRequestBody} keystoneCreateGroupRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateGroup = function (keystoneCreateGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateGroup(keystoneCreateGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)注册身份提供商。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 注册身份提供商
     * @param {string} contentType 该字段内容填为“application/json;charset&#x3D;utf8”。
     * @param {string} id 待注册的身份提供商ID。
     * @param {KeystoneCreateIdentityProviderRequestBody} keystoneCreateIdentityProviderRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateIdentityProvider = function (keystoneCreateIdentityProviderRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateIdentityProvider(keystoneCreateIdentityProviderRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)注册映射。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 注册映射
     * @param {string} id 待注册的映射ID。
     * @param {KeystoneCreateMappingRequestBody} keystoneCreateMappingRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateMapping = function (keystoneCreateMappingRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateMapping(keystoneCreateMappingRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建项目。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 创建项目
     * @param {KeystoneCreateProjectRequestBody} keystoneCreateProjectRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateProject = function (keystoneCreateProjectRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateProject(keystoneCreateProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)注册协议（将协议关联到某一身份提供商）。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 注册协议
     * @param {string} idpId 身份提供商ID。
     * @param {string} protocolId 待注册的协议ID。
     * @param {KeystoneCreateProtocolRequestBody} keystoneCreateProtocolRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateProtocol = function (keystoneCreateProtocolRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateProtocol(keystoneCreateProtocolRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于通过联邦认证方式获取scoped token。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 获取联邦认证scoped token
     * @param {KeystoneCreateScopedTokenRequestBody} keystoneCreateScopedTokenRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateScopedToken = function (keystoneCreateScopedTokenRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateScopedToken(keystoneCreateScopedTokenRequest);
        options['responseHeaders'] = ['X-Subject-Token'];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除用户组。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除用户组
     * @param {string} groupId 待删除的用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneDeleteGroup = function (keystoneDeleteGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneDeleteGroup(keystoneDeleteGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html) 删除身份提供商。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除身份提供商
     * @param {string} id 待删除的身份提供商ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneDeleteIdentityProvider = function (keystoneDeleteIdentityProviderRequest) {
        var options = (0, exports.ParamCreater)().keystoneDeleteIdentityProvider(keystoneDeleteIdentityProviderRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除映射。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除映射
     * @param {string} id 待删除的映射ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneDeleteMapping = function (keystoneDeleteMappingRequest) {
        var options = (0, exports.ParamCreater)().keystoneDeleteMapping(keystoneDeleteMappingRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除协议。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除协议
     * @param {string} idpId 身份提供商ID。
     * @param {string} protocolId 待删除的协议ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneDeleteProtocol = function (keystoneDeleteProtocolRequest) {
        var options = (0, exports.ParamCreater)().keystoneDeleteProtocol(keystoneDeleteProtocolRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于管理员查询用户组所有项目服务权限列表。 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询用户组的所有项目权限列表
     * @param {string} domainId 租户ID，获取方式请参见：[获取项目名称、项目ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListAllProjectPermissionsForGroup = function (keystoneListAllProjectPermissionsForGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneListAllProjectPermissionsForGroup(keystoneListAllProjectPermissionsForGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询IAM用户可以用访问的账号详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询IAM用户可以访问的账号详情
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListAuthDomains = function () {
        var options = (0, exports.ParamCreater)().keystoneListAuthDomains();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询IAM用户可以访问的项目列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询IAM用户可以访问的项目列表
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListAuthProjects = function () {
        var options = (0, exports.ParamCreater)().keystoneListAuthProjects();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询全局服务中的用户组权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询全局服务中的用户组权限
     * @param {string} domainId 用户组所属账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListDomainPermissionsForGroup = function (keystoneListDomainPermissionsForGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneListDomainPermissionsForGroup(keystoneListDomainPermissionsForGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询终端节点列表。终端节点用来提供服务访问入口。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询终端节点列表
     * @param {'public' | 'internal' | 'admin'} [_interface] 终端节点平面。可能取值为：public、internal或admin。public： 用户可在公共网络接口上看到。internal：用户可在内部网络接口上看到。admin：管理员可以在安全的网络接口上看到。
     * @param {string} [serviceId] 服务ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListEndpoints = function (keystoneListEndpointsRequest) {
        var options = (0, exports.ParamCreater)().keystoneListEndpoints(keystoneListEndpointsRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口用于查询联邦用户可以访问的账号列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     * &gt; - 推荐使用[查询IAM用户可以访问的账号详情](https://apiexplorer.developer.huaweicloud.com/apiexplorer/doc?product&#x3D;IAM&amp;api&#x3D;KeystoneQueryAccessibleDomainDetailsToUser)，该接口可以返回相同的响应格式。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询联邦用户可以访问的账号列表
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListFederationDomains = function () {
        var options = (0, exports.ParamCreater)().keystoneListFederationDomains();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询用户组列表
     * @param {string} [domainId] 用户组所属账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} [name] 用户组名，长度小于等于64字节，获取方式请参见：[获取用户组名](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListGroups = function (keystoneListGroupsRequest) {
        var options = (0, exports.ParamCreater)().keystoneListGroups(keystoneListGroupsRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询身份提供商列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询身份提供商列表
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListIdentityProviders = function () {
        var options = (0, exports.ParamCreater)().keystoneListIdentityProviders();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询映射列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询映射列表
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListMappings = function () {
        var options = (0, exports.ParamCreater)().keystoneListMappings();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询权限列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询权限列表
     * @param {string} [name] 系统内部呈现的权限名称。如云目录服务CCS普通用户权限CCS User的name为ccs_user。 建议您传参display_name，不传name参数。
     * @param {string} [domainId] 账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。 &gt; - 如果填写此参数，则返回账号下所有自定义策略。 &gt; - 如果不填写此参数，则返回所有系统权限（包含系统策略和系统角色）。
     * @param {number} [page] 分页查询时数据的页数，查询值最小为1。需要与per_page同时存在。传入domain_id参数查询自定义策略时，可配套使用。
     * @param {number} [perPage] 分页查询时每页的数据个数，取值范围为[1,300]，默认值为300。需要与page同时存在。不传page和per_page参数时，每页最多返回300个权限。
     * @param {string} [permissionType] 区分系统权限类型的参数。当domain_id参数为空时生效。 &gt; - policy：返回系统策略。 &gt; - role：返回系统角色。
     * @param {string} [displayName] 过滤权限名称。如传参为Administrator，则返回满足条件的所有管理员权限。
     * @param {string} [type] 过滤权限的显示模式。取值范围：domain,project,all。type为domain时，返回type&#x3D;AA或AX的权限；type为project时，返回type&#x3D;AA或XA的权限；type为all时返回type为AA、AX、XA的权限。 &gt; - AX表示在domain层显示。 &gt; - XA表示在project层显示。 &gt; - AA表示在domain和project层均显示。 &gt; - XX表示在domain和project层均不显示。
     * @param {string} [catalog] 权限所在目录。catalog值精确匹配策略的catalog字段(可以过滤服务的策略、或者自定义策略)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListPermissions = function (keystoneListPermissionsRequest) {
        var options = (0, exports.ParamCreater)().keystoneListPermissions(keystoneListPermissionsRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询项目服务中的用户组权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询项目服务中的用户组权限
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListProjectPermissionsForGroup = function (keystoneListProjectPermissionsForGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneListProjectPermissionsForGroup(keystoneListProjectPermissionsForGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询指定条件下的项目列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询指定条件下的项目列表
     * @param {string} [domainId] 项目所属账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} [name] 项目名称，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} [parentId] 如果查询自己创建的项目，则此处应填为所属区域的项目ID。  如果查询的是系统内置项目，如cn-north-4，则此处应填为账号ID。  获取项目ID和账号ID，请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {boolean} [enabled] 项目是否启用。
     * @param {boolean} [isDomain] 该字段无需填写。
     * @param {number} [page] 分页查询时数据的页数，查询值最小为1。需要与per_page同时存在。
     * @param {number} [perPage] 分页查询时每页的数据个数，取值范围为[1,5000]。需要与page同时存在。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListProjects = function (keystoneListProjectsRequest) {
        var options = (0, exports.ParamCreater)().keystoneListProjects(keystoneListProjectsRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询指定IAM用户的项目列表，或IAM用户查询自己的项目列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询指定IAM用户的项目列表
     * @param {string} userId 待查询的IAM用户ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListProjectsForUser = function (keystoneListProjectsForUserRequest) {
        var options = (0, exports.ParamCreater)().keystoneListProjectsForUser(keystoneListProjectsForUserRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询协议列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询协议列表
     * @param {string} idpId 身份提供商ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListProtocols = function (keystoneListProtocolsRequest) {
        var options = (0, exports.ParamCreater)().keystoneListProtocols(keystoneListProtocolsRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询区域列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询区域列表
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListRegions = function () {
        var options = (0, exports.ParamCreater)().keystoneListRegions();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询服务列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询服务列表
     * @param {string} [type] 服务类型。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListServices = function (keystoneListServicesRequest) {
        var options = (0, exports.ParamCreater)().keystoneListServices(keystoneListServicesRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组中所包含的IAM用户。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 管理员查询用户组所包含的IAM用户
     * @param {string} groupId 待查询的用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListUsersForGroupByAdmin = function (keystoneListUsersForGroupByAdminRequest) {
        var options = (0, exports.ParamCreater)().keystoneListUsersForGroupByAdmin(keystoneListUsersForGroupByAdminRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口用于查询Keystone API的版本信息。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询版本信息列表
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListVersions = function () {
        var options = (0, exports.ParamCreater)().keystoneListVersions();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除用户组的全局服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 移除用户组的全局服务权限
     * @param {string} domainId 用户组所属账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneRemoveDomainPermissionFromGroup = function (keystoneRemoveDomainPermissionFromGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneRemoveDomainPermissionFromGroup(keystoneRemoveDomainPermissionFromGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除用户组的项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 移除用户组的项目服务权限
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneRemoveProjectPermissionFromGroup = function (keystoneRemoveProjectPermissionFromGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneRemoveProjectPermissionFromGroup(keystoneRemoveProjectPermissionFromGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除用户组中的IAM用户。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 移除用户组中的IAM用户
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} userId 待从用户组中移除的IAM用户ID，获取方式请参见：[获取IAM用户ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneRemoveUserFromGroup = function (keystoneRemoveUserFromGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneRemoveUserFromGroup(keystoneRemoveUserFromGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询请求头中X-Auth-Token对应的服务目录。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询服务目录
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowCatalog = function () {
        var options = (0, exports.ParamCreater)().keystoneShowCatalog();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询终端节点详情。终端节点用来提供服务访问入口。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询终端节点详情
     * @param {string} endpointId 待查询的终端节点ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowEndpoint = function (keystoneShowEndpointRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowEndpoint(keystoneShowEndpointRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询用户组详情
     * @param {string} groupId 待查询的用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowGroup = function (keystoneShowGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowGroup(keystoneShowGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询身份提供商详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询身份提供商详情
     * @param {string} id 待查询的身份提供商ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowIdentityProvider = function (keystoneShowIdentityProviderRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowIdentityProvider(keystoneShowIdentityProviderRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询映射详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询映射详情
     * @param {string} id 待查询的映射ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowMapping = function (keystoneShowMappingRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowMapping(keystoneShowMappingRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询权限详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询权限详情
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowPermission = function (keystoneShowPermissionRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowPermission(keystoneShowPermissionRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询项目详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询项目详情
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowProject = function () {
        var options = (0, exports.ParamCreater)().keystoneShowProject();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询协议详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询协议详情
     * @param {string} idpId 身份提供商ID。
     * @param {string} protocolId 待查询的协议ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowProtocol = function (keystoneShowProtocolRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowProtocol(keystoneShowProtocolRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询区域详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询区域详情
     * @param {string} regionId 待查询的区域ID。可以使用[查询区域列表](https://support.huaweicloud.com/api-iam/iam_05_0001.html)接口获取，控制台获取方法请参见：[获取区域ID](https://console.huaweicloud.com/iam/?agencyId&#x3D;d15f57bd355d4514bd9618bd648dd432®ion&#x3D;cn-east-2&amp;locale&#x3D;zh-cn#/iam/projects)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowRegion = function (keystoneShowRegionRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowRegion(keystoneShowRegionRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询账号密码强度策略，查询结果包括密码强度策略的正则表达式及其描述。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询账号密码强度策略
     * @param {string} domainId 待查询的账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowSecurityCompliance = function (keystoneShowSecurityComplianceRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowSecurityCompliance(keystoneShowSecurityComplianceRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于按条件查询账号密码强度策略，查询结果包括密码强度策略的正则表达式及其描述。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 按条件查询账号密码强度策略
     * @param {string} domainId 待查询的账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {'password_regex' | 'password_regex_description'} option 查询条件。该字段内容为：password_regex或password_regex_description。  password_regex：密码强度策略的正则表达式；password_regex_description：密码强度策略的描述。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowSecurityComplianceByOption = function (keystoneShowSecurityComplianceByOptionRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowSecurityComplianceByOption(keystoneShowSecurityComplianceByOptionRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询服务详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询服务详情
     * @param {string} serviceId 待查询的服务ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowService = function (keystoneShowServiceRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowService(keystoneShowServiceRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口用于查询Keystone API的3.0版本的信息。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询版本信息
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowVersion = function () {
        var options = (0, exports.ParamCreater)().keystoneShowVersion();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)更新用户组信息。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 更新用户组
     * @param {string} groupId 待更新的用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {KeystoneUpdateGroupRequestBody} keystoneUpdateGroupRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneUpdateGroup = function (keystoneUpdateGroupRequest) {
        var options = (0, exports.ParamCreater)().keystoneUpdateGroup(keystoneUpdateGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)更新身份提供商。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 更新身份提供商
     * @param {string} id 待更新的身份提供商ID。
     * @param {KeystoneUpdateIdentityProviderRequestBody} keystoneUpdateIdentityProviderRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneUpdateIdentityProvider = function (keystoneUpdateIdentityProviderRequest) {
        var options = (0, exports.ParamCreater)().keystoneUpdateIdentityProvider(keystoneUpdateIdentityProviderRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)更新映射。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 更新映射
     * @param {string} id 待更新的映射ID。
     * @param {KeystoneUpdateMappingRequestBody} keystoneUpdateMappingRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneUpdateMapping = function (keystoneUpdateMappingRequest) {
        var options = (0, exports.ParamCreater)().keystoneUpdateMapping(keystoneUpdateMappingRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改项目信息。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改项目信息
     * @param {KeystoneUpdateProjectRequestBody} keystoneUpdateProjectRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneUpdateProject = function (keystoneUpdateProjectRequest) {
        var options = (0, exports.ParamCreater)().keystoneUpdateProject(keystoneUpdateProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)更新协议。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 更新协议
     * @param {string} idpId 身份提供商ID。
     * @param {string} protocolId 待更新的协议ID。
     * @param {KeystoneUpdateProtocolRequestBody} keystoneUpdateProtocolRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneUpdateProtocol = function (keystoneUpdateProtocolRequest) {
        var options = (0, exports.ParamCreater)().keystoneUpdateProtocol(keystoneUpdateProtocolRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询指定条件下的委托列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询指定条件下的委托列表
     * @param {string} domainId 委托方账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} [trustDomainId] 被委托方账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} [name] 委托名，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listAgencies = function (listAgenciesRequest) {
        var options = (0, exports.ParamCreater)().listAgencies(listAgenciesRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询委托所有项目服务权限列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询委托下的所有项目服务权限列表
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} domainId 账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listAllProjectsPermissionsForAgency = function (listAllProjectsPermissionsForAgencyRequest) {
        var options = (0, exports.ParamCreater)().listAllProjectsPermissionsForAgency(listAllProjectsPermissionsForAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询自定义策略列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询自定义策略列表
     * @param {number} [page] 分页查询时数据的页数，查询值最小为1。需要与per_page同时存在。
     * @param {number} [perPage] 分页查询时每页的数据个数，取值范围为[1,300]。需要与page同时存在。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listCustomPolicies = function (listCustomPoliciesRequest) {
        var options = (0, exports.ParamCreater)().listCustomPolicies(listCustomPoliciesRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询全局服务中的委托权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询全局服务中的委托权限
     * @param {string} domainId 委托方账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listDomainPermissionsForAgency = function (listDomainPermissionsForAgencyRequest) {
        var options = (0, exports.ParamCreater)().listDomainPermissionsForAgency(listDomainPermissionsForAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可用于查询用户组所关联的企业项目。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询用户组关联的企业项目
     * @param {string} groupId 待查询用户组ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listEnterpriseProjectsForGroup = function (listEnterpriseProjectsForGroupRequest) {
        var options = (0, exports.ParamCreater)().listEnterpriseProjectsForGroup(listEnterpriseProjectsForGroupRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可用于查询用户所关联的企业项目。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询用户关联的企业项目
     * @param {string} userId 待查询用户ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listEnterpriseProjectsForUser = function (listEnterpriseProjectsForUserRequest) {
        var options = (0, exports.ParamCreater)().listEnterpriseProjectsForUser(listEnterpriseProjectsForUserRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可用于查询企业项目关联的用户组。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询企业项目关联的用户组
     * @param {string} enterpriseProjectId 待查询的企业项目Id。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listGroupsForEnterpriseProject = function (listGroupsForEnterpriseProjectRequest) {
        var options = (0, exports.ParamCreater)().listGroupsForEnterpriseProject(listGroupsForEnterpriseProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询项目服务中的委托权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询项目服务中的委托权限
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listProjectPermissionsForAgency = function (listProjectPermissionsForAgencyRequest) {
        var options = (0, exports.ParamCreater)().listProjectPermissionsForAgency(listProjectPermissionsForAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可用于查询企业项目已关联用户组的权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询企业项目已关联用户组的权限
     * @param {string} enterpriseProjectId 待查询企业项目ID。
     * @param {string} groupId 待查询用户组。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listRolesForGroupOnEnterpriseProject = function (listRolesForGroupOnEnterpriseProjectRequest) {
        var options = (0, exports.ParamCreater)().listRolesForGroupOnEnterpriseProject(listRolesForGroupOnEnterpriseProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可用于查询企业项目直接关联用户的权限。
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询企业项目直接关联用户的权限
     * @param {string} enterpriseProjectId 企业项目ID。
     * @param {string} userId 用户ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listRolesForUserOnEnterpriseProject = function (listRolesForUserOnEnterpriseProjectRequest) {
        var options = (0, exports.ParamCreater)().listRolesForUserOnEnterpriseProject(listRolesForUserOnEnterpriseProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可用于查询企业项目直接关联的用户。
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询企业项目直接关联用户
     * @param {string} enterpriseProjectId 待查询企业项目ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listUsersForEnterpriseProject = function (listUsersForEnterpriseProjectRequest) {
        var options = (0, exports.ParamCreater)().listUsersForEnterpriseProject(listUsersForEnterpriseProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除委托的所有项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 移除委托下的所有项目服务权限
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} domainId 账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.removeAllProjectsPermissionFromAgency = function (removeAllProjectsPermissionFromAgencyRequest) {
        var options = (0, exports.ParamCreater)().removeAllProjectsPermissionFromAgency(removeAllProjectsPermissionFromAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除委托的全局服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 移除委托的全局服务权限
     * @param {string} domainId 委托方账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.removeDomainPermissionFromAgency = function (removeDomainPermissionFromAgencyRequest) {
        var options = (0, exports.ParamCreater)().removeDomainPermissionFromAgency(removeDomainPermissionFromAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除委托的项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 移除委托的项目服务权限
     * @param {string} agencyId 委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.removeProjectPermissionFromAgency = function (removeProjectPermissionFromAgencyRequest) {
        var options = (0, exports.ParamCreater)().removeProjectPermissionFromAgency(removeProjectPermissionFromAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口用于删除企业项目关联用户组的权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除企业项目关联用户组的权限
     * @param {string} enterpriseProjectId 企业项目ID。
     * @param {string} groupId 用户组ID。
     * @param {string} roleId 权限ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.revokeRoleFromGroupOnEnterpriseProject = function (revokeRoleFromGroupOnEnterpriseProjectRequest) {
        var options = (0, exports.ParamCreater)().revokeRoleFromGroupOnEnterpriseProject(revokeRoleFromGroupOnEnterpriseProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 删除企业项目直接关联用户的权限。
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除企业项目直接关联用户的权限
     * @param {string} enterpriseProjectId 企业项目ID。
     * @param {string} userId 用户ID。
     * @param {string} roleId 权限ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.revokeRoleFromUserOnEnterpriseProject = function (revokeRoleFromUserOnEnterpriseProjectRequest) {
        var options = (0, exports.ParamCreater)().revokeRoleFromUserOnEnterpriseProject(revokeRoleFromUserOnEnterpriseProjectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询委托详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询委托详情
     * @param {string} agencyId 待查询的委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showAgency = function (showAgencyRequest) {
        var options = (0, exports.ParamCreater)().showAgency(showAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询自定义策略详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询自定义策略详情
     * @param {string} roleId 待查询的自定义策略ID，获取方式请参见：[自定义策略ID](https://apiexplorer.developer.huaweicloud.com/apiexplorer/doc?product&#x3D;IAM&amp;api&#x3D;ListCustomPolicies)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showCustomPolicy = function (showCustomPolicyRequest) {
        var options = (0, exports.ParamCreater)().showCustomPolicy(showCustomPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询账号接口访问控制策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询账号接口访问策略
     * @param {string} domainId 待查询的账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showDomainApiAclPolicy = function (showDomainApiAclPolicyRequest) {
        var options = (0, exports.ParamCreater)().showDomainApiAclPolicy(showDomainApiAclPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询账号控制台访问控制策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询账号控制台访问策略
     * @param {string} domainId 待查询的账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showDomainConsoleAclPolicy = function (showDomainConsoleAclPolicyRequest) {
        var options = (0, exports.ParamCreater)().showDomainConsoleAclPolicy(showDomainConsoleAclPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询账号登录策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询账号登录策略
     * @param {string} domainId 待查询的账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showDomainLoginPolicy = function (showDomainLoginPolicyRequest) {
        var options = (0, exports.ParamCreater)().showDomainLoginPolicy(showDomainLoginPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询账号密码策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询账号密码策略
     * @param {string} domainId 待查询的账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showDomainPasswordPolicy = function (showDomainPasswordPolicyRequest) {
        var options = (0, exports.ParamCreater)().showDomainPasswordPolicy(showDomainPasswordPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询账号操作保护策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询账号操作保护策略
     * @param {string} domainId 待查询的账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showDomainProtectPolicy = function (showDomainProtectPolicyRequest) {
        var options = (0, exports.ParamCreater)().showDomainProtectPolicy(showDomainProtectPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询账号配额。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询账号配额
     * @param {string} domainId 待查询的账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {'user' | 'group' | 'idp' | 'agency' | 'policy' | 'assigment_group_mp' | 'assigment_agency_mp' | 'assigment_group_ep' | 'assigment_user_ep'} [type] 查询配额的类型，取值范围为：user, group, idp, agency, policy, assigment_group_mp, assigment_agency_mp, assigment_group_ep, assigment_user_ep。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showDomainQuota = function (showDomainQuotaRequest) {
        var options = (0, exports.ParamCreater)().showDomainQuota(showDomainQuotaRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口用于查询指定账号中的授权记录。
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询指定账号中的授权记录
     * @param {string} domainId 待查询账号ID。
     * @param {string} [roleId] 策略ID。
     * @param {string} [subject] 授权主体,取值范围：user、group、agency。该参数与subject.user_id、subject.group_id、subject.agency_id只能选择一个。
     * @param {string} [subjectUserId] 授权的IAM用户ID。
     * @param {string} [subjectGroupId] 授权的用户组ID。
     * @param {string} [subjectAgencyId] 授权的委托ID。
     * @param {string} [scope] 授权范围，取值范围：project、domain、enterprise_project。该参数与scope.project_id、scope.domain_id、scope.enterprise_projects_id只能选择一个。 &gt; - 如需查看全局服务授权记录，scope取值domain或填写scope.domain_id。 &gt; - 如需查看基于所有资源的授权记录，scope取值为domain，且is_inherited取值为true &gt; - 如需查看基于项目的授权记录，scope取值为project或填写scope.project_id。 &gt; - 如需查看基于企业项目的授权记录，scope取值为enterprise_project或填写scope.enterprise_project_id。
     * @param {string} [scopeProjectId] 授权的项目ID。
     * @param {string} [scopeDomainId] 待查询账号ID。
     * @param {string} [scopeEnterpriseProjectsId] 授权的企业项目ID。
     * @param {boolean} [isInherited] 是否包含基于所有项目授权的记录，默认为false。当参数scope&#x3D;domain或者scope.domain_id存在时生效。true：查询基于所有项目授权的记录。 false：查询基于全局服务授权的记录。
     * @param {boolean} [includeGroup] 是否包含基于IAM用户所属用户组授权的记录，默认为true。当参数subject&#x3D;user或者subject.user_id存在时生效。true：查询基于IAM用户授权、IAM用户所属用户组授权的记录。 false：仅查询基于IAM用户授权的记录。
     * @param {string} [page] 分页查询时数据的页数，查询值最小为1。需要与per_page同时存在。
     * @param {string} [perPage] 分页查询时每页的数据个数，取值范围为[1,50]。需要与page同时存在。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showDomainRoleAssignments = function (showDomainRoleAssignmentsRequest) {
        var options = (0, exports.ParamCreater)().showDomainRoleAssignments(showDomainRoleAssignmentsRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询身份提供商导入到IAM中的Metadata文件。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询Metadata文件
     * @param {string} idpId 身份提供商ID。
     * @param {string} protocolId 协议ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showMetadata = function (showMetadataRequest) {
        var options = (0, exports.ParamCreater)().showMetadata(showMetadataRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 查询OpenId Connect身份提供商配置
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询OpenId Connect身份提供商配置
     * @param {string} idpId 身份提供商ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showOpenIdConnectConfig = function (showOpenIdConnectConfigRequest) {
        var options = (0, exports.ParamCreater)().showOpenIdConnectConfig(showOpenIdConnectConfigRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询项目详情与状态。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询项目详情与状态
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showProjectDetailsAndStatus = function () {
        var options = (0, exports.ParamCreater)().showProjectDetailsAndStatus();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于查询项目配额。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询项目配额
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showProjectQuota = function () {
        var options = (0, exports.ParamCreater)().showProjectQuota();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改委托。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改委托
     * @param {string} agencyId 待修改的委托ID，获取方式请参见：[获取委托名、委托ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {UpdateAgencyRequestBody} updateAgencyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateAgency = function (updateAgencyRequest) {
        var options = (0, exports.ParamCreater)().updateAgency(updateAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改委托自定义策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改委托自定义策略
     * @param {string} roleId 待修改的自定义策略ID，获取方式请参见：[自定义策略ID](https://apiexplorer.developer.huaweicloud.com/apiexplorer/doc?product&#x3D;IAM&amp;api&#x3D;ListCustomPolicies)。
     * @param {UpdateAgencyCustomPolicyRequestBody} updateAgencyCustomPolicyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateAgencyCustomPolicy = function (updateAgencyCustomPolicyRequest) {
        var options = (0, exports.ParamCreater)().updateAgencyCustomPolicy(updateAgencyCustomPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改云服务自定义策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改云服务自定义策略
     * @param {string} roleId 待修改的自定义策略ID，获取方式请参见：[自定义策略ID](https://apiexplorer.developer.huaweicloud.com/apiexplorer/doc?product&#x3D;IAM&amp;api&#x3D;ListCustomPolicies)。
     * @param {UpdateCloudServiceCustomPolicyRequestBody} updateCloudServiceCustomPolicyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateCloudServiceCustomPolicy = function (updateCloudServiceCustomPolicyRequest) {
        var options = (0, exports.ParamCreater)().updateCloudServiceCustomPolicy(updateCloudServiceCustomPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号接口访问策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改账号接口访问策略
     * @param {string} domainId 账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {UpdateDomainApiAclPolicyRequestBody} updateDomainApiAclPolicyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateDomainApiAclPolicy = function (updateDomainApiAclPolicyRequest) {
        var options = (0, exports.ParamCreater)().updateDomainApiAclPolicy(updateDomainApiAclPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号控制台访问策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改账号控制台访问策略
     * @param {string} domainId 账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {UpdateDomainConsoleAclPolicyRequestBody} [updateDomainConsoleAclPolicyRequestBody] 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateDomainConsoleAclPolicy = function (updateDomainConsoleAclPolicyRequest) {
        var options = (0, exports.ParamCreater)().updateDomainConsoleAclPolicy(updateDomainConsoleAclPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/zh-cn_topic_0079496985.html)为用户组授予所有项目服务权限。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 为用户组授予所有项目服务权限
     * @param {string} domainId 用户组所属账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} groupId 用户组ID，获取方式请参见：[获取用户组ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {string} roleId 权限ID，获取方式请参见：[获取权限名、权限ID](https://support.huaweicloud.com/api-iam/iam_10_0001.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateDomainGroupInheritRole = function (updateDomainGroupInheritRoleRequest) {
        var options = (0, exports.ParamCreater)().updateDomainGroupInheritRole(updateDomainGroupInheritRoleRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号登录策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改账号登录策略
     * @param {string} domainId 账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {UpdateDomainLoginPolicyRequestBody} updateDomainLoginPolicyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateDomainLoginPolicy = function (updateDomainLoginPolicyRequest) {
        var options = (0, exports.ParamCreater)().updateDomainLoginPolicy(updateDomainLoginPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号密码策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改账号密码策略
     * @param {string} domainId 账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {UpdateDomainPasswordPolicyRequestBody} updateDomainPasswordPolicyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateDomainPasswordPolicy = function (updateDomainPasswordPolicyRequest) {
        var options = (0, exports.ParamCreater)().updateDomainPasswordPolicy(updateDomainPasswordPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号操作保护策略。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改账号操作保护策略
     * @param {string} domainId 待修改的账号ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {UpdateDomainProtectPolicyRequestBody} updateDomainProtectPolicyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateDomainProtectPolicy = function (updateDomainProtectPolicyRequest) {
        var options = (0, exports.ParamCreater)().updateDomainProtectPolicy(updateDomainProtectPolicyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 修改OpenId Connect身份提供商配置
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改OpenId Connect身份提供商配置
     * @param {string} idpId 身份提供商ID
     * @param {UpdateOpenIdConnectConfigRequestBody} updateOpenIDConnectConfigRequestBody 修改身份提供商的信息
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateOpenIdConnectConfig = function (updateOpenIdConnectConfigRequest) {
        var options = (0, exports.ParamCreater)().updateOpenIdConnectConfig(updateOpenIdConnectConfigRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)设置项目状态。项目状态包括：正常、冻结。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 设置项目状态
     * @param {UpdateProjectStatusRequestBody} updateProjectStatusRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateProjectStatus = function (updateProjectStatusRequest) {
        var options = (0, exports.ParamCreater)().updateProjectStatus(updateProjectStatusRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)给IAM用户创建永久访问密钥，或IAM用户给自己创建永久访问密钥。
     *
     * 访问密钥（Access Key ID/Secret Access Key，简称AK/SK），是您通过开发工具（API、CLI、SDK）访问华为云时的身份凭证，不用于登录控制台。系统通过AK识别访问用户的身份，通过SK进行签名验证，通过加密签名验证可以确保请求的机密性、完整性和请求者身份的正确性。在控制台创建访问密钥的方式请参见：[访问密钥](https://support.huaweicloud.com/usermanual-ca/zh-cn_topic_0046606340.html) 。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 创建永久访问密钥
     * @param {CreatePermanentAccessKeyRequestBody} createPermanentAccessKeyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createPermanentAccessKey = function (createPermanentAccessKeyRequest) {
        var options = (0, exports.ParamCreater)().createPermanentAccessKey(createPermanentAccessKeyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于通过委托来获取临时访问密钥（临时AK/SK）和securitytoken。
     *
     * 临时AK/SK和securitytoken是系统颁发给IAM用户的临时访问令牌，有效期为15分钟至24小时，过期后需要重新获取。临时AK/SK和securitytoken遵循权限最小化原则。鉴权时，临时AK/SK和securitytoken必须同时使用，请求头中需要添加“x-security-token”字段，使用方法详情请参考：[API签名参考](https://support.huaweicloud.com/devg-apisign/api-sign-provide.html) 。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 通过委托获取临时访问密钥
     * @param {CreateTemporaryAccessKeyByAgencyRequestBody} createTemporaryAccessKeyByAgencyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createTemporaryAccessKeyByAgency = function (createTemporaryAccessKeyByAgencyRequest) {
        var options = (0, exports.ParamCreater)().createTemporaryAccessKeyByAgency(createTemporaryAccessKeyByAgencyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于通过token来获取临时AK/SK和securitytoken。
     *
     * 临时AK/SK和securitytoken是系统颁发给IAM用户的临时访问令牌，有效期为15分钟至24小时，过期后需要重新获取。临时AK/SK和securitytoken遵循权限最小化原则。鉴权时，临时AK/SK和securitytoken必须同时使用，请求头中需要添加“x-security-token”字段，使用方法详情请参考：[API签名参考](https://support.huaweicloud.com/devg-apisign/api-sign-provide.html)。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 通过token获取临时访问密钥
     * @param {CreateTemporaryAccessKeyByTokenRequestBody} createTemporaryAccessKeyByTokenRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createTemporaryAccessKeyByToken = function (createTemporaryAccessKeyByTokenRequest) {
        var options = (0, exports.ParamCreater)().createTemporaryAccessKeyByToken(createTemporaryAccessKeyByTokenRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除IAM用户的指定永久访问密钥，或IAM用户删除自己的指定永久访问密钥。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除指定永久访问密钥
     * @param {string} accessKey 待删除的指定AK。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.deletePermanentAccessKey = function (deletePermanentAccessKeyRequest) {
        var options = (0, exports.ParamCreater)().deletePermanentAccessKey(deletePermanentAccessKeyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户的所有永久访问密钥，或IAM用户查询自己的所有永久访问密钥。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询所有永久访问密钥
     * @param {string} [userId] 待查询的IAM用户ID。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listPermanentAccessKeys = function (listPermanentAccessKeysRequest) {
        var options = (0, exports.ParamCreater)().listPermanentAccessKeys(listPermanentAccessKeysRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户的指定永久访问密钥，或IAM用户查询自己的指定永久访问密钥。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询指定永久访问密钥
     * @param {string} accessKey 待查询的指定AK。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showPermanentAccessKey = function (showPermanentAccessKeyRequest) {
        var options = (0, exports.ParamCreater)().showPermanentAccessKey(showPermanentAccessKeyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改IAM用户的指定永久访问密钥，或IAM用户修改自己的指定永久访问密钥。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改指定永久访问密钥
     * @param {string} accessKey 待修改的指定AK。
     * @param {UpdatePermanentAccessKeyRequestBody} updatePermanentAccessKeyRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updatePermanentAccessKey = function (updatePermanentAccessKeyRequest) {
        var options = (0, exports.ParamCreater)().updatePermanentAccessKey(updatePermanentAccessKeyRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于绑定MFA设备。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 绑定MFA设备
     * @param {BindMfaDevice} createBindingDeviceRequestBody 绑定mfa Device
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createBindingDevice = function (createBindingDeviceRequest) {
        var options = (0, exports.ParamCreater)().createBindingDevice(createBindingDeviceRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于创建MFA设备。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 创建MFA设备
     * @param {CreateMfaDeviceReq} createMfaDeviceRequestBody 创建mfa_device的请求体
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createMfaDevice = function (createMfaDeviceRequest) {
        var options = (0, exports.ParamCreater)().createMfaDevice(createMfaDeviceRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建IAM用户。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 管理员创建IAM用户（推荐）
     * @param {CreateUserRequestBody} createUserRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.createUser = function (createUserRequest) {
        var options = (0, exports.ParamCreater)().createUser(createUserRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于解绑MFA设备
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 解绑MFA设备
     * @param {UnbindMfaDevice} deleteBindingDeviceRequestBody 解绑的请求体
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.deleteBindingDevice = function (deleteBindingDeviceRequest) {
        var options = (0, exports.ParamCreater)().deleteBindingDevice(deleteBindingDeviceRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除MFA设备。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 删除MFA设备
     * @param {string} userId 绑定MFA设备的IAM 用户ID。
     * @param {string} serialNumber MFA设备序列号。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.deleteMfaDevice = function (deleteMfaDeviceRequest) {
        var options = (0, exports.ParamCreater)().deleteMfaDevice(deleteMfaDeviceRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建IAM用户。IAM用户首次登录时需要修改密码。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 管理员创建IAM用户
     * @param {KeystoneCreateUserRequestBody} keystoneCreateUserRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateUser = function (keystoneCreateUserRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateUser(keystoneCreateUserRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除指定IAM用户。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 管理员删除IAM用户
     * @param {string} userId 待删除的IAM用户ID，获取方式请参见：[获取用户ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneDeleteUser = function (keystoneDeleteUserRequest) {
        var options = (0, exports.ParamCreater)().keystoneDeleteUser(keystoneDeleteUserRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户所属用户组，或IAM用户查询自己所属用户组。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询IAM用户所属用户组
     * @param {string} userId 待查询的IAM用户ID，获取方式请参见：[获取项目名称、项目ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListGroupsForUser = function (keystoneListGroupsForUserRequest) {
        var options = (0, exports.ParamCreater)().keystoneListGroupsForUser(keystoneListGroupsForUserRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 管理员查询IAM用户列表
     * @param {string} [domainId] IAM用户所属账号ID，获取方式请参见：[获取账号ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {boolean} [enabled] 是否启IAM用户，true为启用，false为停用，默认为true。
     * @param {string} [name] IAM用户名。
     * @param {string} [passwordExpiresAt] 密码过期时间，格式为：password_expires_at&#x3D;{operator}:{timestamp}。timestamp格式为：YYYY-MM-DDTHH:mm:ssZ。示例：  &#x60;&#x60;&#x60; password_expires_at&#x3D;lt:2016-12-08T22:02:00Z &#x60;&#x60;&#x60; &gt; - operator取值范围：lt，lte，gt，gte，eq，neq。 &gt; - lt：过期时间小于timestamp。 &gt; - lte：过期时间小于等于timestamp。 &gt; - gt：过期时间大于timestamp。 &gt; - gte：过期时间大于等于timestamp。 &gt; - eq：过期时间等于timestamp。 &gt; - neq：过期时间不等于timestamp。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneListUsers = function (keystoneListUsersRequest) {
        var options = (0, exports.ParamCreater)().keystoneListUsers(keystoneListUsersRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户详情，或IAM用户查询自己的用户详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询IAM用户详情
     * @param {string} userId 待查询的IAM用户ID，获取方式请参见：[获取用户ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneShowUser = function (keystoneShowUserRequest) {
        var options = (0, exports.ParamCreater)().keystoneShowUser(keystoneShowUserRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改IAM用户信息。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 管理员修改IAM用户信息
     * @param {string} userId 待修改信息的IAM用户ID，获取方式请参见：[获取用户ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {KeystoneUpdateUserByAdminRequestBody} keystoneUpdateUserByAdminRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneUpdateUserByAdmin = function (keystoneUpdateUserByAdminRequest) {
        var options = (0, exports.ParamCreater)().keystoneUpdateUserByAdmin(keystoneUpdateUserByAdminRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于IAM用户修改自己的密码。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改IAM用户密码
     * @param {string} userId 待修改密码的IAM用户ID，获取方式请参见：[获取用户ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {KeystoneUpdateUserPasswordRequestBody} keystoneUpdateUserPasswordRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneUpdateUserPassword = function (keystoneUpdateUserPasswordRequest) {
        var options = (0, exports.ParamCreater)().keystoneUpdateUserPassword(keystoneUpdateUserPasswordRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户的登录保护状态列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询IAM用户的登录保护状态信息列表
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listUserLoginProtects = function () {
        var options = (0, exports.ParamCreater)().listUserLoginProtects();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户的MFA绑定信息列表。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 该接口可以用于获取MFA设备。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.listUserMfaDevices = function () {
        var options = (0, exports.ParamCreater)().listUserMfaDevices();
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户详情，或IAM用户查询自己的详情。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询IAM用户详情（推荐）
     * @param {string} userId 待查询的IAM用户ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showUser = function (showUserRequest) {
        var options = (0, exports.ParamCreater)().showUser(showUserRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询指定IAM用户的登录保护状态信息，或IAM用户查询自己的登录保护状态信息。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询指定IAM用户的登录保护状态信息
     * @param {string} userId 待查询的IAM用户ID，获取方式请参见：[获取用户ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showUserLoginProtect = function (showUserLoginProtectRequest) {
        var options = (0, exports.ParamCreater)().showUserLoginProtect(showUserLoginProtectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询指定IAM用户的MFA绑定信息，或IAM用户查询自己的MFA绑定信息。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 查询指定IAM用户的MFA绑定信息
     * @param {string} userId 待查询的IAM用户ID，获取方式请参见：[获取用户ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.showUserMfaDevice = function (showUserMfaDeviceRequest) {
        var options = (0, exports.ParamCreater)().showUserMfaDevice(showUserMfaDeviceRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号操作保护。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改IAM用户登录保护状态信息
     * @param {string} userId 待修改登录保护状态信息的IAM用户ID。
     * @param {UpdateLoginProjectReq} updateLoginProtectRequestBody {     \&quot;login_protect\&quot;:{         \&quot;enabled\&quot;: true,         \&quot;verification_method\&quot;: \&quot;vmfa\&quot; [sms,email,vmfa]     } }
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateLoginProtect = function (updateLoginProtectRequest) {
        var options = (0, exports.ParamCreater)().updateLoginProtect(updateLoginProtectRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改IAM用户信息 。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 管理员修改IAM用户信息（推荐）
     * @param {string} userId 待修改信息的IAM用户ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {UpdateUserRequestBody} updateUserRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateUser = function (updateUserRequest) {
        var options = (0, exports.ParamCreater)().updateUser(updateUserRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于IAM用户修改自己的用户信息。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 修改IAM用户信息（推荐）
     * @param {string} userId 待修改信息的IAM用户ID，获取方式请参见：[获取账号、IAM用户、项目、用户组、委托的名称和ID](https://support.huaweicloud.com/api-iam/iam_17_0002.html)。
     * @param {UpdateUserInformationRequestBody} updateUserInformationRequestBody 请求体。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.updateUserInformation = function (updateUserInformationRequest) {
        var options = (0, exports.ParamCreater)().updateUserInformation(updateUserInformationRequest);
        options['responseHeaders'] = [''];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于获取委托方的token。
     *
     * 例如：A账号希望B账号管理自己的某些资源，所以A账号创建了委托给B账号，则A账号为委托方，B账号为被委托方。那么B账号可以通过该接口获取委托token。B账号仅能使用该token管理A账号的委托资源，不能管理自己账号中的资源。如果B账号需要管理自己账号中的资源，则需要获取自己的用户token。
     *
     * token是系统颁发给用户的访问令牌，承载用户的身份、权限等信息。调用IAM以及其他云服务的接口时，可以使用本接口获取的token进行鉴权。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。如果使用全局区域的Endpoint调用，该token可以在所有区域使用；如果使用非全局区域的Endpoint调用，则该token仅在该区域生效，不能跨区域使用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * &gt; - token的有效期为24小时，建议进行缓存，避免频繁调用。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 获取委托Token
     * @param {KeystoneCreateAgencyTokenRequestBody} keystoneCreateAgencyTokenRequestBody 请求体。
     * @param {string} [nocatalog] 如果设置该参数，返回的响应体中将不显示catalog信息。任何非空字符串都将解释为true，并使该字段生效。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateAgencyToken = function (keystoneCreateAgencyTokenRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateAgencyToken(keystoneCreateAgencyTokenRequest);
        options['responseHeaders'] = ['X-Subject-Token'];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于通过用户名/密码的方式进行认证来获取IAM用户token。
     *
     * token是系统颁发给IAM用户的访问令牌，承载用户的身份、权限等信息。调用IAM以及其他云服务的接口时，可以使用本接口获取的IAM用户token进行鉴权。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。如果使用全局区域的Endpoint调用，该token可以在所有区域使用；如果使用非全局区域的Endpoint调用，则该token仅在该区域生效，不能跨区域使用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     * &gt; - token的有效期为24小时，建议进行缓存，避免频繁调用。
     * &gt; - 通过Postman获取用户token示例请参见：[如何通过Postman获取用户token](https://support.huaweicloud.com/iam_faq/iam_01_034.html)。
     * &gt; - 如果需要获取具有Security Administrator权限的token，请参见：[IAM 常见问题](https://support.huaweicloud.com/iam_faq/iam_01_0608.html)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 获取IAM用户Token（使用密码）
     * @param {KeystoneCreateUserTokenByPasswordRequestBody} keystoneCreateUserTokenByPasswordRequestBody 请求体。
     * @param {string} [nocatalog] 如果设置该参数，返回的响应体中将不显示catalog信息。任何非空字符串都将解释为true，并使该字段生效。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateUserTokenByPassword = function (keystoneCreateUserTokenByPasswordRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateUserTokenByPassword(keystoneCreateUserTokenByPasswordRequest);
        options['responseHeaders'] = ['X-Subject-Token'];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于通过用户名/密码+虚拟MFA的方式进行认证，在IAM用户开启了的登录保护功能，并选择通过虚拟MFA验证时获取IAM用户token。
     *
     * token是系统颁发给用户的访问令牌，承载用户的身份、权限等信息。调用IAM以及其他云服务的接口时，可以使用本接口获取的token进行鉴权。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。如果使用全局区域的Endpoint调用，该token可以在所有区域使用；如果使用非全局区域的Endpoint调用，则该token仅在该区域生效，不能跨区域使用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     * &gt; - token的有效期为24小时，建议进行缓存，避免频繁调用。
     * &gt; - 通过Postman获取用户token示例请参见：[如何通过Postman获取用户token](https://support.huaweicloud.com/iam_faq/iam_01_034.html)。
     * &gt; - 如果需要获取具有Security Administrator权限的token，请参见：[IAM 常见问题](https://support.huaweicloud.com/iam_faq/iam_01_0608.html)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 获取IAM用户Token（使用密码+虚拟MFA）
     * @param {KeystoneCreateUserTokenByPasswordAndMfaRequestBody} keystoneCreateUserTokenByPasswordAndMfaRequestBody 请求体。
     * @param {string} [nocatalog] 如果设置该参数，返回的响应体中将不显示catalog信息。任何非空字符串都将解释为true，并使该字段生效。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneCreateUserTokenByPasswordAndMfa = function (keystoneCreateUserTokenByPasswordAndMfaRequest) {
        var options = (0, exports.ParamCreater)().keystoneCreateUserTokenByPasswordAndMfa(keystoneCreateUserTokenByPasswordAndMfaRequest);
        options['responseHeaders'] = ['X-Subject-Token'];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    /**
     * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)校验本账号中IAM用户token的有效性，或IAM用户校验自己token的有效性。管理员仅能校验本账号中IAM用户token的有效性，不能校验其他账号中IAM用户token的有效性。如果被校验的token有效，则返回该token的详细信息。
     *
     * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
     *
     * 详细说明请参考华为云API Explorer。
     * Please refer to Huawei cloud API Explorer for details.
     *
     * @summary 校验Token的有效性
     * @param {string} xSubjectToken 待校验的token。
     * @param {string} [nocatalog] 如果设置该参数，返回的响应体中将不显示catalog信息。任何非空字符串都将解释为true，并使该字段生效。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    IamClient.prototype.keystoneValidateToken = function (keystoneValidateTokenRequest) {
        var options = (0, exports.ParamCreater)().keystoneValidateToken(keystoneValidateTokenRequest);
        options['responseHeaders'] = ['X-Subject-Token'];
        // @ts-ignore
        return this.hcClient.sendRequest(options);
    };
    return IamClient;
}());
exports.IamClient = IamClient;
var ParamCreater = function () {
    return {
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为委托授予所有项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        associateAgencyWithAllProjectsPermission: function (associateAgencyWithAllProjectsPermissionRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-INHERIT/domains/{domain_id}/agencies/{agency_id}/roles/{role_id}/inherited_to_projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            var domainId;
            var roleId;
            if (associateAgencyWithAllProjectsPermissionRequest !== null && associateAgencyWithAllProjectsPermissionRequest !== undefined) {
                if (associateAgencyWithAllProjectsPermissionRequest instanceof AssociateAgencyWithAllProjectsPermissionRequest_1.AssociateAgencyWithAllProjectsPermissionRequest) {
                    agencyId = associateAgencyWithAllProjectsPermissionRequest.agencyId;
                    domainId = associateAgencyWithAllProjectsPermissionRequest.domainId;
                    roleId = associateAgencyWithAllProjectsPermissionRequest.roleId;
                }
                else {
                    agencyId = associateAgencyWithAllProjectsPermissionRequest['agency_id'];
                    domainId = associateAgencyWithAllProjectsPermissionRequest['domain_id'];
                    roleId = associateAgencyWithAllProjectsPermissionRequest['role_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling associateAgencyWithAllProjectsPermission.');
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling associateAgencyWithAllProjectsPermission.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling associateAgencyWithAllProjectsPermission.');
            }
            options.pathParams = { 'agency_id': agencyId, 'domain_id': domainId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为委托授予全局服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        associateAgencyWithDomainPermission: function (associateAgencyWithDomainPermissionRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-AGENCY/domains/{domain_id}/agencies/{agency_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var agencyId;
            var roleId;
            if (associateAgencyWithDomainPermissionRequest !== null && associateAgencyWithDomainPermissionRequest !== undefined) {
                if (associateAgencyWithDomainPermissionRequest instanceof AssociateAgencyWithDomainPermissionRequest_1.AssociateAgencyWithDomainPermissionRequest) {
                    domainId = associateAgencyWithDomainPermissionRequest.domainId;
                    agencyId = associateAgencyWithDomainPermissionRequest.agencyId;
                    roleId = associateAgencyWithDomainPermissionRequest.roleId;
                }
                else {
                    domainId = associateAgencyWithDomainPermissionRequest['domain_id'];
                    agencyId = associateAgencyWithDomainPermissionRequest['agency_id'];
                    roleId = associateAgencyWithDomainPermissionRequest['role_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling associateAgencyWithDomainPermission.');
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling associateAgencyWithDomainPermission.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling associateAgencyWithDomainPermission.');
            }
            options.pathParams = { 'domain_id': domainId, 'agency_id': agencyId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为委托授予项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        associateAgencyWithProjectPermission: function (associateAgencyWithProjectPermissionRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-AGENCY/projects/{project_id}/agencies/{agency_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            var roleId;
            if (associateAgencyWithProjectPermissionRequest !== null && associateAgencyWithProjectPermissionRequest !== undefined) {
                if (associateAgencyWithProjectPermissionRequest instanceof AssociateAgencyWithProjectPermissionRequest_1.AssociateAgencyWithProjectPermissionRequest) {
                    agencyId = associateAgencyWithProjectPermissionRequest.agencyId;
                    roleId = associateAgencyWithProjectPermissionRequest.roleId;
                }
                else {
                    agencyId = associateAgencyWithProjectPermissionRequest['agency_id'];
                    roleId = associateAgencyWithProjectPermissionRequest['role_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling associateAgencyWithProjectPermission.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling associateAgencyWithProjectPermission.');
            }
            options.pathParams = { 'agency_id': agencyId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口用于基于用户组为企业项目授权。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        associateRoleToGroupOnEnterpriseProject: function (associateRoleToGroupOnEnterpriseProjectRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-PERMISSION/enterprise-projects/{enterprise_project_id}/groups/{group_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var enterpriseProjectId;
            var groupId;
            var roleId;
            if (associateRoleToGroupOnEnterpriseProjectRequest !== null && associateRoleToGroupOnEnterpriseProjectRequest !== undefined) {
                if (associateRoleToGroupOnEnterpriseProjectRequest instanceof AssociateRoleToGroupOnEnterpriseProjectRequest_1.AssociateRoleToGroupOnEnterpriseProjectRequest) {
                    enterpriseProjectId = associateRoleToGroupOnEnterpriseProjectRequest.enterpriseProjectId;
                    groupId = associateRoleToGroupOnEnterpriseProjectRequest.groupId;
                    roleId = associateRoleToGroupOnEnterpriseProjectRequest.roleId;
                }
                else {
                    enterpriseProjectId = associateRoleToGroupOnEnterpriseProjectRequest['enterprise_project_id'];
                    groupId = associateRoleToGroupOnEnterpriseProjectRequest['group_id'];
                    roleId = associateRoleToGroupOnEnterpriseProjectRequest['role_id'];
                }
            }
            if (enterpriseProjectId === null || enterpriseProjectId === undefined) {
                throw new RequiredError('enterpriseProjectId', 'Required parameter enterpriseProjectId was null or undefined when calling associateRoleToGroupOnEnterpriseProject.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling associateRoleToGroupOnEnterpriseProject.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling associateRoleToGroupOnEnterpriseProject.');
            }
            options.pathParams = { 'enterprise_project_id': enterpriseProjectId, 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 基于用户为企业项目授权。
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        associateRoleToUserOnEnterpriseProject: function (associateRoleToUserOnEnterpriseProjectRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-PERMISSION/enterprise-projects/{enterprise_project_id}/users/{user_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var enterpriseProjectId;
            var userId;
            var roleId;
            if (associateRoleToUserOnEnterpriseProjectRequest !== null && associateRoleToUserOnEnterpriseProjectRequest !== undefined) {
                if (associateRoleToUserOnEnterpriseProjectRequest instanceof AssociateRoleToUserOnEnterpriseProjectRequest_1.AssociateRoleToUserOnEnterpriseProjectRequest) {
                    enterpriseProjectId = associateRoleToUserOnEnterpriseProjectRequest.enterpriseProjectId;
                    userId = associateRoleToUserOnEnterpriseProjectRequest.userId;
                    roleId = associateRoleToUserOnEnterpriseProjectRequest.roleId;
                }
                else {
                    enterpriseProjectId = associateRoleToUserOnEnterpriseProjectRequest['enterprise_project_id'];
                    userId = associateRoleToUserOnEnterpriseProjectRequest['user_id'];
                    roleId = associateRoleToUserOnEnterpriseProjectRequest['role_id'];
                }
            }
            if (enterpriseProjectId === null || enterpriseProjectId === undefined) {
                throw new RequiredError('enterpriseProjectId', 'Required parameter enterpriseProjectId was null or undefined when calling associateRoleToUserOnEnterpriseProject.');
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling associateRoleToUserOnEnterpriseProject.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling associateRoleToUserOnEnterpriseProject.');
            }
            options.pathParams = { 'enterprise_project_id': enterpriseProjectId, 'user_id': userId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)检查委托是否具有所有项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        checkAllProjectsPermissionForAgency: function (checkAllProjectsPermissionForAgencyRequest) {
            var options = {
                method: "HEAD",
                url: "/v3.0/OS-INHERIT/domains/{domain_id}/agencies/{agency_id}/roles/{role_id}/inherited_to_projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            var domainId;
            var roleId;
            if (checkAllProjectsPermissionForAgencyRequest !== null && checkAllProjectsPermissionForAgencyRequest !== undefined) {
                if (checkAllProjectsPermissionForAgencyRequest instanceof CheckAllProjectsPermissionForAgencyRequest_1.CheckAllProjectsPermissionForAgencyRequest) {
                    agencyId = checkAllProjectsPermissionForAgencyRequest.agencyId;
                    domainId = checkAllProjectsPermissionForAgencyRequest.domainId;
                    roleId = checkAllProjectsPermissionForAgencyRequest.roleId;
                }
                else {
                    agencyId = checkAllProjectsPermissionForAgencyRequest['agency_id'];
                    domainId = checkAllProjectsPermissionForAgencyRequest['domain_id'];
                    roleId = checkAllProjectsPermissionForAgencyRequest['role_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling checkAllProjectsPermissionForAgency.');
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling checkAllProjectsPermissionForAgency.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling checkAllProjectsPermissionForAgency.');
            }
            options.pathParams = { 'agency_id': agencyId, 'domain_id': domainId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询委托是否拥有全局服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        checkDomainPermissionForAgency: function (checkDomainPermissionForAgencyRequest) {
            var options = {
                method: "HEAD",
                url: "/v3.0/OS-AGENCY/domains/{domain_id}/agencies/{agency_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var agencyId;
            var roleId;
            if (checkDomainPermissionForAgencyRequest !== null && checkDomainPermissionForAgencyRequest !== undefined) {
                if (checkDomainPermissionForAgencyRequest instanceof CheckDomainPermissionForAgencyRequest_1.CheckDomainPermissionForAgencyRequest) {
                    domainId = checkDomainPermissionForAgencyRequest.domainId;
                    agencyId = checkDomainPermissionForAgencyRequest.agencyId;
                    roleId = checkDomainPermissionForAgencyRequest.roleId;
                }
                else {
                    domainId = checkDomainPermissionForAgencyRequest['domain_id'];
                    agencyId = checkDomainPermissionForAgencyRequest['agency_id'];
                    roleId = checkDomainPermissionForAgencyRequest['role_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling checkDomainPermissionForAgency.');
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling checkDomainPermissionForAgency.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling checkDomainPermissionForAgency.');
            }
            options.pathParams = { 'domain_id': domainId, 'agency_id': agencyId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询委托是否拥有项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        checkProjectPermissionForAgency: function (checkProjectPermissionForAgencyRequest) {
            var options = {
                method: "HEAD",
                url: "/v3.0/OS-AGENCY/projects/{project_id}/agencies/{agency_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            var roleId;
            if (checkProjectPermissionForAgencyRequest !== null && checkProjectPermissionForAgencyRequest !== undefined) {
                if (checkProjectPermissionForAgencyRequest instanceof CheckProjectPermissionForAgencyRequest_1.CheckProjectPermissionForAgencyRequest) {
                    agencyId = checkProjectPermissionForAgencyRequest.agencyId;
                    roleId = checkProjectPermissionForAgencyRequest.roleId;
                }
                else {
                    agencyId = checkProjectPermissionForAgencyRequest['agency_id'];
                    roleId = checkProjectPermissionForAgencyRequest['role_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling checkProjectPermissionForAgency.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling checkProjectPermissionForAgency.');
            }
            options.pathParams = { 'agency_id': agencyId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建委托。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createAgency: function (createAgencyRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-AGENCY/agencies",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createAgencyRequest !== null && createAgencyRequest !== undefined) {
                if (createAgencyRequest instanceof CreateAgencyRequest_1.CreateAgencyRequest) {
                    body = createAgencyRequest.body;
                }
                else {
                    body = createAgencyRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建委托自定义策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createAgencyCustomPolicy: function (createAgencyCustomPolicyRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-ROLE/roles",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createAgencyCustomPolicyRequest !== null && createAgencyCustomPolicyRequest !== undefined) {
                if (createAgencyCustomPolicyRequest instanceof CreateAgencyCustomPolicyRequest_1.CreateAgencyCustomPolicyRequest) {
                    body = createAgencyCustomPolicyRequest.body;
                }
                else {
                    body = createAgencyCustomPolicyRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建云服务自定义策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createCloudServiceCustomPolicy: function (createCloudServiceCustomPolicyRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-ROLE/roles",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createCloudServiceCustomPolicyRequest !== null && createCloudServiceCustomPolicyRequest !== undefined) {
                if (createCloudServiceCustomPolicyRequest instanceof CreateCloudServiceCustomPolicyRequest_1.CreateCloudServiceCustomPolicyRequest) {
                    body = createCloudServiceCustomPolicyRequest.body;
                }
                else {
                    body = createCloudServiceCustomPolicyRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口用于用于获取自定义代理登录票据logintoken。logintoken是系统颁发给自定义代理用户的登录票据，承载用户的身份、session等信息。调用自定义代理URL登录云服务控制台时，可以使用本接口获取的logintoken进行认证。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * &gt; - logintoken的有效期为10分钟。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createLoginToken: function (createLoginTokenRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-AUTH/securitytoken/logintokens",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createLoginTokenRequest !== null && createLoginTokenRequest !== undefined) {
                if (createLoginTokenRequest instanceof CreateLoginTokenRequest_1.CreateLoginTokenRequest) {
                    body = createLoginTokenRequest.body;
                }
                else {
                    body = createLoginTokenRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)导入Metadata文件。
         *
         * 账号在使用联邦认证功能前，需要先将Metadata文件导入到IAM中。Metadata文件是SAML 2.0协议约定的接口文件，包含访问接口地址和证书信息，请找企业管理员获取企业IdP的Metadata文件。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createMetadata: function (createMetadataRequest) {
            var options = {
                method: "POST",
                url: "/v3-ext/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/metadata",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var idpId;
            var protocolId;
            if (createMetadataRequest !== null && createMetadataRequest !== undefined) {
                if (createMetadataRequest instanceof CreateMetadataRequest_1.CreateMetadataRequest) {
                    idpId = createMetadataRequest.idpId;
                    protocolId = createMetadataRequest.protocolId;
                    body = createMetadataRequest.body;
                }
                else {
                    idpId = createMetadataRequest['idp_id'];
                    protocolId = createMetadataRequest['protocol_id'];
                    body = createMetadataRequest['body'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling createMetadata.');
            }
            if (protocolId === null || protocolId === undefined) {
                throw new RequiredError('protocolId', 'Required parameter protocolId was null or undefined when calling createMetadata.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'idp_id': idpId, 'protocol_id': protocolId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 创建OpenId Connect身份提供商配置
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createOpenIdConnectConfig: function (createOpenIdConnectConfigRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-FEDERATION/identity-providers/{idp_id}/openid-connect-config",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var idpId;
            if (createOpenIdConnectConfigRequest !== null && createOpenIdConnectConfigRequest !== undefined) {
                if (createOpenIdConnectConfigRequest instanceof CreateOpenIdConnectConfigRequest_1.CreateOpenIdConnectConfigRequest) {
                    idpId = createOpenIdConnectConfigRequest.idpId;
                    body = createOpenIdConnectConfigRequest.body;
                }
                else {
                    idpId = createOpenIdConnectConfigRequest['idp_id'];
                    body = createOpenIdConnectConfigRequest['body'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling createOpenIdConnectConfig.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'idp_id': idpId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 获取联邦认证token(OpenId Connect Id token方式)
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createTokenWithIdToken: function (createTokenWithIdTokenRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-AUTH/id-token/tokens",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var xIdpId;
            if (createTokenWithIdTokenRequest !== null && createTokenWithIdTokenRequest !== undefined) {
                if (createTokenWithIdTokenRequest instanceof CreateTokenWithIdTokenRequest_1.CreateTokenWithIdTokenRequest) {
                    xIdpId = createTokenWithIdTokenRequest.xIdpId;
                    body = createTokenWithIdTokenRequest.body;
                }
                else {
                    xIdpId = createTokenWithIdTokenRequest['X-Idp-Id'];
                    body = createTokenWithIdTokenRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            if (xIdpId !== undefined && xIdpId !== null) {
                localVarHeaderParameter['X-Idp-Id'] = String(xIdpId);
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 获取联邦认证token(OpenId Connect Id token方式)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createUnscopedTokenWithIdToken: function (createUnscopedTokenWithIdTokenRequest) {
            var options = {
                method: "POST",
                url: "/v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/auth",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var idpId;
            var protocolId;
            var authorization;
            if (createUnscopedTokenWithIdTokenRequest !== null && createUnscopedTokenWithIdTokenRequest !== undefined) {
                if (createUnscopedTokenWithIdTokenRequest instanceof CreateUnscopedTokenWithIdTokenRequest_1.CreateUnscopedTokenWithIdTokenRequest) {
                    idpId = createUnscopedTokenWithIdTokenRequest.idpId;
                    protocolId = createUnscopedTokenWithIdTokenRequest.protocolId;
                    authorization = createUnscopedTokenWithIdTokenRequest.authorization;
                }
                else {
                    idpId = createUnscopedTokenWithIdTokenRequest['idp_id'];
                    protocolId = createUnscopedTokenWithIdTokenRequest['protocol_id'];
                    authorization = createUnscopedTokenWithIdTokenRequest['Authorization'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling createUnscopedTokenWithIdToken.');
            }
            if (protocolId === null || protocolId === undefined) {
                throw new RequiredError('protocolId', 'Required parameter protocolId was null or undefined when calling createUnscopedTokenWithIdToken.');
            }
            if (authorization !== undefined && authorization !== null) {
                localVarHeaderParameter['Authorization'] = String(authorization);
            }
            options.pathParams = { 'idp_id': idpId, 'protocol_id': protocolId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除委托。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        deleteAgency: function (deleteAgencyRequest) {
            var options = {
                method: "DELETE",
                url: "/v3.0/OS-AGENCY/agencies/{agency_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            if (deleteAgencyRequest !== null && deleteAgencyRequest !== undefined) {
                if (deleteAgencyRequest instanceof DeleteAgencyRequest_1.DeleteAgencyRequest) {
                    agencyId = deleteAgencyRequest.agencyId;
                }
                else {
                    agencyId = deleteAgencyRequest['agency_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling deleteAgency.');
            }
            options.pathParams = { 'agency_id': agencyId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除自定义策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        deleteCustomPolicy: function (deleteCustomPolicyRequest) {
            var options = {
                method: "DELETE",
                url: "/v3.0/OS-ROLE/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var roleId;
            if (deleteCustomPolicyRequest !== null && deleteCustomPolicyRequest !== undefined) {
                if (deleteCustomPolicyRequest instanceof DeleteCustomPolicyRequest_1.DeleteCustomPolicyRequest) {
                    roleId = deleteCustomPolicyRequest.roleId;
                }
                else {
                    roleId = deleteCustomPolicyRequest['role_id'];
                }
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling deleteCustomPolicy.');
            }
            options.pathParams = { 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于移除用户组的所有项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        deleteDomainGroupInheritedRole: function (deleteDomainGroupInheritedRoleRequest) {
            var options = {
                method: "DELETE",
                url: "/v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var groupId;
            var roleId;
            if (deleteDomainGroupInheritedRoleRequest !== null && deleteDomainGroupInheritedRoleRequest !== undefined) {
                if (deleteDomainGroupInheritedRoleRequest instanceof DeleteDomainGroupInheritedRoleRequest_1.DeleteDomainGroupInheritedRoleRequest) {
                    domainId = deleteDomainGroupInheritedRoleRequest.domainId;
                    groupId = deleteDomainGroupInheritedRoleRequest.groupId;
                    roleId = deleteDomainGroupInheritedRoleRequest.roleId;
                }
                else {
                    domainId = deleteDomainGroupInheritedRoleRequest['domain_id'];
                    groupId = deleteDomainGroupInheritedRoleRequest['group_id'];
                    roleId = deleteDomainGroupInheritedRoleRequest['role_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling deleteDomainGroupInheritedRole.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling deleteDomainGroupInheritedRole.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling deleteDomainGroupInheritedRole.');
            }
            options.pathParams = { 'domain_id': domainId, 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)添加IAM用户到用户组。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneAddUserToGroup: function (keystoneAddUserToGroupRequest) {
            var options = {
                method: "PUT",
                url: "/v3/groups/{group_id}/users/{user_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            var userId;
            if (keystoneAddUserToGroupRequest !== null && keystoneAddUserToGroupRequest !== undefined) {
                if (keystoneAddUserToGroupRequest instanceof KeystoneAddUserToGroupRequest_1.KeystoneAddUserToGroupRequest) {
                    groupId = keystoneAddUserToGroupRequest.groupId;
                    userId = keystoneAddUserToGroupRequest.userId;
                }
                else {
                    groupId = keystoneAddUserToGroupRequest['group_id'];
                    userId = keystoneAddUserToGroupRequest['user_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneAddUserToGroup.');
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling keystoneAddUserToGroup.');
            }
            options.pathParams = { 'group_id': groupId, 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为用户组授予全局服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneAssociateGroupWithDomainPermission: function (keystoneAssociateGroupWithDomainPermissionRequest) {
            var options = {
                method: "PUT",
                url: "/v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var groupId;
            var roleId;
            if (keystoneAssociateGroupWithDomainPermissionRequest !== null && keystoneAssociateGroupWithDomainPermissionRequest !== undefined) {
                if (keystoneAssociateGroupWithDomainPermissionRequest instanceof KeystoneAssociateGroupWithDomainPermissionRequest_1.KeystoneAssociateGroupWithDomainPermissionRequest) {
                    domainId = keystoneAssociateGroupWithDomainPermissionRequest.domainId;
                    groupId = keystoneAssociateGroupWithDomainPermissionRequest.groupId;
                    roleId = keystoneAssociateGroupWithDomainPermissionRequest.roleId;
                }
                else {
                    domainId = keystoneAssociateGroupWithDomainPermissionRequest['domain_id'];
                    groupId = keystoneAssociateGroupWithDomainPermissionRequest['group_id'];
                    roleId = keystoneAssociateGroupWithDomainPermissionRequest['role_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling keystoneAssociateGroupWithDomainPermission.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneAssociateGroupWithDomainPermission.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling keystoneAssociateGroupWithDomainPermission.');
            }
            options.pathParams = { 'domain_id': domainId, 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)为用户组授予项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneAssociateGroupWithProjectPermission: function (keystoneAssociateGroupWithProjectPermissionRequest) {
            var options = {
                method: "PUT",
                url: "/v3/projects/{project_id}/groups/{group_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            var roleId;
            if (keystoneAssociateGroupWithProjectPermissionRequest !== null && keystoneAssociateGroupWithProjectPermissionRequest !== undefined) {
                if (keystoneAssociateGroupWithProjectPermissionRequest instanceof KeystoneAssociateGroupWithProjectPermissionRequest_1.KeystoneAssociateGroupWithProjectPermissionRequest) {
                    groupId = keystoneAssociateGroupWithProjectPermissionRequest.groupId;
                    roleId = keystoneAssociateGroupWithProjectPermissionRequest.roleId;
                }
                else {
                    groupId = keystoneAssociateGroupWithProjectPermissionRequest['group_id'];
                    roleId = keystoneAssociateGroupWithProjectPermissionRequest['role_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneAssociateGroupWithProjectPermission.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling keystoneAssociateGroupWithProjectPermission.');
            }
            options.pathParams = { 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组是否拥有全局服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCheckDomainPermissionForGroup: function (keystoneCheckDomainPermissionForGroupRequest) {
            var options = {
                method: "HEAD",
                url: "/v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var groupId;
            var roleId;
            if (keystoneCheckDomainPermissionForGroupRequest !== null && keystoneCheckDomainPermissionForGroupRequest !== undefined) {
                if (keystoneCheckDomainPermissionForGroupRequest instanceof KeystoneCheckDomainPermissionForGroupRequest_1.KeystoneCheckDomainPermissionForGroupRequest) {
                    domainId = keystoneCheckDomainPermissionForGroupRequest.domainId;
                    groupId = keystoneCheckDomainPermissionForGroupRequest.groupId;
                    roleId = keystoneCheckDomainPermissionForGroupRequest.roleId;
                }
                else {
                    domainId = keystoneCheckDomainPermissionForGroupRequest['domain_id'];
                    groupId = keystoneCheckDomainPermissionForGroupRequest['group_id'];
                    roleId = keystoneCheckDomainPermissionForGroupRequest['role_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling keystoneCheckDomainPermissionForGroup.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneCheckDomainPermissionForGroup.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling keystoneCheckDomainPermissionForGroup.');
            }
            options.pathParams = { 'domain_id': domainId, 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组是否拥有项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCheckProjectPermissionForGroup: function (keystoneCheckProjectPermissionForGroupRequest) {
            var options = {
                method: "HEAD",
                url: "/v3/projects/{project_id}/groups/{group_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            var roleId;
            if (keystoneCheckProjectPermissionForGroupRequest !== null && keystoneCheckProjectPermissionForGroupRequest !== undefined) {
                if (keystoneCheckProjectPermissionForGroupRequest instanceof KeystoneCheckProjectPermissionForGroupRequest_1.KeystoneCheckProjectPermissionForGroupRequest) {
                    groupId = keystoneCheckProjectPermissionForGroupRequest.groupId;
                    roleId = keystoneCheckProjectPermissionForGroupRequest.roleId;
                }
                else {
                    groupId = keystoneCheckProjectPermissionForGroupRequest['group_id'];
                    roleId = keystoneCheckProjectPermissionForGroupRequest['role_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneCheckProjectPermissionForGroup.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling keystoneCheckProjectPermissionForGroup.');
            }
            options.pathParams = { 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户是否在用户组中。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCheckUserInGroup: function (keystoneCheckUserInGroupRequest) {
            var options = {
                method: "HEAD",
                url: "/v3/groups/{group_id}/users/{user_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            var userId;
            if (keystoneCheckUserInGroupRequest !== null && keystoneCheckUserInGroupRequest !== undefined) {
                if (keystoneCheckUserInGroupRequest instanceof KeystoneCheckUserInGroupRequest_1.KeystoneCheckUserInGroupRequest) {
                    groupId = keystoneCheckUserInGroupRequest.groupId;
                    userId = keystoneCheckUserInGroupRequest.userId;
                }
                else {
                    groupId = keystoneCheckUserInGroupRequest['group_id'];
                    userId = keystoneCheckUserInGroupRequest['user_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneCheckUserInGroup.');
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling keystoneCheckUserInGroup.');
            }
            options.pathParams = { 'group_id': groupId, 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组是否拥有所有项目指定权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCheckroleForGroup: function (keystoneCheckroleForGroupRequest) {
            var options = {
                method: "HEAD",
                url: "/v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var groupId;
            var roleId;
            if (keystoneCheckroleForGroupRequest !== null && keystoneCheckroleForGroupRequest !== undefined) {
                if (keystoneCheckroleForGroupRequest instanceof KeystoneCheckroleForGroupRequest_1.KeystoneCheckroleForGroupRequest) {
                    domainId = keystoneCheckroleForGroupRequest.domainId;
                    groupId = keystoneCheckroleForGroupRequest.groupId;
                    roleId = keystoneCheckroleForGroupRequest.roleId;
                }
                else {
                    domainId = keystoneCheckroleForGroupRequest['domain_id'];
                    groupId = keystoneCheckroleForGroupRequest['group_id'];
                    roleId = keystoneCheckroleForGroupRequest['role_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling keystoneCheckroleForGroup.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneCheckroleForGroup.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling keystoneCheckroleForGroup.');
            }
            options.pathParams = { 'domain_id': domainId, 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建用户组。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateGroup: function (keystoneCreateGroupRequest) {
            var options = {
                method: "POST",
                url: "/v3/groups",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (keystoneCreateGroupRequest !== null && keystoneCreateGroupRequest !== undefined) {
                if (keystoneCreateGroupRequest instanceof KeystoneCreateGroupRequest_1.KeystoneCreateGroupRequest) {
                    body = keystoneCreateGroupRequest.body;
                }
                else {
                    body = keystoneCreateGroupRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)注册身份提供商。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateIdentityProvider: function (keystoneCreateIdentityProviderRequest) {
            var options = {
                method: "PUT",
                url: "/v3/OS-FEDERATION/identity_providers/{id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var contentType;
            var id;
            if (keystoneCreateIdentityProviderRequest !== null && keystoneCreateIdentityProviderRequest !== undefined) {
                if (keystoneCreateIdentityProviderRequest instanceof KeystoneCreateIdentityProviderRequest_1.KeystoneCreateIdentityProviderRequest) {
                    contentType = keystoneCreateIdentityProviderRequest.contentType;
                    id = keystoneCreateIdentityProviderRequest.id;
                    body = keystoneCreateIdentityProviderRequest.body;
                }
                else {
                    contentType = keystoneCreateIdentityProviderRequest['Content-Type'];
                    id = keystoneCreateIdentityProviderRequest['id'];
                    body = keystoneCreateIdentityProviderRequest['body'];
                }
            }
            if (id === null || id === undefined) {
                throw new RequiredError('id', 'Required parameter id was null or undefined when calling keystoneCreateIdentityProvider.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'id': id, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)注册映射。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateMapping: function (keystoneCreateMappingRequest) {
            var options = {
                method: "PUT",
                url: "/v3/OS-FEDERATION/mappings/{id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var id;
            if (keystoneCreateMappingRequest !== null && keystoneCreateMappingRequest !== undefined) {
                if (keystoneCreateMappingRequest instanceof KeystoneCreateMappingRequest_1.KeystoneCreateMappingRequest) {
                    id = keystoneCreateMappingRequest.id;
                    body = keystoneCreateMappingRequest.body;
                }
                else {
                    id = keystoneCreateMappingRequest['id'];
                    body = keystoneCreateMappingRequest['body'];
                }
            }
            if (id === null || id === undefined) {
                throw new RequiredError('id', 'Required parameter id was null or undefined when calling keystoneCreateMapping.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'id': id, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建项目。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateProject: function (keystoneCreateProjectRequest) {
            var options = {
                method: "POST",
                url: "/v3/projects",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (keystoneCreateProjectRequest !== null && keystoneCreateProjectRequest !== undefined) {
                if (keystoneCreateProjectRequest instanceof KeystoneCreateProjectRequest_1.KeystoneCreateProjectRequest) {
                    body = keystoneCreateProjectRequest.body;
                }
                else {
                    body = keystoneCreateProjectRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)注册协议（将协议关联到某一身份提供商）。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateProtocol: function (keystoneCreateProtocolRequest) {
            var options = {
                method: "PUT",
                url: "/v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var idpId;
            var protocolId;
            if (keystoneCreateProtocolRequest !== null && keystoneCreateProtocolRequest !== undefined) {
                if (keystoneCreateProtocolRequest instanceof KeystoneCreateProtocolRequest_1.KeystoneCreateProtocolRequest) {
                    idpId = keystoneCreateProtocolRequest.idpId;
                    protocolId = keystoneCreateProtocolRequest.protocolId;
                    body = keystoneCreateProtocolRequest.body;
                }
                else {
                    idpId = keystoneCreateProtocolRequest['idp_id'];
                    protocolId = keystoneCreateProtocolRequest['protocol_id'];
                    body = keystoneCreateProtocolRequest['body'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling keystoneCreateProtocol.');
            }
            if (protocolId === null || protocolId === undefined) {
                throw new RequiredError('protocolId', 'Required parameter protocolId was null or undefined when calling keystoneCreateProtocol.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'idp_id': idpId, 'protocol_id': protocolId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于通过联邦认证方式获取scoped token。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateScopedToken: function (keystoneCreateScopedTokenRequest) {
            var options = {
                method: "POST",
                url: "/v3/auth/tokens",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (keystoneCreateScopedTokenRequest !== null && keystoneCreateScopedTokenRequest !== undefined) {
                if (keystoneCreateScopedTokenRequest instanceof KeystoneCreateScopedTokenRequest_1.KeystoneCreateScopedTokenRequest) {
                    body = keystoneCreateScopedTokenRequest.body;
                }
                else {
                    body = keystoneCreateScopedTokenRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除用户组。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneDeleteGroup: function (keystoneDeleteGroupRequest) {
            var options = {
                method: "DELETE",
                url: "/v3/groups/{group_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            if (keystoneDeleteGroupRequest !== null && keystoneDeleteGroupRequest !== undefined) {
                if (keystoneDeleteGroupRequest instanceof KeystoneDeleteGroupRequest_1.KeystoneDeleteGroupRequest) {
                    groupId = keystoneDeleteGroupRequest.groupId;
                }
                else {
                    groupId = keystoneDeleteGroupRequest['group_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneDeleteGroup.');
            }
            options.pathParams = { 'group_id': groupId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html) 删除身份提供商。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneDeleteIdentityProvider: function (keystoneDeleteIdentityProviderRequest) {
            var options = {
                method: "DELETE",
                url: "/v3/OS-FEDERATION/identity_providers/{id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var id;
            if (keystoneDeleteIdentityProviderRequest !== null && keystoneDeleteIdentityProviderRequest !== undefined) {
                if (keystoneDeleteIdentityProviderRequest instanceof KeystoneDeleteIdentityProviderRequest_1.KeystoneDeleteIdentityProviderRequest) {
                    id = keystoneDeleteIdentityProviderRequest.id;
                }
                else {
                    id = keystoneDeleteIdentityProviderRequest['id'];
                }
            }
            if (id === null || id === undefined) {
                throw new RequiredError('id', 'Required parameter id was null or undefined when calling keystoneDeleteIdentityProvider.');
            }
            options.pathParams = { 'id': id, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除映射。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneDeleteMapping: function (keystoneDeleteMappingRequest) {
            var options = {
                method: "DELETE",
                url: "/v3/OS-FEDERATION/mappings/{id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var id;
            if (keystoneDeleteMappingRequest !== null && keystoneDeleteMappingRequest !== undefined) {
                if (keystoneDeleteMappingRequest instanceof KeystoneDeleteMappingRequest_1.KeystoneDeleteMappingRequest) {
                    id = keystoneDeleteMappingRequest.id;
                }
                else {
                    id = keystoneDeleteMappingRequest['id'];
                }
            }
            if (id === null || id === undefined) {
                throw new RequiredError('id', 'Required parameter id was null or undefined when calling keystoneDeleteMapping.');
            }
            options.pathParams = { 'id': id, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除协议。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneDeleteProtocol: function (keystoneDeleteProtocolRequest) {
            var options = {
                method: "DELETE",
                url: "/v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var idpId;
            var protocolId;
            if (keystoneDeleteProtocolRequest !== null && keystoneDeleteProtocolRequest !== undefined) {
                if (keystoneDeleteProtocolRequest instanceof KeystoneDeleteProtocolRequest_1.KeystoneDeleteProtocolRequest) {
                    idpId = keystoneDeleteProtocolRequest.idpId;
                    protocolId = keystoneDeleteProtocolRequest.protocolId;
                }
                else {
                    idpId = keystoneDeleteProtocolRequest['idp_id'];
                    protocolId = keystoneDeleteProtocolRequest['protocol_id'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling keystoneDeleteProtocol.');
            }
            if (protocolId === null || protocolId === undefined) {
                throw new RequiredError('protocolId', 'Required parameter protocolId was null or undefined when calling keystoneDeleteProtocol.');
            }
            options.pathParams = { 'idp_id': idpId, 'protocol_id': protocolId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于管理员查询用户组所有项目服务权限列表。 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListAllProjectPermissionsForGroup: function (keystoneListAllProjectPermissionsForGroupRequest) {
            var options = {
                method: "GET",
                url: "/v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var groupId;
            if (keystoneListAllProjectPermissionsForGroupRequest !== null && keystoneListAllProjectPermissionsForGroupRequest !== undefined) {
                if (keystoneListAllProjectPermissionsForGroupRequest instanceof KeystoneListAllProjectPermissionsForGroupRequest_1.KeystoneListAllProjectPermissionsForGroupRequest) {
                    domainId = keystoneListAllProjectPermissionsForGroupRequest.domainId;
                    groupId = keystoneListAllProjectPermissionsForGroupRequest.groupId;
                }
                else {
                    domainId = keystoneListAllProjectPermissionsForGroupRequest['domain_id'];
                    groupId = keystoneListAllProjectPermissionsForGroupRequest['group_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling keystoneListAllProjectPermissionsForGroup.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneListAllProjectPermissionsForGroup.');
            }
            options.pathParams = { 'domain_id': domainId, 'group_id': groupId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询IAM用户可以用访问的账号详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListAuthDomains: function () {
            var options = {
                method: "GET",
                url: "/v3/auth/domains",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询IAM用户可以访问的项目列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListAuthProjects: function () {
            var options = {
                method: "GET",
                url: "/v3/auth/projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询全局服务中的用户组权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListDomainPermissionsForGroup: function (keystoneListDomainPermissionsForGroupRequest) {
            var options = {
                method: "GET",
                url: "/v3/domains/{domain_id}/groups/{group_id}/roles",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var groupId;
            if (keystoneListDomainPermissionsForGroupRequest !== null && keystoneListDomainPermissionsForGroupRequest !== undefined) {
                if (keystoneListDomainPermissionsForGroupRequest instanceof KeystoneListDomainPermissionsForGroupRequest_1.KeystoneListDomainPermissionsForGroupRequest) {
                    domainId = keystoneListDomainPermissionsForGroupRequest.domainId;
                    groupId = keystoneListDomainPermissionsForGroupRequest.groupId;
                }
                else {
                    domainId = keystoneListDomainPermissionsForGroupRequest['domain_id'];
                    groupId = keystoneListDomainPermissionsForGroupRequest['group_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling keystoneListDomainPermissionsForGroup.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneListDomainPermissionsForGroup.');
            }
            options.pathParams = { 'domain_id': domainId, 'group_id': groupId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询终端节点列表。终端节点用来提供服务访问入口。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListEndpoints: function (keystoneListEndpointsRequest) {
            var options = {
                method: "GET",
                url: "/v3/endpoints",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var _interface;
            var serviceId;
            if (keystoneListEndpointsRequest !== null && keystoneListEndpointsRequest !== undefined) {
                if (keystoneListEndpointsRequest instanceof KeystoneListEndpointsRequest_1.KeystoneListEndpointsRequest) {
                    _interface = keystoneListEndpointsRequest._interface;
                    serviceId = keystoneListEndpointsRequest.serviceId;
                }
                else {
                    _interface = keystoneListEndpointsRequest['interface'];
                    serviceId = keystoneListEndpointsRequest['service_id'];
                }
            }
            if (_interface !== null && _interface !== undefined) {
                localVarQueryParameter['interface'] = _interface;
            }
            if (serviceId !== null && serviceId !== undefined) {
                localVarQueryParameter['service_id'] = serviceId;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口用于查询联邦用户可以访问的账号列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         * &gt; - 推荐使用[查询IAM用户可以访问的账号详情](https://apiexplorer.developer.huaweicloud.com/apiexplorer/doc?product&#x3D;IAM&amp;api&#x3D;KeystoneQueryAccessibleDomainDetailsToUser)，该接口可以返回相同的响应格式。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListFederationDomains: function () {
            var options = {
                method: "GET",
                url: "/v3/OS-FEDERATION/domains",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListGroups: function (keystoneListGroupsRequest) {
            var options = {
                method: "GET",
                url: "/v3/groups",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var domainId;
            var name;
            if (keystoneListGroupsRequest !== null && keystoneListGroupsRequest !== undefined) {
                if (keystoneListGroupsRequest instanceof KeystoneListGroupsRequest_1.KeystoneListGroupsRequest) {
                    domainId = keystoneListGroupsRequest.domainId;
                    name = keystoneListGroupsRequest.name;
                }
                else {
                    domainId = keystoneListGroupsRequest['domain_id'];
                    name = keystoneListGroupsRequest['name'];
                }
            }
            if (domainId !== null && domainId !== undefined) {
                localVarQueryParameter['domain_id'] = domainId;
            }
            if (name !== null && name !== undefined) {
                localVarQueryParameter['name'] = name;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询身份提供商列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListIdentityProviders: function () {
            var options = {
                method: "GET",
                url: "/v3/OS-FEDERATION/identity_providers",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询映射列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListMappings: function () {
            var options = {
                method: "GET",
                url: "/v3/OS-FEDERATION/mappings",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询权限列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListPermissions: function (keystoneListPermissionsRequest) {
            var options = {
                method: "GET",
                url: "/v3/roles",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var name;
            var domainId;
            var page;
            var perPage;
            var permissionType;
            var displayName;
            var type;
            var catalog;
            if (keystoneListPermissionsRequest !== null && keystoneListPermissionsRequest !== undefined) {
                if (keystoneListPermissionsRequest instanceof KeystoneListPermissionsRequest_1.KeystoneListPermissionsRequest) {
                    name = keystoneListPermissionsRequest.name;
                    domainId = keystoneListPermissionsRequest.domainId;
                    page = keystoneListPermissionsRequest.page;
                    perPage = keystoneListPermissionsRequest.perPage;
                    permissionType = keystoneListPermissionsRequest.permissionType;
                    displayName = keystoneListPermissionsRequest.displayName;
                    type = keystoneListPermissionsRequest.type;
                    catalog = keystoneListPermissionsRequest.catalog;
                }
                else {
                    name = keystoneListPermissionsRequest['name'];
                    domainId = keystoneListPermissionsRequest['domain_id'];
                    page = keystoneListPermissionsRequest['page'];
                    perPage = keystoneListPermissionsRequest['per_page'];
                    permissionType = keystoneListPermissionsRequest['permission_type'];
                    displayName = keystoneListPermissionsRequest['display_name'];
                    type = keystoneListPermissionsRequest['type'];
                    catalog = keystoneListPermissionsRequest['catalog'];
                }
            }
            if (name !== null && name !== undefined) {
                localVarQueryParameter['name'] = name;
            }
            if (domainId !== null && domainId !== undefined) {
                localVarQueryParameter['domain_id'] = domainId;
            }
            if (page !== null && page !== undefined) {
                localVarQueryParameter['page'] = page;
            }
            if (perPage !== null && perPage !== undefined) {
                localVarQueryParameter['per_page'] = perPage;
            }
            if (permissionType !== null && permissionType !== undefined) {
                localVarQueryParameter['permission_type'] = permissionType;
            }
            if (displayName !== null && displayName !== undefined) {
                localVarQueryParameter['display_name'] = displayName;
            }
            if (type !== null && type !== undefined) {
                localVarQueryParameter['type'] = type;
            }
            if (catalog !== null && catalog !== undefined) {
                localVarQueryParameter['catalog'] = catalog;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询项目服务中的用户组权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListProjectPermissionsForGroup: function (keystoneListProjectPermissionsForGroupRequest) {
            var options = {
                method: "GET",
                url: "/v3/projects/{project_id}/groups/{group_id}/roles",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            if (keystoneListProjectPermissionsForGroupRequest !== null && keystoneListProjectPermissionsForGroupRequest !== undefined) {
                if (keystoneListProjectPermissionsForGroupRequest instanceof KeystoneListProjectPermissionsForGroupRequest_1.KeystoneListProjectPermissionsForGroupRequest) {
                    groupId = keystoneListProjectPermissionsForGroupRequest.groupId;
                }
                else {
                    groupId = keystoneListProjectPermissionsForGroupRequest['group_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneListProjectPermissionsForGroup.');
            }
            options.pathParams = { 'group_id': groupId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询指定条件下的项目列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListProjects: function (keystoneListProjectsRequest) {
            var options = {
                method: "GET",
                url: "/v3/projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var domainId;
            var name;
            var parentId;
            var enabled;
            var isDomain;
            var page;
            var perPage;
            if (keystoneListProjectsRequest !== null && keystoneListProjectsRequest !== undefined) {
                if (keystoneListProjectsRequest instanceof KeystoneListProjectsRequest_1.KeystoneListProjectsRequest) {
                    domainId = keystoneListProjectsRequest.domainId;
                    name = keystoneListProjectsRequest.name;
                    parentId = keystoneListProjectsRequest.parentId;
                    enabled = keystoneListProjectsRequest.enabled;
                    isDomain = keystoneListProjectsRequest.isDomain;
                    page = keystoneListProjectsRequest.page;
                    perPage = keystoneListProjectsRequest.perPage;
                }
                else {
                    domainId = keystoneListProjectsRequest['domain_id'];
                    name = keystoneListProjectsRequest['name'];
                    parentId = keystoneListProjectsRequest['parent_id'];
                    enabled = keystoneListProjectsRequest['enabled'];
                    isDomain = keystoneListProjectsRequest['is_domain'];
                    page = keystoneListProjectsRequest['page'];
                    perPage = keystoneListProjectsRequest['per_page'];
                }
            }
            if (domainId !== null && domainId !== undefined) {
                localVarQueryParameter['domain_id'] = domainId;
            }
            if (name !== null && name !== undefined) {
                localVarQueryParameter['name'] = name;
            }
            if (parentId !== null && parentId !== undefined) {
                localVarQueryParameter['parent_id'] = parentId;
            }
            if (enabled !== null && enabled !== undefined) {
                localVarQueryParameter['enabled'] = enabled;
            }
            if (isDomain !== null && isDomain !== undefined) {
                localVarQueryParameter['is_domain'] = isDomain;
            }
            if (page !== null && page !== undefined) {
                localVarQueryParameter['page'] = page;
            }
            if (perPage !== null && perPage !== undefined) {
                localVarQueryParameter['per_page'] = perPage;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询指定IAM用户的项目列表，或IAM用户查询自己的项目列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListProjectsForUser: function (keystoneListProjectsForUserRequest) {
            var options = {
                method: "GET",
                url: "/v3/users/{user_id}/projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var userId;
            if (keystoneListProjectsForUserRequest !== null && keystoneListProjectsForUserRequest !== undefined) {
                if (keystoneListProjectsForUserRequest instanceof KeystoneListProjectsForUserRequest_1.KeystoneListProjectsForUserRequest) {
                    userId = keystoneListProjectsForUserRequest.userId;
                }
                else {
                    userId = keystoneListProjectsForUserRequest['user_id'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling keystoneListProjectsForUser.');
            }
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询协议列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListProtocols: function (keystoneListProtocolsRequest) {
            var options = {
                method: "GET",
                url: "/v3/OS-FEDERATION/identity_providers/{idp_id}/protocols",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var idpId;
            if (keystoneListProtocolsRequest !== null && keystoneListProtocolsRequest !== undefined) {
                if (keystoneListProtocolsRequest instanceof KeystoneListProtocolsRequest_1.KeystoneListProtocolsRequest) {
                    idpId = keystoneListProtocolsRequest.idpId;
                }
                else {
                    idpId = keystoneListProtocolsRequest['idp_id'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling keystoneListProtocols.');
            }
            options.pathParams = { 'idp_id': idpId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询区域列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListRegions: function () {
            var options = {
                method: "GET",
                url: "/v3/regions",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询服务列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListServices: function (keystoneListServicesRequest) {
            var options = {
                method: "GET",
                url: "/v3/services",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var type;
            if (keystoneListServicesRequest !== null && keystoneListServicesRequest !== undefined) {
                if (keystoneListServicesRequest instanceof KeystoneListServicesRequest_1.KeystoneListServicesRequest) {
                    type = keystoneListServicesRequest.type;
                }
                else {
                    type = keystoneListServicesRequest['type'];
                }
            }
            if (type !== null && type !== undefined) {
                localVarQueryParameter['type'] = type;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组中所包含的IAM用户。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListUsersForGroupByAdmin: function (keystoneListUsersForGroupByAdminRequest) {
            var options = {
                method: "GET",
                url: "/v3/groups/{group_id}/users",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            if (keystoneListUsersForGroupByAdminRequest !== null && keystoneListUsersForGroupByAdminRequest !== undefined) {
                if (keystoneListUsersForGroupByAdminRequest instanceof KeystoneListUsersForGroupByAdminRequest_1.KeystoneListUsersForGroupByAdminRequest) {
                    groupId = keystoneListUsersForGroupByAdminRequest.groupId;
                }
                else {
                    groupId = keystoneListUsersForGroupByAdminRequest['group_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneListUsersForGroupByAdmin.');
            }
            options.pathParams = { 'group_id': groupId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口用于查询Keystone API的版本信息。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListVersions: function () {
            var options = {
                method: "GET",
                url: "/",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除用户组的全局服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneRemoveDomainPermissionFromGroup: function (keystoneRemoveDomainPermissionFromGroupRequest) {
            var options = {
                method: "DELETE",
                url: "/v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var groupId;
            var roleId;
            if (keystoneRemoveDomainPermissionFromGroupRequest !== null && keystoneRemoveDomainPermissionFromGroupRequest !== undefined) {
                if (keystoneRemoveDomainPermissionFromGroupRequest instanceof KeystoneRemoveDomainPermissionFromGroupRequest_1.KeystoneRemoveDomainPermissionFromGroupRequest) {
                    domainId = keystoneRemoveDomainPermissionFromGroupRequest.domainId;
                    groupId = keystoneRemoveDomainPermissionFromGroupRequest.groupId;
                    roleId = keystoneRemoveDomainPermissionFromGroupRequest.roleId;
                }
                else {
                    domainId = keystoneRemoveDomainPermissionFromGroupRequest['domain_id'];
                    groupId = keystoneRemoveDomainPermissionFromGroupRequest['group_id'];
                    roleId = keystoneRemoveDomainPermissionFromGroupRequest['role_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling keystoneRemoveDomainPermissionFromGroup.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneRemoveDomainPermissionFromGroup.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling keystoneRemoveDomainPermissionFromGroup.');
            }
            options.pathParams = { 'domain_id': domainId, 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除用户组的项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneRemoveProjectPermissionFromGroup: function (keystoneRemoveProjectPermissionFromGroupRequest) {
            var options = {
                method: "DELETE",
                url: "/v3/projects/{project_id}/groups/{group_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            var roleId;
            if (keystoneRemoveProjectPermissionFromGroupRequest !== null && keystoneRemoveProjectPermissionFromGroupRequest !== undefined) {
                if (keystoneRemoveProjectPermissionFromGroupRequest instanceof KeystoneRemoveProjectPermissionFromGroupRequest_1.KeystoneRemoveProjectPermissionFromGroupRequest) {
                    groupId = keystoneRemoveProjectPermissionFromGroupRequest.groupId;
                    roleId = keystoneRemoveProjectPermissionFromGroupRequest.roleId;
                }
                else {
                    groupId = keystoneRemoveProjectPermissionFromGroupRequest['group_id'];
                    roleId = keystoneRemoveProjectPermissionFromGroupRequest['role_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneRemoveProjectPermissionFromGroup.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling keystoneRemoveProjectPermissionFromGroup.');
            }
            options.pathParams = { 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除用户组中的IAM用户。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneRemoveUserFromGroup: function (keystoneRemoveUserFromGroupRequest) {
            var options = {
                method: "DELETE",
                url: "/v3/groups/{group_id}/users/{user_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            var userId;
            if (keystoneRemoveUserFromGroupRequest !== null && keystoneRemoveUserFromGroupRequest !== undefined) {
                if (keystoneRemoveUserFromGroupRequest instanceof KeystoneRemoveUserFromGroupRequest_1.KeystoneRemoveUserFromGroupRequest) {
                    groupId = keystoneRemoveUserFromGroupRequest.groupId;
                    userId = keystoneRemoveUserFromGroupRequest.userId;
                }
                else {
                    groupId = keystoneRemoveUserFromGroupRequest['group_id'];
                    userId = keystoneRemoveUserFromGroupRequest['user_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneRemoveUserFromGroup.');
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling keystoneRemoveUserFromGroup.');
            }
            options.pathParams = { 'group_id': groupId, 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询请求头中X-Auth-Token对应的服务目录。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowCatalog: function () {
            var options = {
                method: "GET",
                url: "/v3/auth/catalog",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询终端节点详情。终端节点用来提供服务访问入口。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowEndpoint: function (keystoneShowEndpointRequest) {
            var options = {
                method: "GET",
                url: "/v3/endpoints/{endpoint_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var endpointId;
            if (keystoneShowEndpointRequest !== null && keystoneShowEndpointRequest !== undefined) {
                if (keystoneShowEndpointRequest instanceof KeystoneShowEndpointRequest_1.KeystoneShowEndpointRequest) {
                    endpointId = keystoneShowEndpointRequest.endpointId;
                }
                else {
                    endpointId = keystoneShowEndpointRequest['endpoint_id'];
                }
            }
            if (endpointId === null || endpointId === undefined) {
                throw new RequiredError('endpointId', 'Required parameter endpointId was null or undefined when calling keystoneShowEndpoint.');
            }
            options.pathParams = { 'endpoint_id': endpointId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询用户组详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowGroup: function (keystoneShowGroupRequest) {
            var options = {
                method: "GET",
                url: "/v3/groups/{group_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            if (keystoneShowGroupRequest !== null && keystoneShowGroupRequest !== undefined) {
                if (keystoneShowGroupRequest instanceof KeystoneShowGroupRequest_1.KeystoneShowGroupRequest) {
                    groupId = keystoneShowGroupRequest.groupId;
                }
                else {
                    groupId = keystoneShowGroupRequest['group_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneShowGroup.');
            }
            options.pathParams = { 'group_id': groupId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询身份提供商详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowIdentityProvider: function (keystoneShowIdentityProviderRequest) {
            var options = {
                method: "GET",
                url: "/v3/OS-FEDERATION/identity_providers/{id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var id;
            if (keystoneShowIdentityProviderRequest !== null && keystoneShowIdentityProviderRequest !== undefined) {
                if (keystoneShowIdentityProviderRequest instanceof KeystoneShowIdentityProviderRequest_1.KeystoneShowIdentityProviderRequest) {
                    id = keystoneShowIdentityProviderRequest.id;
                }
                else {
                    id = keystoneShowIdentityProviderRequest['id'];
                }
            }
            if (id === null || id === undefined) {
                throw new RequiredError('id', 'Required parameter id was null or undefined when calling keystoneShowIdentityProvider.');
            }
            options.pathParams = { 'id': id, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询映射详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowMapping: function (keystoneShowMappingRequest) {
            var options = {
                method: "GET",
                url: "/v3/OS-FEDERATION/mappings/{id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var id;
            if (keystoneShowMappingRequest !== null && keystoneShowMappingRequest !== undefined) {
                if (keystoneShowMappingRequest instanceof KeystoneShowMappingRequest_1.KeystoneShowMappingRequest) {
                    id = keystoneShowMappingRequest.id;
                }
                else {
                    id = keystoneShowMappingRequest['id'];
                }
            }
            if (id === null || id === undefined) {
                throw new RequiredError('id', 'Required parameter id was null or undefined when calling keystoneShowMapping.');
            }
            options.pathParams = { 'id': id, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询权限详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowPermission: function (keystoneShowPermissionRequest) {
            var options = {
                method: "GET",
                url: "/v3/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var roleId;
            if (keystoneShowPermissionRequest !== null && keystoneShowPermissionRequest !== undefined) {
                if (keystoneShowPermissionRequest instanceof KeystoneShowPermissionRequest_1.KeystoneShowPermissionRequest) {
                    roleId = keystoneShowPermissionRequest.roleId;
                }
                else {
                    roleId = keystoneShowPermissionRequest['role_id'];
                }
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling keystoneShowPermission.');
            }
            options.pathParams = { 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询项目详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowProject: function () {
            var options = {
                method: "GET",
                url: "/v3/projects/{project_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询协议详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowProtocol: function (keystoneShowProtocolRequest) {
            var options = {
                method: "GET",
                url: "/v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var idpId;
            var protocolId;
            if (keystoneShowProtocolRequest !== null && keystoneShowProtocolRequest !== undefined) {
                if (keystoneShowProtocolRequest instanceof KeystoneShowProtocolRequest_1.KeystoneShowProtocolRequest) {
                    idpId = keystoneShowProtocolRequest.idpId;
                    protocolId = keystoneShowProtocolRequest.protocolId;
                }
                else {
                    idpId = keystoneShowProtocolRequest['idp_id'];
                    protocolId = keystoneShowProtocolRequest['protocol_id'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling keystoneShowProtocol.');
            }
            if (protocolId === null || protocolId === undefined) {
                throw new RequiredError('protocolId', 'Required parameter protocolId was null or undefined when calling keystoneShowProtocol.');
            }
            options.pathParams = { 'idp_id': idpId, 'protocol_id': protocolId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询区域详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowRegion: function (keystoneShowRegionRequest) {
            var options = {
                method: "GET",
                url: "/v3/regions/{region_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var regionId;
            if (keystoneShowRegionRequest !== null && keystoneShowRegionRequest !== undefined) {
                if (keystoneShowRegionRequest instanceof KeystoneShowRegionRequest_1.KeystoneShowRegionRequest) {
                    regionId = keystoneShowRegionRequest.regionId;
                }
                else {
                    regionId = keystoneShowRegionRequest['region_id'];
                }
            }
            if (regionId === null || regionId === undefined) {
                throw new RequiredError('regionId', 'Required parameter regionId was null or undefined when calling keystoneShowRegion.');
            }
            options.pathParams = { 'region_id': regionId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询账号密码强度策略，查询结果包括密码强度策略的正则表达式及其描述。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowSecurityCompliance: function (keystoneShowSecurityComplianceRequest) {
            var options = {
                method: "GET",
                url: "/v3/domains/{domain_id}/config/security_compliance",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            if (keystoneShowSecurityComplianceRequest !== null && keystoneShowSecurityComplianceRequest !== undefined) {
                if (keystoneShowSecurityComplianceRequest instanceof KeystoneShowSecurityComplianceRequest_1.KeystoneShowSecurityComplianceRequest) {
                    domainId = keystoneShowSecurityComplianceRequest.domainId;
                }
                else {
                    domainId = keystoneShowSecurityComplianceRequest['domain_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling keystoneShowSecurityCompliance.');
            }
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于按条件查询账号密码强度策略，查询结果包括密码强度策略的正则表达式及其描述。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowSecurityComplianceByOption: function (keystoneShowSecurityComplianceByOptionRequest) {
            var options = {
                method: "GET",
                url: "/v3/domains/{domain_id}/config/security_compliance/{option}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var option;
            if (keystoneShowSecurityComplianceByOptionRequest !== null && keystoneShowSecurityComplianceByOptionRequest !== undefined) {
                if (keystoneShowSecurityComplianceByOptionRequest instanceof KeystoneShowSecurityComplianceByOptionRequest_1.KeystoneShowSecurityComplianceByOptionRequest) {
                    domainId = keystoneShowSecurityComplianceByOptionRequest.domainId;
                    option = keystoneShowSecurityComplianceByOptionRequest.option;
                }
                else {
                    domainId = keystoneShowSecurityComplianceByOptionRequest['domain_id'];
                    option = keystoneShowSecurityComplianceByOptionRequest['option'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling keystoneShowSecurityComplianceByOption.');
            }
            if (option === null || option === undefined) {
                throw new RequiredError('option', 'Required parameter option was null or undefined when calling keystoneShowSecurityComplianceByOption.');
            }
            options.pathParams = { 'domain_id': domainId, 'option': option, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询服务详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowService: function (keystoneShowServiceRequest) {
            var options = {
                method: "GET",
                url: "/v3/services/{service_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var serviceId;
            if (keystoneShowServiceRequest !== null && keystoneShowServiceRequest !== undefined) {
                if (keystoneShowServiceRequest instanceof KeystoneShowServiceRequest_1.KeystoneShowServiceRequest) {
                    serviceId = keystoneShowServiceRequest.serviceId;
                }
                else {
                    serviceId = keystoneShowServiceRequest['service_id'];
                }
            }
            if (serviceId === null || serviceId === undefined) {
                throw new RequiredError('serviceId', 'Required parameter serviceId was null or undefined when calling keystoneShowService.');
            }
            options.pathParams = { 'service_id': serviceId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口用于查询Keystone API的3.0版本的信息。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowVersion: function () {
            var options = {
                method: "GET",
                url: "/v3",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)更新用户组信息。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneUpdateGroup: function (keystoneUpdateGroupRequest) {
            var options = {
                method: "PATCH",
                url: "/v3/groups/{group_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var groupId;
            if (keystoneUpdateGroupRequest !== null && keystoneUpdateGroupRequest !== undefined) {
                if (keystoneUpdateGroupRequest instanceof KeystoneUpdateGroupRequest_1.KeystoneUpdateGroupRequest) {
                    groupId = keystoneUpdateGroupRequest.groupId;
                    body = keystoneUpdateGroupRequest.body;
                }
                else {
                    groupId = keystoneUpdateGroupRequest['group_id'];
                    body = keystoneUpdateGroupRequest['body'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling keystoneUpdateGroup.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'group_id': groupId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)更新身份提供商。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneUpdateIdentityProvider: function (keystoneUpdateIdentityProviderRequest) {
            var options = {
                method: "PATCH",
                url: "/v3/OS-FEDERATION/identity_providers/{id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var id;
            if (keystoneUpdateIdentityProviderRequest !== null && keystoneUpdateIdentityProviderRequest !== undefined) {
                if (keystoneUpdateIdentityProviderRequest instanceof KeystoneUpdateIdentityProviderRequest_1.KeystoneUpdateIdentityProviderRequest) {
                    id = keystoneUpdateIdentityProviderRequest.id;
                    body = keystoneUpdateIdentityProviderRequest.body;
                }
                else {
                    id = keystoneUpdateIdentityProviderRequest['id'];
                    body = keystoneUpdateIdentityProviderRequest['body'];
                }
            }
            if (id === null || id === undefined) {
                throw new RequiredError('id', 'Required parameter id was null or undefined when calling keystoneUpdateIdentityProvider.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'id': id, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)更新映射。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneUpdateMapping: function (keystoneUpdateMappingRequest) {
            var options = {
                method: "PATCH",
                url: "/v3/OS-FEDERATION/mappings/{id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var id;
            if (keystoneUpdateMappingRequest !== null && keystoneUpdateMappingRequest !== undefined) {
                if (keystoneUpdateMappingRequest instanceof KeystoneUpdateMappingRequest_1.KeystoneUpdateMappingRequest) {
                    id = keystoneUpdateMappingRequest.id;
                    body = keystoneUpdateMappingRequest.body;
                }
                else {
                    id = keystoneUpdateMappingRequest['id'];
                    body = keystoneUpdateMappingRequest['body'];
                }
            }
            if (id === null || id === undefined) {
                throw new RequiredError('id', 'Required parameter id was null or undefined when calling keystoneUpdateMapping.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'id': id, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改项目信息。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneUpdateProject: function (keystoneUpdateProjectRequest) {
            var options = {
                method: "PATCH",
                url: "/v3/projects/{project_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (keystoneUpdateProjectRequest !== null && keystoneUpdateProjectRequest !== undefined) {
                if (keystoneUpdateProjectRequest instanceof KeystoneUpdateProjectRequest_1.KeystoneUpdateProjectRequest) {
                    body = keystoneUpdateProjectRequest.body;
                }
                else {
                    body = keystoneUpdateProjectRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)更新协议。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneUpdateProtocol: function (keystoneUpdateProtocolRequest) {
            var options = {
                method: "PATCH",
                url: "/v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var idpId;
            var protocolId;
            if (keystoneUpdateProtocolRequest !== null && keystoneUpdateProtocolRequest !== undefined) {
                if (keystoneUpdateProtocolRequest instanceof KeystoneUpdateProtocolRequest_1.KeystoneUpdateProtocolRequest) {
                    idpId = keystoneUpdateProtocolRequest.idpId;
                    protocolId = keystoneUpdateProtocolRequest.protocolId;
                    body = keystoneUpdateProtocolRequest.body;
                }
                else {
                    idpId = keystoneUpdateProtocolRequest['idp_id'];
                    protocolId = keystoneUpdateProtocolRequest['protocol_id'];
                    body = keystoneUpdateProtocolRequest['body'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling keystoneUpdateProtocol.');
            }
            if (protocolId === null || protocolId === undefined) {
                throw new RequiredError('protocolId', 'Required parameter protocolId was null or undefined when calling keystoneUpdateProtocol.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'idp_id': idpId, 'protocol_id': protocolId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询指定条件下的委托列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listAgencies: function (listAgenciesRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-AGENCY/agencies",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var domainId;
            var trustDomainId;
            var name;
            if (listAgenciesRequest !== null && listAgenciesRequest !== undefined) {
                if (listAgenciesRequest instanceof ListAgenciesRequest_1.ListAgenciesRequest) {
                    domainId = listAgenciesRequest.domainId;
                    trustDomainId = listAgenciesRequest.trustDomainId;
                    name = listAgenciesRequest.name;
                }
                else {
                    domainId = listAgenciesRequest['domain_id'];
                    trustDomainId = listAgenciesRequest['trust_domain_id'];
                    name = listAgenciesRequest['name'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling listAgencies.');
            }
            if (domainId !== null && domainId !== undefined) {
                localVarQueryParameter['domain_id'] = domainId;
            }
            if (trustDomainId !== null && trustDomainId !== undefined) {
                localVarQueryParameter['trust_domain_id'] = trustDomainId;
            }
            if (name !== null && name !== undefined) {
                localVarQueryParameter['name'] = name;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询委托所有项目服务权限列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listAllProjectsPermissionsForAgency: function (listAllProjectsPermissionsForAgencyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-INHERIT/domains/{domain_id}/agencies/{agency_id}/roles/inherited_to_projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            var domainId;
            if (listAllProjectsPermissionsForAgencyRequest !== null && listAllProjectsPermissionsForAgencyRequest !== undefined) {
                if (listAllProjectsPermissionsForAgencyRequest instanceof ListAllProjectsPermissionsForAgencyRequest_1.ListAllProjectsPermissionsForAgencyRequest) {
                    agencyId = listAllProjectsPermissionsForAgencyRequest.agencyId;
                    domainId = listAllProjectsPermissionsForAgencyRequest.domainId;
                }
                else {
                    agencyId = listAllProjectsPermissionsForAgencyRequest['agency_id'];
                    domainId = listAllProjectsPermissionsForAgencyRequest['domain_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling listAllProjectsPermissionsForAgency.');
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling listAllProjectsPermissionsForAgency.');
            }
            options.pathParams = { 'agency_id': agencyId, 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询自定义策略列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listCustomPolicies: function (listCustomPoliciesRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-ROLE/roles",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var page;
            var perPage;
            if (listCustomPoliciesRequest !== null && listCustomPoliciesRequest !== undefined) {
                if (listCustomPoliciesRequest instanceof ListCustomPoliciesRequest_1.ListCustomPoliciesRequest) {
                    page = listCustomPoliciesRequest.page;
                    perPage = listCustomPoliciesRequest.perPage;
                }
                else {
                    page = listCustomPoliciesRequest['page'];
                    perPage = listCustomPoliciesRequest['per_page'];
                }
            }
            if (page !== null && page !== undefined) {
                localVarQueryParameter['page'] = page;
            }
            if (perPage !== null && perPage !== undefined) {
                localVarQueryParameter['per_page'] = perPage;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询全局服务中的委托权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listDomainPermissionsForAgency: function (listDomainPermissionsForAgencyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-AGENCY/domains/{domain_id}/agencies/{agency_id}/roles",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var agencyId;
            if (listDomainPermissionsForAgencyRequest !== null && listDomainPermissionsForAgencyRequest !== undefined) {
                if (listDomainPermissionsForAgencyRequest instanceof ListDomainPermissionsForAgencyRequest_1.ListDomainPermissionsForAgencyRequest) {
                    domainId = listDomainPermissionsForAgencyRequest.domainId;
                    agencyId = listDomainPermissionsForAgencyRequest.agencyId;
                }
                else {
                    domainId = listDomainPermissionsForAgencyRequest['domain_id'];
                    agencyId = listDomainPermissionsForAgencyRequest['agency_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling listDomainPermissionsForAgency.');
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling listDomainPermissionsForAgency.');
            }
            options.pathParams = { 'domain_id': domainId, 'agency_id': agencyId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可用于查询用户组所关联的企业项目。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listEnterpriseProjectsForGroup: function (listEnterpriseProjectsForGroupRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-PERMISSION/groups/{group_id}/enterprise-projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var groupId;
            if (listEnterpriseProjectsForGroupRequest !== null && listEnterpriseProjectsForGroupRequest !== undefined) {
                if (listEnterpriseProjectsForGroupRequest instanceof ListEnterpriseProjectsForGroupRequest_1.ListEnterpriseProjectsForGroupRequest) {
                    groupId = listEnterpriseProjectsForGroupRequest.groupId;
                }
                else {
                    groupId = listEnterpriseProjectsForGroupRequest['group_id'];
                }
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling listEnterpriseProjectsForGroup.');
            }
            options.pathParams = { 'group_id': groupId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可用于查询用户所关联的企业项目。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listEnterpriseProjectsForUser: function (listEnterpriseProjectsForUserRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-PERMISSION/users/{user_id}/enterprise-projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var userId;
            if (listEnterpriseProjectsForUserRequest !== null && listEnterpriseProjectsForUserRequest !== undefined) {
                if (listEnterpriseProjectsForUserRequest instanceof ListEnterpriseProjectsForUserRequest_1.ListEnterpriseProjectsForUserRequest) {
                    userId = listEnterpriseProjectsForUserRequest.userId;
                }
                else {
                    userId = listEnterpriseProjectsForUserRequest['user_id'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling listEnterpriseProjectsForUser.');
            }
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可用于查询企业项目关联的用户组。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listGroupsForEnterpriseProject: function (listGroupsForEnterpriseProjectRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-PERMISSION/enterprise-projects/{enterprise_project_id}/groups",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var enterpriseProjectId;
            if (listGroupsForEnterpriseProjectRequest !== null && listGroupsForEnterpriseProjectRequest !== undefined) {
                if (listGroupsForEnterpriseProjectRequest instanceof ListGroupsForEnterpriseProjectRequest_1.ListGroupsForEnterpriseProjectRequest) {
                    enterpriseProjectId = listGroupsForEnterpriseProjectRequest.enterpriseProjectId;
                }
                else {
                    enterpriseProjectId = listGroupsForEnterpriseProjectRequest['enterprise_project_id'];
                }
            }
            if (enterpriseProjectId === null || enterpriseProjectId === undefined) {
                throw new RequiredError('enterpriseProjectId', 'Required parameter enterpriseProjectId was null or undefined when calling listGroupsForEnterpriseProject.');
            }
            options.pathParams = { 'enterprise_project_id': enterpriseProjectId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询项目服务中的委托权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listProjectPermissionsForAgency: function (listProjectPermissionsForAgencyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-AGENCY/projects/{project_id}/agencies/{agency_id}/roles",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            if (listProjectPermissionsForAgencyRequest !== null && listProjectPermissionsForAgencyRequest !== undefined) {
                if (listProjectPermissionsForAgencyRequest instanceof ListProjectPermissionsForAgencyRequest_1.ListProjectPermissionsForAgencyRequest) {
                    agencyId = listProjectPermissionsForAgencyRequest.agencyId;
                }
                else {
                    agencyId = listProjectPermissionsForAgencyRequest['agency_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling listProjectPermissionsForAgency.');
            }
            options.pathParams = { 'agency_id': agencyId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可用于查询企业项目已关联用户组的权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listRolesForGroupOnEnterpriseProject: function (listRolesForGroupOnEnterpriseProjectRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-PERMISSION/enterprise-projects/{enterprise_project_id}/groups/{group_id}/roles",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var enterpriseProjectId;
            var groupId;
            if (listRolesForGroupOnEnterpriseProjectRequest !== null && listRolesForGroupOnEnterpriseProjectRequest !== undefined) {
                if (listRolesForGroupOnEnterpriseProjectRequest instanceof ListRolesForGroupOnEnterpriseProjectRequest_1.ListRolesForGroupOnEnterpriseProjectRequest) {
                    enterpriseProjectId = listRolesForGroupOnEnterpriseProjectRequest.enterpriseProjectId;
                    groupId = listRolesForGroupOnEnterpriseProjectRequest.groupId;
                }
                else {
                    enterpriseProjectId = listRolesForGroupOnEnterpriseProjectRequest['enterprise_project_id'];
                    groupId = listRolesForGroupOnEnterpriseProjectRequest['group_id'];
                }
            }
            if (enterpriseProjectId === null || enterpriseProjectId === undefined) {
                throw new RequiredError('enterpriseProjectId', 'Required parameter enterpriseProjectId was null or undefined when calling listRolesForGroupOnEnterpriseProject.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling listRolesForGroupOnEnterpriseProject.');
            }
            options.pathParams = { 'enterprise_project_id': enterpriseProjectId, 'group_id': groupId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可用于查询企业项目直接关联用户的权限。
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listRolesForUserOnEnterpriseProject: function (listRolesForUserOnEnterpriseProjectRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-PERMISSION/enterprise-projects/{enterprise_project_id}/users/{user_id}/roles",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var enterpriseProjectId;
            var userId;
            if (listRolesForUserOnEnterpriseProjectRequest !== null && listRolesForUserOnEnterpriseProjectRequest !== undefined) {
                if (listRolesForUserOnEnterpriseProjectRequest instanceof ListRolesForUserOnEnterpriseProjectRequest_1.ListRolesForUserOnEnterpriseProjectRequest) {
                    enterpriseProjectId = listRolesForUserOnEnterpriseProjectRequest.enterpriseProjectId;
                    userId = listRolesForUserOnEnterpriseProjectRequest.userId;
                }
                else {
                    enterpriseProjectId = listRolesForUserOnEnterpriseProjectRequest['enterprise_project_id'];
                    userId = listRolesForUserOnEnterpriseProjectRequest['user_id'];
                }
            }
            if (enterpriseProjectId === null || enterpriseProjectId === undefined) {
                throw new RequiredError('enterpriseProjectId', 'Required parameter enterpriseProjectId was null or undefined when calling listRolesForUserOnEnterpriseProject.');
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling listRolesForUserOnEnterpriseProject.');
            }
            options.pathParams = { 'enterprise_project_id': enterpriseProjectId, 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可用于查询企业项目直接关联的用户。
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listUsersForEnterpriseProject: function (listUsersForEnterpriseProjectRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-PERMISSION/enterprise-projects/{enterprise_project_id}/users",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var enterpriseProjectId;
            if (listUsersForEnterpriseProjectRequest !== null && listUsersForEnterpriseProjectRequest !== undefined) {
                if (listUsersForEnterpriseProjectRequest instanceof ListUsersForEnterpriseProjectRequest_1.ListUsersForEnterpriseProjectRequest) {
                    enterpriseProjectId = listUsersForEnterpriseProjectRequest.enterpriseProjectId;
                }
                else {
                    enterpriseProjectId = listUsersForEnterpriseProjectRequest['enterprise_project_id'];
                }
            }
            if (enterpriseProjectId === null || enterpriseProjectId === undefined) {
                throw new RequiredError('enterpriseProjectId', 'Required parameter enterpriseProjectId was null or undefined when calling listUsersForEnterpriseProject.');
            }
            options.pathParams = { 'enterprise_project_id': enterpriseProjectId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除委托的所有项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        removeAllProjectsPermissionFromAgency: function (removeAllProjectsPermissionFromAgencyRequest) {
            var options = {
                method: "DELETE",
                url: "/v3.0/OS-INHERIT/domains/{domain_id}/agencies/{agency_id}/roles/{role_id}/inherited_to_projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            var domainId;
            var roleId;
            if (removeAllProjectsPermissionFromAgencyRequest !== null && removeAllProjectsPermissionFromAgencyRequest !== undefined) {
                if (removeAllProjectsPermissionFromAgencyRequest instanceof RemoveAllProjectsPermissionFromAgencyRequest_1.RemoveAllProjectsPermissionFromAgencyRequest) {
                    agencyId = removeAllProjectsPermissionFromAgencyRequest.agencyId;
                    domainId = removeAllProjectsPermissionFromAgencyRequest.domainId;
                    roleId = removeAllProjectsPermissionFromAgencyRequest.roleId;
                }
                else {
                    agencyId = removeAllProjectsPermissionFromAgencyRequest['agency_id'];
                    domainId = removeAllProjectsPermissionFromAgencyRequest['domain_id'];
                    roleId = removeAllProjectsPermissionFromAgencyRequest['role_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling removeAllProjectsPermissionFromAgency.');
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling removeAllProjectsPermissionFromAgency.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling removeAllProjectsPermissionFromAgency.');
            }
            options.pathParams = { 'agency_id': agencyId, 'domain_id': domainId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除委托的全局服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        removeDomainPermissionFromAgency: function (removeDomainPermissionFromAgencyRequest) {
            var options = {
                method: "DELETE",
                url: "/v3.0/OS-AGENCY/domains/{domain_id}/agencies/{agency_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var agencyId;
            var roleId;
            if (removeDomainPermissionFromAgencyRequest !== null && removeDomainPermissionFromAgencyRequest !== undefined) {
                if (removeDomainPermissionFromAgencyRequest instanceof RemoveDomainPermissionFromAgencyRequest_1.RemoveDomainPermissionFromAgencyRequest) {
                    domainId = removeDomainPermissionFromAgencyRequest.domainId;
                    agencyId = removeDomainPermissionFromAgencyRequest.agencyId;
                    roleId = removeDomainPermissionFromAgencyRequest.roleId;
                }
                else {
                    domainId = removeDomainPermissionFromAgencyRequest['domain_id'];
                    agencyId = removeDomainPermissionFromAgencyRequest['agency_id'];
                    roleId = removeDomainPermissionFromAgencyRequest['role_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling removeDomainPermissionFromAgency.');
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling removeDomainPermissionFromAgency.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling removeDomainPermissionFromAgency.');
            }
            options.pathParams = { 'domain_id': domainId, 'agency_id': agencyId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)移除委托的项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        removeProjectPermissionFromAgency: function (removeProjectPermissionFromAgencyRequest) {
            var options = {
                method: "DELETE",
                url: "/v3.0/OS-AGENCY/projects/{project_id}/agencies/{agency_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            var roleId;
            if (removeProjectPermissionFromAgencyRequest !== null && removeProjectPermissionFromAgencyRequest !== undefined) {
                if (removeProjectPermissionFromAgencyRequest instanceof RemoveProjectPermissionFromAgencyRequest_1.RemoveProjectPermissionFromAgencyRequest) {
                    agencyId = removeProjectPermissionFromAgencyRequest.agencyId;
                    roleId = removeProjectPermissionFromAgencyRequest.roleId;
                }
                else {
                    agencyId = removeProjectPermissionFromAgencyRequest['agency_id'];
                    roleId = removeProjectPermissionFromAgencyRequest['role_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling removeProjectPermissionFromAgency.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling removeProjectPermissionFromAgency.');
            }
            options.pathParams = { 'agency_id': agencyId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口用于删除企业项目关联用户组的权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        revokeRoleFromGroupOnEnterpriseProject: function (revokeRoleFromGroupOnEnterpriseProjectRequest) {
            var options = {
                method: "DELETE",
                url: "/v3.0/OS-PERMISSION/enterprise-projects/{enterprise_project_id}/groups/{group_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var enterpriseProjectId;
            var groupId;
            var roleId;
            if (revokeRoleFromGroupOnEnterpriseProjectRequest !== null && revokeRoleFromGroupOnEnterpriseProjectRequest !== undefined) {
                if (revokeRoleFromGroupOnEnterpriseProjectRequest instanceof RevokeRoleFromGroupOnEnterpriseProjectRequest_1.RevokeRoleFromGroupOnEnterpriseProjectRequest) {
                    enterpriseProjectId = revokeRoleFromGroupOnEnterpriseProjectRequest.enterpriseProjectId;
                    groupId = revokeRoleFromGroupOnEnterpriseProjectRequest.groupId;
                    roleId = revokeRoleFromGroupOnEnterpriseProjectRequest.roleId;
                }
                else {
                    enterpriseProjectId = revokeRoleFromGroupOnEnterpriseProjectRequest['enterprise_project_id'];
                    groupId = revokeRoleFromGroupOnEnterpriseProjectRequest['group_id'];
                    roleId = revokeRoleFromGroupOnEnterpriseProjectRequest['role_id'];
                }
            }
            if (enterpriseProjectId === null || enterpriseProjectId === undefined) {
                throw new RequiredError('enterpriseProjectId', 'Required parameter enterpriseProjectId was null or undefined when calling revokeRoleFromGroupOnEnterpriseProject.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling revokeRoleFromGroupOnEnterpriseProject.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling revokeRoleFromGroupOnEnterpriseProject.');
            }
            options.pathParams = { 'enterprise_project_id': enterpriseProjectId, 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 删除企业项目直接关联用户的权限。
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        revokeRoleFromUserOnEnterpriseProject: function (revokeRoleFromUserOnEnterpriseProjectRequest) {
            var options = {
                method: "DELETE",
                url: "/v3.0/OS-PERMISSION/enterprise-projects/{enterprise_project_id}/users/{user_id}/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var enterpriseProjectId;
            var userId;
            var roleId;
            if (revokeRoleFromUserOnEnterpriseProjectRequest !== null && revokeRoleFromUserOnEnterpriseProjectRequest !== undefined) {
                if (revokeRoleFromUserOnEnterpriseProjectRequest instanceof RevokeRoleFromUserOnEnterpriseProjectRequest_1.RevokeRoleFromUserOnEnterpriseProjectRequest) {
                    enterpriseProjectId = revokeRoleFromUserOnEnterpriseProjectRequest.enterpriseProjectId;
                    userId = revokeRoleFromUserOnEnterpriseProjectRequest.userId;
                    roleId = revokeRoleFromUserOnEnterpriseProjectRequest.roleId;
                }
                else {
                    enterpriseProjectId = revokeRoleFromUserOnEnterpriseProjectRequest['enterprise_project_id'];
                    userId = revokeRoleFromUserOnEnterpriseProjectRequest['user_id'];
                    roleId = revokeRoleFromUserOnEnterpriseProjectRequest['role_id'];
                }
            }
            if (enterpriseProjectId === null || enterpriseProjectId === undefined) {
                throw new RequiredError('enterpriseProjectId', 'Required parameter enterpriseProjectId was null or undefined when calling revokeRoleFromUserOnEnterpriseProject.');
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling revokeRoleFromUserOnEnterpriseProject.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling revokeRoleFromUserOnEnterpriseProject.');
            }
            options.pathParams = { 'enterprise_project_id': enterpriseProjectId, 'user_id': userId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询委托详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showAgency: function (showAgencyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-AGENCY/agencies/{agency_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var agencyId;
            if (showAgencyRequest !== null && showAgencyRequest !== undefined) {
                if (showAgencyRequest instanceof ShowAgencyRequest_1.ShowAgencyRequest) {
                    agencyId = showAgencyRequest.agencyId;
                }
                else {
                    agencyId = showAgencyRequest['agency_id'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling showAgency.');
            }
            options.pathParams = { 'agency_id': agencyId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询自定义策略详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showCustomPolicy: function (showCustomPolicyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-ROLE/roles/{role_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var roleId;
            if (showCustomPolicyRequest !== null && showCustomPolicyRequest !== undefined) {
                if (showCustomPolicyRequest instanceof ShowCustomPolicyRequest_1.ShowCustomPolicyRequest) {
                    roleId = showCustomPolicyRequest.roleId;
                }
                else {
                    roleId = showCustomPolicyRequest['role_id'];
                }
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling showCustomPolicy.');
            }
            options.pathParams = { 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询账号接口访问控制策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showDomainApiAclPolicy: function (showDomainApiAclPolicyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/api-acl-policy",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            if (showDomainApiAclPolicyRequest !== null && showDomainApiAclPolicyRequest !== undefined) {
                if (showDomainApiAclPolicyRequest instanceof ShowDomainApiAclPolicyRequest_1.ShowDomainApiAclPolicyRequest) {
                    domainId = showDomainApiAclPolicyRequest.domainId;
                }
                else {
                    domainId = showDomainApiAclPolicyRequest['domain_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling showDomainApiAclPolicy.');
            }
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询账号控制台访问控制策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showDomainConsoleAclPolicy: function (showDomainConsoleAclPolicyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/console-acl-policy",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            if (showDomainConsoleAclPolicyRequest !== null && showDomainConsoleAclPolicyRequest !== undefined) {
                if (showDomainConsoleAclPolicyRequest instanceof ShowDomainConsoleAclPolicyRequest_1.ShowDomainConsoleAclPolicyRequest) {
                    domainId = showDomainConsoleAclPolicyRequest.domainId;
                }
                else {
                    domainId = showDomainConsoleAclPolicyRequest['domain_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling showDomainConsoleAclPolicy.');
            }
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询账号登录策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showDomainLoginPolicy: function (showDomainLoginPolicyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/login-policy",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            if (showDomainLoginPolicyRequest !== null && showDomainLoginPolicyRequest !== undefined) {
                if (showDomainLoginPolicyRequest instanceof ShowDomainLoginPolicyRequest_1.ShowDomainLoginPolicyRequest) {
                    domainId = showDomainLoginPolicyRequest.domainId;
                }
                else {
                    domainId = showDomainLoginPolicyRequest['domain_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling showDomainLoginPolicy.');
            }
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询账号密码策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showDomainPasswordPolicy: function (showDomainPasswordPolicyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/password-policy",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            if (showDomainPasswordPolicyRequest !== null && showDomainPasswordPolicyRequest !== undefined) {
                if (showDomainPasswordPolicyRequest instanceof ShowDomainPasswordPolicyRequest_1.ShowDomainPasswordPolicyRequest) {
                    domainId = showDomainPasswordPolicyRequest.domainId;
                }
                else {
                    domainId = showDomainPasswordPolicyRequest['domain_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling showDomainPasswordPolicy.');
            }
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询账号操作保护策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showDomainProtectPolicy: function (showDomainProtectPolicyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/protect-policy",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            if (showDomainProtectPolicyRequest !== null && showDomainProtectPolicyRequest !== undefined) {
                if (showDomainProtectPolicyRequest instanceof ShowDomainProtectPolicyRequest_1.ShowDomainProtectPolicyRequest) {
                    domainId = showDomainProtectPolicyRequest.domainId;
                }
                else {
                    domainId = showDomainProtectPolicyRequest['domain_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling showDomainProtectPolicy.');
            }
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询账号配额。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showDomainQuota: function (showDomainQuotaRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-QUOTA/domains/{domain_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var domainId;
            var type;
            if (showDomainQuotaRequest !== null && showDomainQuotaRequest !== undefined) {
                if (showDomainQuotaRequest instanceof ShowDomainQuotaRequest_1.ShowDomainQuotaRequest) {
                    domainId = showDomainQuotaRequest.domainId;
                    type = showDomainQuotaRequest.type;
                }
                else {
                    domainId = showDomainQuotaRequest['domain_id'];
                    type = showDomainQuotaRequest['type'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling showDomainQuota.');
            }
            if (type !== null && type !== undefined) {
                localVarQueryParameter['type'] = type;
            }
            options.queryParams = localVarQueryParameter;
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口用于查询指定账号中的授权记录。
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showDomainRoleAssignments: function (showDomainRoleAssignmentsRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-PERMISSION/role-assignments",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var domainId;
            var roleId;
            var subject;
            var subjectUserId;
            var subjectGroupId;
            var subjectAgencyId;
            var scope;
            var scopeProjectId;
            var scopeDomainId;
            var scopeEnterpriseProjectsId;
            var isInherited;
            var includeGroup;
            var page;
            var perPage;
            if (showDomainRoleAssignmentsRequest !== null && showDomainRoleAssignmentsRequest !== undefined) {
                if (showDomainRoleAssignmentsRequest instanceof ShowDomainRoleAssignmentsRequest_1.ShowDomainRoleAssignmentsRequest) {
                    domainId = showDomainRoleAssignmentsRequest.domainId;
                    roleId = showDomainRoleAssignmentsRequest.roleId;
                    subject = showDomainRoleAssignmentsRequest.subject;
                    subjectUserId = showDomainRoleAssignmentsRequest.subjectUserId;
                    subjectGroupId = showDomainRoleAssignmentsRequest.subjectGroupId;
                    subjectAgencyId = showDomainRoleAssignmentsRequest.subjectAgencyId;
                    scope = showDomainRoleAssignmentsRequest.scope;
                    scopeProjectId = showDomainRoleAssignmentsRequest.scopeProjectId;
                    scopeDomainId = showDomainRoleAssignmentsRequest.scopeDomainId;
                    scopeEnterpriseProjectsId = showDomainRoleAssignmentsRequest.scopeEnterpriseProjectsId;
                    isInherited = showDomainRoleAssignmentsRequest.isInherited;
                    includeGroup = showDomainRoleAssignmentsRequest.includeGroup;
                    page = showDomainRoleAssignmentsRequest.page;
                    perPage = showDomainRoleAssignmentsRequest.perPage;
                }
                else {
                    domainId = showDomainRoleAssignmentsRequest['domain_id'];
                    roleId = showDomainRoleAssignmentsRequest['role_id'];
                    subject = showDomainRoleAssignmentsRequest['subject'];
                    subjectUserId = showDomainRoleAssignmentsRequest['subject.user_id'];
                    subjectGroupId = showDomainRoleAssignmentsRequest['subject.group_id'];
                    subjectAgencyId = showDomainRoleAssignmentsRequest['subject.agency_id'];
                    scope = showDomainRoleAssignmentsRequest['scope'];
                    scopeProjectId = showDomainRoleAssignmentsRequest['scope.project_id'];
                    scopeDomainId = showDomainRoleAssignmentsRequest['scope.domain_id'];
                    scopeEnterpriseProjectsId = showDomainRoleAssignmentsRequest['scope.enterprise_projects_id'];
                    isInherited = showDomainRoleAssignmentsRequest['is_inherited'];
                    includeGroup = showDomainRoleAssignmentsRequest['include_group'];
                    page = showDomainRoleAssignmentsRequest['page'];
                    perPage = showDomainRoleAssignmentsRequest['per_page'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling showDomainRoleAssignments.');
            }
            if (domainId !== null && domainId !== undefined) {
                localVarQueryParameter['domain_id'] = domainId;
            }
            if (roleId !== null && roleId !== undefined) {
                localVarQueryParameter['role_id'] = roleId;
            }
            if (subject !== null && subject !== undefined) {
                localVarQueryParameter['subject'] = subject;
            }
            if (subjectUserId !== null && subjectUserId !== undefined) {
                localVarQueryParameter['subject.user_id'] = subjectUserId;
            }
            if (subjectGroupId !== null && subjectGroupId !== undefined) {
                localVarQueryParameter['subject.group_id'] = subjectGroupId;
            }
            if (subjectAgencyId !== null && subjectAgencyId !== undefined) {
                localVarQueryParameter['subject.agency_id'] = subjectAgencyId;
            }
            if (scope !== null && scope !== undefined) {
                localVarQueryParameter['scope'] = scope;
            }
            if (scopeProjectId !== null && scopeProjectId !== undefined) {
                localVarQueryParameter['scope.project_id'] = scopeProjectId;
            }
            if (scopeDomainId !== null && scopeDomainId !== undefined) {
                localVarQueryParameter['scope.domain_id'] = scopeDomainId;
            }
            if (scopeEnterpriseProjectsId !== null && scopeEnterpriseProjectsId !== undefined) {
                localVarQueryParameter['scope.enterprise_projects_id'] = scopeEnterpriseProjectsId;
            }
            if (isInherited !== null && isInherited !== undefined) {
                localVarQueryParameter['is_inherited'] = isInherited;
            }
            if (includeGroup !== null && includeGroup !== undefined) {
                localVarQueryParameter['include_group'] = includeGroup;
            }
            if (page !== null && page !== undefined) {
                localVarQueryParameter['page'] = page;
            }
            if (perPage !== null && perPage !== undefined) {
                localVarQueryParameter['per_page'] = perPage;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询身份提供商导入到IAM中的Metadata文件。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showMetadata: function (showMetadataRequest) {
            var options = {
                method: "GET",
                url: "/v3-ext/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/metadata",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var idpId;
            var protocolId;
            if (showMetadataRequest !== null && showMetadataRequest !== undefined) {
                if (showMetadataRequest instanceof ShowMetadataRequest_1.ShowMetadataRequest) {
                    idpId = showMetadataRequest.idpId;
                    protocolId = showMetadataRequest.protocolId;
                }
                else {
                    idpId = showMetadataRequest['idp_id'];
                    protocolId = showMetadataRequest['protocol_id'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling showMetadata.');
            }
            if (protocolId === null || protocolId === undefined) {
                throw new RequiredError('protocolId', 'Required parameter protocolId was null or undefined when calling showMetadata.');
            }
            options.pathParams = { 'idp_id': idpId, 'protocol_id': protocolId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 查询OpenId Connect身份提供商配置
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showOpenIdConnectConfig: function (showOpenIdConnectConfigRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-FEDERATION/identity-providers/{idp_id}/openid-connect-config",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var idpId;
            if (showOpenIdConnectConfigRequest !== null && showOpenIdConnectConfigRequest !== undefined) {
                if (showOpenIdConnectConfigRequest instanceof ShowOpenIdConnectConfigRequest_1.ShowOpenIdConnectConfigRequest) {
                    idpId = showOpenIdConnectConfigRequest.idpId;
                }
                else {
                    idpId = showOpenIdConnectConfigRequest['idp_id'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling showOpenIdConnectConfig.');
            }
            options.pathParams = { 'idp_id': idpId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询项目详情与状态。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showProjectDetailsAndStatus: function () {
            var options = {
                method: "GET",
                url: "/v3-ext/projects/{project_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于查询项目配额。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showProjectQuota: function () {
            var options = {
                method: "GET",
                url: "/v3.0/OS-QUOTA/projects/{project_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改委托。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateAgency: function (updateAgencyRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-AGENCY/agencies/{agency_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var agencyId;
            if (updateAgencyRequest !== null && updateAgencyRequest !== undefined) {
                if (updateAgencyRequest instanceof UpdateAgencyRequest_1.UpdateAgencyRequest) {
                    agencyId = updateAgencyRequest.agencyId;
                    body = updateAgencyRequest.body;
                }
                else {
                    agencyId = updateAgencyRequest['agency_id'];
                    body = updateAgencyRequest['body'];
                }
            }
            if (agencyId === null || agencyId === undefined) {
                throw new RequiredError('agencyId', 'Required parameter agencyId was null or undefined when calling updateAgency.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'agency_id': agencyId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改委托自定义策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateAgencyCustomPolicy: function (updateAgencyCustomPolicyRequest) {
            var options = {
                method: "PATCH",
                url: "/v3.0/OS-ROLE/roles/{role_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var roleId;
            if (updateAgencyCustomPolicyRequest !== null && updateAgencyCustomPolicyRequest !== undefined) {
                if (updateAgencyCustomPolicyRequest instanceof UpdateAgencyCustomPolicyRequest_1.UpdateAgencyCustomPolicyRequest) {
                    roleId = updateAgencyCustomPolicyRequest.roleId;
                    body = updateAgencyCustomPolicyRequest.body;
                }
                else {
                    roleId = updateAgencyCustomPolicyRequest['role_id'];
                    body = updateAgencyCustomPolicyRequest['body'];
                }
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling updateAgencyCustomPolicy.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改云服务自定义策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateCloudServiceCustomPolicy: function (updateCloudServiceCustomPolicyRequest) {
            var options = {
                method: "PATCH",
                url: "/v3.0/OS-ROLE/roles/{role_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var roleId;
            if (updateCloudServiceCustomPolicyRequest !== null && updateCloudServiceCustomPolicyRequest !== undefined) {
                if (updateCloudServiceCustomPolicyRequest instanceof UpdateCloudServiceCustomPolicyRequest_1.UpdateCloudServiceCustomPolicyRequest) {
                    roleId = updateCloudServiceCustomPolicyRequest.roleId;
                    body = updateCloudServiceCustomPolicyRequest.body;
                }
                else {
                    roleId = updateCloudServiceCustomPolicyRequest['role_id'];
                    body = updateCloudServiceCustomPolicyRequest['body'];
                }
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling updateCloudServiceCustomPolicy.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号接口访问策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateDomainApiAclPolicy: function (updateDomainApiAclPolicyRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/api-acl-policy",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var domainId;
            if (updateDomainApiAclPolicyRequest !== null && updateDomainApiAclPolicyRequest !== undefined) {
                if (updateDomainApiAclPolicyRequest instanceof UpdateDomainApiAclPolicyRequest_1.UpdateDomainApiAclPolicyRequest) {
                    domainId = updateDomainApiAclPolicyRequest.domainId;
                    body = updateDomainApiAclPolicyRequest.body;
                }
                else {
                    domainId = updateDomainApiAclPolicyRequest['domain_id'];
                    body = updateDomainApiAclPolicyRequest['body'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling updateDomainApiAclPolicy.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号控制台访问策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateDomainConsoleAclPolicy: function (updateDomainConsoleAclPolicyRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/console-acl-policy",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var domainId;
            if (updateDomainConsoleAclPolicyRequest !== null && updateDomainConsoleAclPolicyRequest !== undefined) {
                if (updateDomainConsoleAclPolicyRequest instanceof UpdateDomainConsoleAclPolicyRequest_1.UpdateDomainConsoleAclPolicyRequest) {
                    domainId = updateDomainConsoleAclPolicyRequest.domainId;
                    body = updateDomainConsoleAclPolicyRequest.body;
                }
                else {
                    domainId = updateDomainConsoleAclPolicyRequest['domain_id'];
                    body = updateDomainConsoleAclPolicyRequest['body'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling updateDomainConsoleAclPolicy.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/zh-cn_topic_0079496985.html)为用户组授予所有项目服务权限。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateDomainGroupInheritRole: function (updateDomainGroupInheritRoleRequest) {
            var options = {
                method: "PUT",
                url: "/v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var domainId;
            var groupId;
            var roleId;
            if (updateDomainGroupInheritRoleRequest !== null && updateDomainGroupInheritRoleRequest !== undefined) {
                if (updateDomainGroupInheritRoleRequest instanceof UpdateDomainGroupInheritRoleRequest_1.UpdateDomainGroupInheritRoleRequest) {
                    domainId = updateDomainGroupInheritRoleRequest.domainId;
                    groupId = updateDomainGroupInheritRoleRequest.groupId;
                    roleId = updateDomainGroupInheritRoleRequest.roleId;
                }
                else {
                    domainId = updateDomainGroupInheritRoleRequest['domain_id'];
                    groupId = updateDomainGroupInheritRoleRequest['group_id'];
                    roleId = updateDomainGroupInheritRoleRequest['role_id'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling updateDomainGroupInheritRole.');
            }
            if (groupId === null || groupId === undefined) {
                throw new RequiredError('groupId', 'Required parameter groupId was null or undefined when calling updateDomainGroupInheritRole.');
            }
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId', 'Required parameter roleId was null or undefined when calling updateDomainGroupInheritRole.');
            }
            options.pathParams = { 'domain_id': domainId, 'group_id': groupId, 'role_id': roleId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号登录策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateDomainLoginPolicy: function (updateDomainLoginPolicyRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/login-policy",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var domainId;
            if (updateDomainLoginPolicyRequest !== null && updateDomainLoginPolicyRequest !== undefined) {
                if (updateDomainLoginPolicyRequest instanceof UpdateDomainLoginPolicyRequest_1.UpdateDomainLoginPolicyRequest) {
                    domainId = updateDomainLoginPolicyRequest.domainId;
                    body = updateDomainLoginPolicyRequest.body;
                }
                else {
                    domainId = updateDomainLoginPolicyRequest['domain_id'];
                    body = updateDomainLoginPolicyRequest['body'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling updateDomainLoginPolicy.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号密码策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateDomainPasswordPolicy: function (updateDomainPasswordPolicyRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/password-policy",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var domainId;
            if (updateDomainPasswordPolicyRequest !== null && updateDomainPasswordPolicyRequest !== undefined) {
                if (updateDomainPasswordPolicyRequest instanceof UpdateDomainPasswordPolicyRequest_1.UpdateDomainPasswordPolicyRequest) {
                    domainId = updateDomainPasswordPolicyRequest.domainId;
                    body = updateDomainPasswordPolicyRequest.body;
                }
                else {
                    domainId = updateDomainPasswordPolicyRequest['domain_id'];
                    body = updateDomainPasswordPolicyRequest['body'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling updateDomainPasswordPolicy.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号操作保护策略。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateDomainProtectPolicy: function (updateDomainProtectPolicyRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-SECURITYPOLICY/domains/{domain_id}/protect-policy",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var domainId;
            if (updateDomainProtectPolicyRequest !== null && updateDomainProtectPolicyRequest !== undefined) {
                if (updateDomainProtectPolicyRequest instanceof UpdateDomainProtectPolicyRequest_1.UpdateDomainProtectPolicyRequest) {
                    domainId = updateDomainProtectPolicyRequest.domainId;
                    body = updateDomainProtectPolicyRequest.body;
                }
                else {
                    domainId = updateDomainProtectPolicyRequest['domain_id'];
                    body = updateDomainProtectPolicyRequest['body'];
                }
            }
            if (domainId === null || domainId === undefined) {
                throw new RequiredError('domainId', 'Required parameter domainId was null or undefined when calling updateDomainProtectPolicy.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'domain_id': domainId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 修改OpenId Connect身份提供商配置
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateOpenIdConnectConfig: function (updateOpenIdConnectConfigRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-FEDERATION/identity-providers/{idp_id}/openid-connect-config",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var idpId;
            if (updateOpenIdConnectConfigRequest !== null && updateOpenIdConnectConfigRequest !== undefined) {
                if (updateOpenIdConnectConfigRequest instanceof UpdateOpenIdConnectConfigRequest_1.UpdateOpenIdConnectConfigRequest) {
                    idpId = updateOpenIdConnectConfigRequest.idpId;
                    body = updateOpenIdConnectConfigRequest.body;
                }
                else {
                    idpId = updateOpenIdConnectConfigRequest['idp_id'];
                    body = updateOpenIdConnectConfigRequest['body'];
                }
            }
            if (idpId === null || idpId === undefined) {
                throw new RequiredError('idpId', 'Required parameter idpId was null or undefined when calling updateOpenIdConnectConfig.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'idp_id': idpId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)设置项目状态。项目状态包括：正常、冻结。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateProjectStatus: function (updateProjectStatusRequest) {
            var options = {
                method: "PUT",
                url: "/v3-ext/projects/{project_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (updateProjectStatusRequest !== null && updateProjectStatusRequest !== undefined) {
                if (updateProjectStatusRequest instanceof UpdateProjectStatusRequest_1.UpdateProjectStatusRequest) {
                    body = updateProjectStatusRequest.body;
                }
                else {
                    body = updateProjectStatusRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)给IAM用户创建永久访问密钥，或IAM用户给自己创建永久访问密钥。
         *
         * 访问密钥（Access Key ID/Secret Access Key，简称AK/SK），是您通过开发工具（API、CLI、SDK）访问华为云时的身份凭证，不用于登录控制台。系统通过AK识别访问用户的身份，通过SK进行签名验证，通过加密签名验证可以确保请求的机密性、完整性和请求者身份的正确性。在控制台创建访问密钥的方式请参见：[访问密钥](https://support.huaweicloud.com/usermanual-ca/zh-cn_topic_0046606340.html) 。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createPermanentAccessKey: function (createPermanentAccessKeyRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-CREDENTIAL/credentials",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createPermanentAccessKeyRequest !== null && createPermanentAccessKeyRequest !== undefined) {
                if (createPermanentAccessKeyRequest instanceof CreatePermanentAccessKeyRequest_1.CreatePermanentAccessKeyRequest) {
                    body = createPermanentAccessKeyRequest.body;
                }
                else {
                    body = createPermanentAccessKeyRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于通过委托来获取临时访问密钥（临时AK/SK）和securitytoken。
         *
         * 临时AK/SK和securitytoken是系统颁发给IAM用户的临时访问令牌，有效期为15分钟至24小时，过期后需要重新获取。临时AK/SK和securitytoken遵循权限最小化原则。鉴权时，临时AK/SK和securitytoken必须同时使用，请求头中需要添加“x-security-token”字段，使用方法详情请参考：[API签名参考](https://support.huaweicloud.com/devg-apisign/api-sign-provide.html) 。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createTemporaryAccessKeyByAgency: function (createTemporaryAccessKeyByAgencyRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-CREDENTIAL/securitytokens",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createTemporaryAccessKeyByAgencyRequest !== null && createTemporaryAccessKeyByAgencyRequest !== undefined) {
                if (createTemporaryAccessKeyByAgencyRequest instanceof CreateTemporaryAccessKeyByAgencyRequest_1.CreateTemporaryAccessKeyByAgencyRequest) {
                    body = createTemporaryAccessKeyByAgencyRequest.body;
                }
                else {
                    body = createTemporaryAccessKeyByAgencyRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于通过token来获取临时AK/SK和securitytoken。
         *
         * 临时AK/SK和securitytoken是系统颁发给IAM用户的临时访问令牌，有效期为15分钟至24小时，过期后需要重新获取。临时AK/SK和securitytoken遵循权限最小化原则。鉴权时，临时AK/SK和securitytoken必须同时使用，请求头中需要添加“x-security-token”字段，使用方法详情请参考：[API签名参考](https://support.huaweicloud.com/devg-apisign/api-sign-provide.html)。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createTemporaryAccessKeyByToken: function (createTemporaryAccessKeyByTokenRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-CREDENTIAL/securitytokens",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createTemporaryAccessKeyByTokenRequest !== null && createTemporaryAccessKeyByTokenRequest !== undefined) {
                if (createTemporaryAccessKeyByTokenRequest instanceof CreateTemporaryAccessKeyByTokenRequest_1.CreateTemporaryAccessKeyByTokenRequest) {
                    body = createTemporaryAccessKeyByTokenRequest.body;
                }
                else {
                    body = createTemporaryAccessKeyByTokenRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除IAM用户的指定永久访问密钥，或IAM用户删除自己的指定永久访问密钥。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        deletePermanentAccessKey: function (deletePermanentAccessKeyRequest) {
            var options = {
                method: "DELETE",
                url: "/v3.0/OS-CREDENTIAL/credentials/{access_key}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var accessKey;
            if (deletePermanentAccessKeyRequest !== null && deletePermanentAccessKeyRequest !== undefined) {
                if (deletePermanentAccessKeyRequest instanceof DeletePermanentAccessKeyRequest_1.DeletePermanentAccessKeyRequest) {
                    accessKey = deletePermanentAccessKeyRequest.accessKey;
                }
                else {
                    accessKey = deletePermanentAccessKeyRequest['access_key'];
                }
            }
            if (accessKey === null || accessKey === undefined) {
                throw new RequiredError('accessKey', 'Required parameter accessKey was null or undefined when calling deletePermanentAccessKey.');
            }
            options.pathParams = { 'access_key': accessKey, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户的所有永久访问密钥，或IAM用户查询自己的所有永久访问密钥。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listPermanentAccessKeys: function (listPermanentAccessKeysRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-CREDENTIAL/credentials",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var userId;
            if (listPermanentAccessKeysRequest !== null && listPermanentAccessKeysRequest !== undefined) {
                if (listPermanentAccessKeysRequest instanceof ListPermanentAccessKeysRequest_1.ListPermanentAccessKeysRequest) {
                    userId = listPermanentAccessKeysRequest.userId;
                }
                else {
                    userId = listPermanentAccessKeysRequest['user_id'];
                }
            }
            if (userId !== null && userId !== undefined) {
                localVarQueryParameter['user_id'] = userId;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户的指定永久访问密钥，或IAM用户查询自己的指定永久访问密钥。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showPermanentAccessKey: function (showPermanentAccessKeyRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-CREDENTIAL/credentials/{access_key}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var accessKey;
            if (showPermanentAccessKeyRequest !== null && showPermanentAccessKeyRequest !== undefined) {
                if (showPermanentAccessKeyRequest instanceof ShowPermanentAccessKeyRequest_1.ShowPermanentAccessKeyRequest) {
                    accessKey = showPermanentAccessKeyRequest.accessKey;
                }
                else {
                    accessKey = showPermanentAccessKeyRequest['access_key'];
                }
            }
            if (accessKey === null || accessKey === undefined) {
                throw new RequiredError('accessKey', 'Required parameter accessKey was null or undefined when calling showPermanentAccessKey.');
            }
            options.pathParams = { 'access_key': accessKey, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改IAM用户的指定永久访问密钥，或IAM用户修改自己的指定永久访问密钥。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updatePermanentAccessKey: function (updatePermanentAccessKeyRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-CREDENTIAL/credentials/{access_key}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var accessKey;
            if (updatePermanentAccessKeyRequest !== null && updatePermanentAccessKeyRequest !== undefined) {
                if (updatePermanentAccessKeyRequest instanceof UpdatePermanentAccessKeyRequest_1.UpdatePermanentAccessKeyRequest) {
                    accessKey = updatePermanentAccessKeyRequest.accessKey;
                    body = updatePermanentAccessKeyRequest.body;
                }
                else {
                    accessKey = updatePermanentAccessKeyRequest['access_key'];
                    body = updatePermanentAccessKeyRequest['body'];
                }
            }
            if (accessKey === null || accessKey === undefined) {
                throw new RequiredError('accessKey', 'Required parameter accessKey was null or undefined when calling updatePermanentAccessKey.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'access_key': accessKey, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于绑定MFA设备。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createBindingDevice: function (createBindingDeviceRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-MFA/mfa-devices/bind",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createBindingDeviceRequest !== null && createBindingDeviceRequest !== undefined) {
                if (createBindingDeviceRequest instanceof CreateBindingDeviceRequest_1.CreateBindingDeviceRequest) {
                    body = createBindingDeviceRequest.body;
                }
                else {
                    body = createBindingDeviceRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于创建MFA设备。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createMfaDevice: function (createMfaDeviceRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-MFA/virtual-mfa-devices",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createMfaDeviceRequest !== null && createMfaDeviceRequest !== undefined) {
                if (createMfaDeviceRequest instanceof CreateMfaDeviceRequest_1.CreateMfaDeviceRequest) {
                    body = createMfaDeviceRequest.body;
                }
                else {
                    body = createMfaDeviceRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建IAM用户。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        createUser: function (createUserRequest) {
            var options = {
                method: "POST",
                url: "/v3.0/OS-USER/users",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (createUserRequest !== null && createUserRequest !== undefined) {
                if (createUserRequest instanceof CreateUserRequest_1.CreateUserRequest) {
                    body = createUserRequest.body;
                }
                else {
                    body = createUserRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于解绑MFA设备
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        deleteBindingDevice: function (deleteBindingDeviceRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-MFA/mfa-devices/unbind",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (deleteBindingDeviceRequest !== null && deleteBindingDeviceRequest !== undefined) {
                if (deleteBindingDeviceRequest instanceof DeleteBindingDeviceRequest_1.DeleteBindingDeviceRequest) {
                    body = deleteBindingDeviceRequest.body;
                }
                else {
                    body = deleteBindingDeviceRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除MFA设备。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        deleteMfaDevice: function (deleteMfaDeviceRequest) {
            var options = {
                method: "DELETE",
                url: "/v3.0/OS-MFA/virtual-mfa-devices",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var userId;
            var serialNumber;
            if (deleteMfaDeviceRequest !== null && deleteMfaDeviceRequest !== undefined) {
                if (deleteMfaDeviceRequest instanceof DeleteMfaDeviceRequest_1.DeleteMfaDeviceRequest) {
                    userId = deleteMfaDeviceRequest.userId;
                    serialNumber = deleteMfaDeviceRequest.serialNumber;
                }
                else {
                    userId = deleteMfaDeviceRequest['user_id'];
                    serialNumber = deleteMfaDeviceRequest['serial_number'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling deleteMfaDevice.');
            }
            if (userId !== null && userId !== undefined) {
                localVarQueryParameter['user_id'] = userId;
            }
            if (serialNumber === null || serialNumber === undefined) {
                throw new RequiredError('serialNumber', 'Required parameter serialNumber was null or undefined when calling deleteMfaDevice.');
            }
            if (serialNumber !== null && serialNumber !== undefined) {
                localVarQueryParameter['serial_number'] = serialNumber;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)创建IAM用户。IAM用户首次登录时需要修改密码。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateUser: function (keystoneCreateUserRequest) {
            var options = {
                method: "POST",
                url: "/v3/users",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            if (keystoneCreateUserRequest !== null && keystoneCreateUserRequest !== undefined) {
                if (keystoneCreateUserRequest instanceof KeystoneCreateUserRequest_1.KeystoneCreateUserRequest) {
                    body = keystoneCreateUserRequest.body;
                }
                else {
                    body = keystoneCreateUserRequest['body'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)删除指定IAM用户。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneDeleteUser: function (keystoneDeleteUserRequest) {
            var options = {
                method: "DELETE",
                url: "/v3/users/{user_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var userId;
            if (keystoneDeleteUserRequest !== null && keystoneDeleteUserRequest !== undefined) {
                if (keystoneDeleteUserRequest instanceof KeystoneDeleteUserRequest_1.KeystoneDeleteUserRequest) {
                    userId = keystoneDeleteUserRequest.userId;
                }
                else {
                    userId = keystoneDeleteUserRequest['user_id'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling keystoneDeleteUser.');
            }
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户所属用户组，或IAM用户查询自己所属用户组。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListGroupsForUser: function (keystoneListGroupsForUserRequest) {
            var options = {
                method: "GET",
                url: "/v3/users/{user_id}/groups",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var userId;
            if (keystoneListGroupsForUserRequest !== null && keystoneListGroupsForUserRequest !== undefined) {
                if (keystoneListGroupsForUserRequest instanceof KeystoneListGroupsForUserRequest_1.KeystoneListGroupsForUserRequest) {
                    userId = keystoneListGroupsForUserRequest.userId;
                }
                else {
                    userId = keystoneListGroupsForUserRequest['user_id'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling keystoneListGroupsForUser.');
            }
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneListUsers: function (keystoneListUsersRequest) {
            var options = {
                method: "GET",
                url: "/v3/users",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var domainId;
            var enabled;
            var name;
            var passwordExpiresAt;
            if (keystoneListUsersRequest !== null && keystoneListUsersRequest !== undefined) {
                if (keystoneListUsersRequest instanceof KeystoneListUsersRequest_1.KeystoneListUsersRequest) {
                    domainId = keystoneListUsersRequest.domainId;
                    enabled = keystoneListUsersRequest.enabled;
                    name = keystoneListUsersRequest.name;
                    passwordExpiresAt = keystoneListUsersRequest.passwordExpiresAt;
                }
                else {
                    domainId = keystoneListUsersRequest['domain_id'];
                    enabled = keystoneListUsersRequest['enabled'];
                    name = keystoneListUsersRequest['name'];
                    passwordExpiresAt = keystoneListUsersRequest['password_expires_at'];
                }
            }
            if (domainId !== null && domainId !== undefined) {
                localVarQueryParameter['domain_id'] = domainId;
            }
            if (enabled !== null && enabled !== undefined) {
                localVarQueryParameter['enabled'] = enabled;
            }
            if (name !== null && name !== undefined) {
                localVarQueryParameter['name'] = name;
            }
            if (passwordExpiresAt !== null && passwordExpiresAt !== undefined) {
                localVarQueryParameter['password_expires_at'] = passwordExpiresAt;
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户详情，或IAM用户查询自己的用户详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneShowUser: function (keystoneShowUserRequest) {
            var options = {
                method: "GET",
                url: "/v3/users/{user_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var userId;
            if (keystoneShowUserRequest !== null && keystoneShowUserRequest !== undefined) {
                if (keystoneShowUserRequest instanceof KeystoneShowUserRequest_1.KeystoneShowUserRequest) {
                    userId = keystoneShowUserRequest.userId;
                }
                else {
                    userId = keystoneShowUserRequest['user_id'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling keystoneShowUser.');
            }
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改IAM用户信息。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneUpdateUserByAdmin: function (keystoneUpdateUserByAdminRequest) {
            var options = {
                method: "PATCH",
                url: "/v3/users/{user_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var userId;
            if (keystoneUpdateUserByAdminRequest !== null && keystoneUpdateUserByAdminRequest !== undefined) {
                if (keystoneUpdateUserByAdminRequest instanceof KeystoneUpdateUserByAdminRequest_1.KeystoneUpdateUserByAdminRequest) {
                    userId = keystoneUpdateUserByAdminRequest.userId;
                    body = keystoneUpdateUserByAdminRequest.body;
                }
                else {
                    userId = keystoneUpdateUserByAdminRequest['user_id'];
                    body = keystoneUpdateUserByAdminRequest['body'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling keystoneUpdateUserByAdmin.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于IAM用户修改自己的密码。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneUpdateUserPassword: function (keystoneUpdateUserPasswordRequest) {
            var options = {
                method: "POST",
                url: "/v3/users/{user_id}/password",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var userId;
            if (keystoneUpdateUserPasswordRequest !== null && keystoneUpdateUserPasswordRequest !== undefined) {
                if (keystoneUpdateUserPasswordRequest instanceof KeystoneUpdateUserPasswordRequest_1.KeystoneUpdateUserPasswordRequest) {
                    userId = keystoneUpdateUserPasswordRequest.userId;
                    body = keystoneUpdateUserPasswordRequest.body;
                }
                else {
                    userId = keystoneUpdateUserPasswordRequest['user_id'];
                    body = keystoneUpdateUserPasswordRequest['body'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling keystoneUpdateUserPassword.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户的登录保护状态列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listUserLoginProtects: function () {
            var options = {
                method: "GET",
                url: "/v3.0/OS-USER/login-protects",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户的MFA绑定信息列表。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        listUserMfaDevices: function () {
            var options = {
                method: "GET",
                url: "/v3.0/OS-MFA/virtual-mfa-devices",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询IAM用户详情，或IAM用户查询自己的详情。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showUser: function (showUserRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-USER/users/{user_id}",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var userId;
            if (showUserRequest !== null && showUserRequest !== undefined) {
                if (showUserRequest instanceof ShowUserRequest_1.ShowUserRequest) {
                    userId = showUserRequest.userId;
                }
                else {
                    userId = showUserRequest['user_id'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling showUser.');
            }
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询指定IAM用户的登录保护状态信息，或IAM用户查询自己的登录保护状态信息。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showUserLoginProtect: function (showUserLoginProtectRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-USER/users/{user_id}/login-protect",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var userId;
            if (showUserLoginProtectRequest !== null && showUserLoginProtectRequest !== undefined) {
                if (showUserLoginProtectRequest instanceof ShowUserLoginProtectRequest_1.ShowUserLoginProtectRequest) {
                    userId = showUserLoginProtectRequest.userId;
                }
                else {
                    userId = showUserLoginProtectRequest['user_id'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling showUserLoginProtect.');
            }
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)查询指定IAM用户的MFA绑定信息，或IAM用户查询自己的MFA绑定信息。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        showUserMfaDevice: function (showUserMfaDeviceRequest) {
            var options = {
                method: "GET",
                url: "/v3.0/OS-MFA/users/{user_id}/virtual-mfa-device",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var userId;
            if (showUserMfaDeviceRequest !== null && showUserMfaDeviceRequest !== undefined) {
                if (showUserMfaDeviceRequest instanceof ShowUserMfaDeviceRequest_1.ShowUserMfaDeviceRequest) {
                    userId = showUserMfaDeviceRequest.userId;
                }
                else {
                    userId = showUserMfaDeviceRequest['user_id'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling showUserMfaDevice.');
            }
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改账号操作保护。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateLoginProtect: function (updateLoginProtectRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-USER/users/{user_id}/login-protect",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var userId;
            if (updateLoginProtectRequest !== null && updateLoginProtectRequest !== undefined) {
                if (updateLoginProtectRequest instanceof UpdateLoginProtectRequest_1.UpdateLoginProtectRequest) {
                    userId = updateLoginProtectRequest.userId;
                    body = updateLoginProtectRequest.body;
                }
                else {
                    userId = updateLoginProtectRequest['user_id'];
                    body = updateLoginProtectRequest['body'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling updateLoginProtect.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)修改IAM用户信息 。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateUser: function (updateUserRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-USER/users/{user_id}",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var userId;
            if (updateUserRequest !== null && updateUserRequest !== undefined) {
                if (updateUserRequest instanceof UpdateUserRequest_1.UpdateUserRequest) {
                    userId = updateUserRequest.userId;
                    body = updateUserRequest.body;
                }
                else {
                    userId = updateUserRequest['user_id'];
                    body = updateUserRequest['body'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling updateUser.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于IAM用户修改自己的用户信息。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        updateUserInformation: function (updateUserInformationRequest) {
            var options = {
                method: "PUT",
                url: "/v3.0/OS-USER/users/{user_id}/info",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var body;
            var userId;
            if (updateUserInformationRequest !== null && updateUserInformationRequest !== undefined) {
                if (updateUserInformationRequest instanceof UpdateUserInformationRequest_1.UpdateUserInformationRequest) {
                    userId = updateUserInformationRequest.userId;
                    body = updateUserInformationRequest.body;
                }
                else {
                    userId = updateUserInformationRequest['user_id'];
                    body = updateUserInformationRequest['body'];
                }
            }
            if (userId === null || userId === undefined) {
                throw new RequiredError('userId', 'Required parameter userId was null or undefined when calling updateUserInformation.');
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.pathParams = { 'user_id': userId, };
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于获取委托方的token。
         *
         * 例如：A账号希望B账号管理自己的某些资源，所以A账号创建了委托给B账号，则A账号为委托方，B账号为被委托方。那么B账号可以通过该接口获取委托token。B账号仅能使用该token管理A账号的委托资源，不能管理自己账号中的资源。如果B账号需要管理自己账号中的资源，则需要获取自己的用户token。
         *
         * token是系统颁发给用户的访问令牌，承载用户的身份、权限等信息。调用IAM以及其他云服务的接口时，可以使用本接口获取的token进行鉴权。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。如果使用全局区域的Endpoint调用，该token可以在所有区域使用；如果使用非全局区域的Endpoint调用，则该token仅在该区域生效，不能跨区域使用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * &gt; - token的有效期为24小时，建议进行缓存，避免频繁调用。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateAgencyToken: function (keystoneCreateAgencyTokenRequest) {
            var options = {
                method: "POST",
                url: "/v3/auth/tokens",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var body;
            var nocatalog;
            if (keystoneCreateAgencyTokenRequest !== null && keystoneCreateAgencyTokenRequest !== undefined) {
                if (keystoneCreateAgencyTokenRequest instanceof KeystoneCreateAgencyTokenRequest_1.KeystoneCreateAgencyTokenRequest) {
                    body = keystoneCreateAgencyTokenRequest.body;
                    nocatalog = keystoneCreateAgencyTokenRequest.nocatalog;
                }
                else {
                    body = keystoneCreateAgencyTokenRequest['body'];
                    nocatalog = keystoneCreateAgencyTokenRequest['nocatalog'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            if (nocatalog !== null && nocatalog !== undefined) {
                localVarQueryParameter['nocatalog'] = nocatalog;
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于通过用户名/密码的方式进行认证来获取IAM用户token。
         *
         * token是系统颁发给IAM用户的访问令牌，承载用户的身份、权限等信息。调用IAM以及其他云服务的接口时，可以使用本接口获取的IAM用户token进行鉴权。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。如果使用全局区域的Endpoint调用，该token可以在所有区域使用；如果使用非全局区域的Endpoint调用，则该token仅在该区域生效，不能跨区域使用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         * &gt; - token的有效期为24小时，建议进行缓存，避免频繁调用。
         * &gt; - 通过Postman获取用户token示例请参见：[如何通过Postman获取用户token](https://support.huaweicloud.com/iam_faq/iam_01_034.html)。
         * &gt; - 如果需要获取具有Security Administrator权限的token，请参见：[IAM 常见问题](https://support.huaweicloud.com/iam_faq/iam_01_0608.html)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateUserTokenByPassword: function (keystoneCreateUserTokenByPasswordRequest) {
            var options = {
                method: "POST",
                url: "/v3/auth/tokens",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var body;
            var nocatalog;
            if (keystoneCreateUserTokenByPasswordRequest !== null && keystoneCreateUserTokenByPasswordRequest !== undefined) {
                if (keystoneCreateUserTokenByPasswordRequest instanceof KeystoneCreateUserTokenByPasswordRequest_1.KeystoneCreateUserTokenByPasswordRequest) {
                    body = keystoneCreateUserTokenByPasswordRequest.body;
                    nocatalog = keystoneCreateUserTokenByPasswordRequest.nocatalog;
                }
                else {
                    body = keystoneCreateUserTokenByPasswordRequest['body'];
                    nocatalog = keystoneCreateUserTokenByPasswordRequest['nocatalog'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            if (nocatalog !== null && nocatalog !== undefined) {
                localVarQueryParameter['nocatalog'] = nocatalog;
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于通过用户名/密码+虚拟MFA的方式进行认证，在IAM用户开启了的登录保护功能，并选择通过虚拟MFA验证时获取IAM用户token。
         *
         * token是系统颁发给用户的访问令牌，承载用户的身份、权限等信息。调用IAM以及其他云服务的接口时，可以使用本接口获取的token进行鉴权。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。如果使用全局区域的Endpoint调用，该token可以在所有区域使用；如果使用非全局区域的Endpoint调用，则该token仅在该区域生效，不能跨区域使用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         * &gt; - token的有效期为24小时，建议进行缓存，避免频繁调用。
         * &gt; - 通过Postman获取用户token示例请参见：[如何通过Postman获取用户token](https://support.huaweicloud.com/iam_faq/iam_01_034.html)。
         * &gt; - 如果需要获取具有Security Administrator权限的token，请参见：[IAM 常见问题](https://support.huaweicloud.com/iam_faq/iam_01_0608.html)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneCreateUserTokenByPasswordAndMfa: function (keystoneCreateUserTokenByPasswordAndMfaRequest) {
            var options = {
                method: "POST",
                url: "/v3/auth/tokens",
                contentType: "application/json;charset=UTF-8",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var body;
            var nocatalog;
            if (keystoneCreateUserTokenByPasswordAndMfaRequest !== null && keystoneCreateUserTokenByPasswordAndMfaRequest !== undefined) {
                if (keystoneCreateUserTokenByPasswordAndMfaRequest instanceof KeystoneCreateUserTokenByPasswordAndMfaRequest_1.KeystoneCreateUserTokenByPasswordAndMfaRequest) {
                    body = keystoneCreateUserTokenByPasswordAndMfaRequest.body;
                    nocatalog = keystoneCreateUserTokenByPasswordAndMfaRequest.nocatalog;
                }
                else {
                    body = keystoneCreateUserTokenByPasswordAndMfaRequest['body'];
                    nocatalog = keystoneCreateUserTokenByPasswordAndMfaRequest['nocatalog'];
                }
            }
            if (body === null || body === undefined) {
                throw new RequiredError('body', 'Required parameter body was null or undefined when calling body.');
            }
            if (nocatalog !== null && nocatalog !== undefined) {
                localVarQueryParameter['nocatalog'] = nocatalog;
            }
            localVarHeaderParameter['Content-Type'] = 'application/json;charset=UTF-8';
            options.data = body !== undefined ? body : {};
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
        /**
         * 该接口可以用于[管理员](https://support.huaweicloud.com/usermanual-iam/iam_01_0001.html)校验本账号中IAM用户token的有效性，或IAM用户校验自己token的有效性。管理员仅能校验本账号中IAM用户token的有效性，不能校验其他账号中IAM用户token的有效性。如果被校验的token有效，则返回该token的详细信息。
         *
         * 该接口可以使用全局区域的Endpoint和其他区域的Endpoint调用。IAM的Endpoint请参见：[地区和终端节点](https://developer.huaweicloud.com/endpoint?IAM)。
         *
         * 详细说明请参考华为云API Explorer。
         * Please refer to Huawei cloud API Explorer for details.
         */
        keystoneValidateToken: function (keystoneValidateTokenRequest) {
            var options = {
                method: "GET",
                url: "/v3/auth/tokens",
                contentType: "application/json",
                queryParams: {},
                pathParams: {},
                headers: {},
                data: {}
            };
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            var xSubjectToken;
            var nocatalog;
            if (keystoneValidateTokenRequest !== null && keystoneValidateTokenRequest !== undefined) {
                if (keystoneValidateTokenRequest instanceof KeystoneValidateTokenRequest_1.KeystoneValidateTokenRequest) {
                    xSubjectToken = keystoneValidateTokenRequest.xSubjectToken;
                    nocatalog = keystoneValidateTokenRequest.nocatalog;
                }
                else {
                    xSubjectToken = keystoneValidateTokenRequest['X-Subject-Token'];
                    nocatalog = keystoneValidateTokenRequest['nocatalog'];
                }
            }
            if (nocatalog !== null && nocatalog !== undefined) {
                localVarQueryParameter['nocatalog'] = nocatalog;
            }
            if (xSubjectToken !== undefined && xSubjectToken !== null) {
                localVarHeaderParameter['X-Subject-Token'] = String(xSubjectToken);
            }
            options.queryParams = localVarQueryParameter;
            options.headers = localVarHeaderParameter;
            return options;
        },
    };
};
exports.ParamCreater = ParamCreater;
function newClient(client) {
    return new IamClient(client);
}
/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
var RequiredError = /** @class */ (function (_super) {
    __extends(RequiredError, _super);
    function RequiredError(field, msg) {
        var _this = _super.call(this, msg) || this;
        _this.field = field;
        _this.name = "RequiredError";
        return _this;
    }
    return RequiredError;
}(Error));
exports.RequiredError = RequiredError;


/***/ }),

/***/ 12554:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IamRegion = void 0;
var region_1 = __nccwpck_require__(64477);
var IamRegion = /** @class */ (function () {
    function IamRegion() {
    }
    IamRegion.createStaticFields = function () {
        var map = new Map();
        map.set("cn-north-2", IamRegion.CN_NORTH_2);
        map.set("cn-north-4", IamRegion.CN_NORTH_4);
        map.set("cn-north-1", IamRegion.CN_NORTH_1);
        map.set("cn-east-2", IamRegion.CN_EAST_2);
        map.set("cn-east-3", IamRegion.CN_EAST_3);
        map.set("cn-south-1", IamRegion.CN_SOUTH_1);
        map.set("cn-south-2", IamRegion.CN_SOUTH_2);
        map.set("cn-southwest-2", IamRegion.CN_SOUTHWEST_2);
        map.set("ap-southeast-1", IamRegion.AP_SOUTHEAST_1);
        map.set("ap-southeast-2", IamRegion.AP_SOUTHEAST_2);
        map.set("ap-southeast-3", IamRegion.AP_SOUTHEAST_3);
        map.set("af-south-1", IamRegion.AF_SOUTH_1);
        return map;
    };
    IamRegion.valueOf = function (regionId) {
        if (!regionId) {
            throw new Error("Unexpected empty parameter: regionId.");
        }
        var result = this.STATIC_FIELDS.get(regionId);
        if (result) {
            return result;
        }
        throw new Error("Unexpected regionId: ".concat(regionId, "."));
    };
    IamRegion.CN_NORTH_2 = new region_1.Region("cn-north-2", "https://iam.cn-north-2.myhuaweicloud.com");
    IamRegion.CN_NORTH_4 = new region_1.Region("cn-north-4", "https://iam.cn-north-4.myhuaweicloud.com");
    IamRegion.CN_NORTH_1 = new region_1.Region("cn-north-1", "https://iam.cn-north-1.myhuaweicloud.com");
    IamRegion.CN_EAST_2 = new region_1.Region("cn-east-2", "https://iam.cn-east-2.myhuaweicloud.com");
    IamRegion.CN_EAST_3 = new region_1.Region("cn-east-3", "https://iam.cn-east-3.myhuaweicloud.com");
    IamRegion.CN_SOUTH_1 = new region_1.Region("cn-south-1", "https://iam.cn-south-1.myhuaweicloud.com");
    IamRegion.CN_SOUTH_2 = new region_1.Region("cn-south-2", "https://iam.cn-south-2.myhuaweicloud.com");
    IamRegion.CN_SOUTHWEST_2 = new region_1.Region("cn-southwest-2", "https://iam.cn-southwest-2.myhuaweicloud.com");
    IamRegion.AP_SOUTHEAST_1 = new region_1.Region("ap-southeast-1", "https://iam.ap-southeast-1.myhuaweicloud.com");
    IamRegion.AP_SOUTHEAST_2 = new region_1.Region("ap-southeast-2", "https://iam.ap-southeast-2.myhuaweicloud.com");
    IamRegion.AP_SOUTHEAST_3 = new region_1.Region("ap-southeast-3", "https://iam.ap-southeast-3.myhuaweicloud.com");
    IamRegion.AF_SOUTH_1 = new region_1.Region("af-south-1", "https://iam.af-south-1.myhuaweicloud.com");
    IamRegion.STATIC_FIELDS = IamRegion.createStaticFields();
    return IamRegion;
}());
exports.IamRegion = IamRegion;


/***/ }),

/***/ 15070:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AclPolicyOption = void 0;
var AclPolicyOption = /** @class */ (function () {
    function AclPolicyOption(allowAddressNetmasks, allowIpRanges) {
        this['allow_address_netmasks'] = allowAddressNetmasks;
        this['allow_ip_ranges'] = allowIpRanges;
    }
    AclPolicyOption.prototype.withAllowAddressNetmasks = function (allowAddressNetmasks) {
        this['allow_address_netmasks'] = allowAddressNetmasks;
        return this;
    };
    Object.defineProperty(AclPolicyOption.prototype, "allowAddressNetmasks", {
        get: function () {
            return this['allow_address_netmasks'];
        },
        set: function (allowAddressNetmasks) {
            this['allow_address_netmasks'] = allowAddressNetmasks;
        },
        enumerable: false,
        configurable: true
    });
    AclPolicyOption.prototype.withAllowIpRanges = function (allowIpRanges) {
        this['allow_ip_ranges'] = allowIpRanges;
        return this;
    };
    Object.defineProperty(AclPolicyOption.prototype, "allowIpRanges", {
        get: function () {
            return this['allow_ip_ranges'];
        },
        set: function (allowIpRanges) {
            this['allow_ip_ranges'] = allowIpRanges;
        },
        enumerable: false,
        configurable: true
    });
    return AclPolicyOption;
}());
exports.AclPolicyOption = AclPolicyOption;


/***/ }),

/***/ 30402:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AclPolicyResult = void 0;
var AclPolicyResult = /** @class */ (function () {
    function AclPolicyResult(allowAddressNetmasks, allowIpRanges) {
        this['allow_address_netmasks'] = allowAddressNetmasks;
        this['allow_ip_ranges'] = allowIpRanges;
    }
    AclPolicyResult.prototype.withAllowAddressNetmasks = function (allowAddressNetmasks) {
        this['allow_address_netmasks'] = allowAddressNetmasks;
        return this;
    };
    Object.defineProperty(AclPolicyResult.prototype, "allowAddressNetmasks", {
        get: function () {
            return this['allow_address_netmasks'];
        },
        set: function (allowAddressNetmasks) {
            this['allow_address_netmasks'] = allowAddressNetmasks;
        },
        enumerable: false,
        configurable: true
    });
    AclPolicyResult.prototype.withAllowIpRanges = function (allowIpRanges) {
        this['allow_ip_ranges'] = allowIpRanges;
        return this;
    };
    Object.defineProperty(AclPolicyResult.prototype, "allowIpRanges", {
        get: function () {
            return this['allow_ip_ranges'];
        },
        set: function (allowIpRanges) {
            this['allow_ip_ranges'] = allowIpRanges;
        },
        enumerable: false,
        configurable: true
    });
    return AclPolicyResult;
}());
exports.AclPolicyResult = AclPolicyResult;


/***/ }),

/***/ 27291:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyAllProjectRole = void 0;
var AgencyAllProjectRole = /** @class */ (function () {
    function AgencyAllProjectRole(id, links, name) {
        this['id'] = id;
        this['links'] = links;
        this['name'] = name;
    }
    AgencyAllProjectRole.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AgencyAllProjectRole.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    AgencyAllProjectRole.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return AgencyAllProjectRole;
}());
exports.AgencyAllProjectRole = AgencyAllProjectRole;


/***/ }),

/***/ 18678:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyAssumedby = void 0;
var AgencyAssumedby = /** @class */ (function () {
    function AgencyAssumedby(user) {
        this['user'] = user;
    }
    AgencyAssumedby.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return AgencyAssumedby;
}());
exports.AgencyAssumedby = AgencyAssumedby;


/***/ }),

/***/ 92738:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyAssumedbyUser = void 0;
var AgencyAssumedbyUser = /** @class */ (function () {
    function AgencyAssumedbyUser(name, id, domain, passwordExpiresAt) {
        this['name'] = name;
        this['id'] = id;
        this['domain'] = domain;
        this['password_expires_at'] = passwordExpiresAt;
    }
    AgencyAssumedbyUser.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    AgencyAssumedbyUser.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AgencyAssumedbyUser.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    AgencyAssumedbyUser.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(AgencyAssumedbyUser.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    return AgencyAssumedbyUser;
}());
exports.AgencyAssumedbyUser = AgencyAssumedbyUser;


/***/ }),

/***/ 20784:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyAssumedbyUserDomain = void 0;
var AgencyAssumedbyUserDomain = /** @class */ (function () {
    function AgencyAssumedbyUserDomain(name, id) {
        this['name'] = name;
        this['id'] = id;
    }
    AgencyAssumedbyUserDomain.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    AgencyAssumedbyUserDomain.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return AgencyAssumedbyUserDomain;
}());
exports.AgencyAssumedbyUserDomain = AgencyAssumedbyUserDomain;


/***/ }),

/***/ 50324:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyAuth = void 0;
var AgencyAuth = /** @class */ (function () {
    function AgencyAuth(identity) {
        this['identity'] = identity;
    }
    AgencyAuth.prototype.withIdentity = function (identity) {
        this['identity'] = identity;
        return this;
    };
    return AgencyAuth;
}());
exports.AgencyAuth = AgencyAuth;


/***/ }),

/***/ 34558:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyAuthIdentityMethodsEnum = exports.AgencyAuthIdentity = void 0;
var AgencyAuthIdentity = /** @class */ (function () {
    function AgencyAuthIdentity(methods, assumeRole) {
        this['methods'] = methods;
        this['assume_role'] = assumeRole;
    }
    AgencyAuthIdentity.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    AgencyAuthIdentity.prototype.withAssumeRole = function (assumeRole) {
        this['assume_role'] = assumeRole;
        return this;
    };
    Object.defineProperty(AgencyAuthIdentity.prototype, "assumeRole", {
        get: function () {
            return this['assume_role'];
        },
        set: function (assumeRole) {
            this['assume_role'] = assumeRole;
        },
        enumerable: false,
        configurable: true
    });
    AgencyAuthIdentity.prototype.withPolicy = function (policy) {
        this['policy'] = policy;
        return this;
    };
    return AgencyAuthIdentity;
}());
exports.AgencyAuthIdentity = AgencyAuthIdentity;
/**
    * @export
    * @enum {string}
    */
var AgencyAuthIdentityMethodsEnum;
(function (AgencyAuthIdentityMethodsEnum) {
    AgencyAuthIdentityMethodsEnum["ASSUME_ROLE"] = "assume_role";
})(AgencyAuthIdentityMethodsEnum = exports.AgencyAuthIdentityMethodsEnum || (exports.AgencyAuthIdentityMethodsEnum = {}));


/***/ }),

/***/ 44381:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyPolicy = void 0;
var AgencyPolicy = /** @class */ (function () {
    function AgencyPolicy(version, statement) {
        this['Version'] = version;
        this['Statement'] = statement;
    }
    AgencyPolicy.prototype.withVersion = function (version) {
        this['Version'] = version;
        return this;
    };
    Object.defineProperty(AgencyPolicy.prototype, "version", {
        get: function () {
            return this['Version'];
        },
        set: function (version) {
            this['Version'] = version;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicy.prototype.withStatement = function (statement) {
        this['Statement'] = statement;
        return this;
    };
    Object.defineProperty(AgencyPolicy.prototype, "statement", {
        get: function () {
            return this['Statement'];
        },
        set: function (statement) {
            this['Statement'] = statement;
        },
        enumerable: false,
        configurable: true
    });
    return AgencyPolicy;
}());
exports.AgencyPolicy = AgencyPolicy;


/***/ }),

/***/ 963:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyPolicyResource = void 0;
var AgencyPolicyResource = /** @class */ (function () {
    function AgencyPolicyResource(uri) {
        this['uri'] = uri;
    }
    AgencyPolicyResource.prototype.withUri = function (uri) {
        this['uri'] = uri;
        return this;
    };
    return AgencyPolicyResource;
}());
exports.AgencyPolicyResource = AgencyPolicyResource;


/***/ }),

/***/ 86332:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyPolicyRoleOption = void 0;
var AgencyPolicyRoleOption = /** @class */ (function () {
    function AgencyPolicyRoleOption(displayName, type, description, policy) {
        this['display_name'] = displayName;
        this['type'] = type;
        this['description'] = description;
        this['policy'] = policy;
    }
    AgencyPolicyRoleOption.prototype.withDisplayName = function (displayName) {
        this['display_name'] = displayName;
        return this;
    };
    Object.defineProperty(AgencyPolicyRoleOption.prototype, "displayName", {
        get: function () {
            return this['display_name'];
        },
        set: function (displayName) {
            this['display_name'] = displayName;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicyRoleOption.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    AgencyPolicyRoleOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    AgencyPolicyRoleOption.prototype.withDescriptionCn = function (descriptionCn) {
        this['description_cn'] = descriptionCn;
        return this;
    };
    Object.defineProperty(AgencyPolicyRoleOption.prototype, "descriptionCn", {
        get: function () {
            return this['description_cn'];
        },
        set: function (descriptionCn) {
            this['description_cn'] = descriptionCn;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicyRoleOption.prototype.withPolicy = function (policy) {
        this['policy'] = policy;
        return this;
    };
    return AgencyPolicyRoleOption;
}());
exports.AgencyPolicyRoleOption = AgencyPolicyRoleOption;


/***/ }),

/***/ 10175:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyPolicyRoleResult = void 0;
var AgencyPolicyRoleResult = /** @class */ (function () {
    function AgencyPolicyRoleResult(catalog, displayName, description, links, policy, domainId, type, id, name) {
        this['catalog'] = catalog;
        this['display_name'] = displayName;
        this['description'] = description;
        this['links'] = links;
        this['policy'] = policy;
        this['domain_id'] = domainId;
        this['type'] = type;
        this['id'] = id;
        this['name'] = name;
    }
    AgencyPolicyRoleResult.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    AgencyPolicyRoleResult.prototype.withDisplayName = function (displayName) {
        this['display_name'] = displayName;
        return this;
    };
    Object.defineProperty(AgencyPolicyRoleResult.prototype, "displayName", {
        get: function () {
            return this['display_name'];
        },
        set: function (displayName) {
            this['display_name'] = displayName;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicyRoleResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    AgencyPolicyRoleResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    AgencyPolicyRoleResult.prototype.withPolicy = function (policy) {
        this['policy'] = policy;
        return this;
    };
    AgencyPolicyRoleResult.prototype.withDescriptionCn = function (descriptionCn) {
        this['description_cn'] = descriptionCn;
        return this;
    };
    Object.defineProperty(AgencyPolicyRoleResult.prototype, "descriptionCn", {
        get: function () {
            return this['description_cn'];
        },
        set: function (descriptionCn) {
            this['description_cn'] = descriptionCn;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicyRoleResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(AgencyPolicyRoleResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicyRoleResult.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    AgencyPolicyRoleResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AgencyPolicyRoleResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    AgencyPolicyRoleResult.prototype.withUpdatedTime = function (updatedTime) {
        this['updated_time'] = updatedTime;
        return this;
    };
    Object.defineProperty(AgencyPolicyRoleResult.prototype, "updatedTime", {
        get: function () {
            return this['updated_time'];
        },
        set: function (updatedTime) {
            this['updated_time'] = updatedTime;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicyRoleResult.prototype.withCreatedTime = function (createdTime) {
        this['created_time'] = createdTime;
        return this;
    };
    Object.defineProperty(AgencyPolicyRoleResult.prototype, "createdTime", {
        get: function () {
            return this['created_time'];
        },
        set: function (createdTime) {
            this['created_time'] = createdTime;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicyRoleResult.prototype.withReferences = function (references) {
        this['references'] = references;
        return this;
    };
    return AgencyPolicyRoleResult;
}());
exports.AgencyPolicyRoleResult = AgencyPolicyRoleResult;


/***/ }),

/***/ 26239:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyPolicyStatementEffectEnum = exports.AgencyPolicyStatementActionEnum = exports.AgencyPolicyStatement = void 0;
var AgencyPolicyStatement = /** @class */ (function () {
    function AgencyPolicyStatement(action, effect, resource) {
        this['Action'] = action;
        this['Effect'] = effect;
        this['Resource'] = resource;
    }
    AgencyPolicyStatement.prototype.withAction = function (action) {
        this['Action'] = action;
        return this;
    };
    Object.defineProperty(AgencyPolicyStatement.prototype, "action", {
        get: function () {
            return this['Action'];
        },
        set: function (action) {
            this['Action'] = action;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicyStatement.prototype.withEffect = function (effect) {
        this['Effect'] = effect;
        return this;
    };
    Object.defineProperty(AgencyPolicyStatement.prototype, "effect", {
        get: function () {
            return this['Effect'];
        },
        set: function (effect) {
            this['Effect'] = effect;
        },
        enumerable: false,
        configurable: true
    });
    AgencyPolicyStatement.prototype.withResource = function (resource) {
        this['Resource'] = resource;
        return this;
    };
    Object.defineProperty(AgencyPolicyStatement.prototype, "resource", {
        get: function () {
            return this['Resource'];
        },
        set: function (resource) {
            this['Resource'] = resource;
        },
        enumerable: false,
        configurable: true
    });
    return AgencyPolicyStatement;
}());
exports.AgencyPolicyStatement = AgencyPolicyStatement;
/**
    * @export
    * @enum {string}
    */
var AgencyPolicyStatementActionEnum;
(function (AgencyPolicyStatementActionEnum) {
    AgencyPolicyStatementActionEnum["IAMAGENCIESASSUME"] = "iam:agencies:assume";
})(AgencyPolicyStatementActionEnum = exports.AgencyPolicyStatementActionEnum || (exports.AgencyPolicyStatementActionEnum = {}));
/**
    * @export
    * @enum {string}
    */
var AgencyPolicyStatementEffectEnum;
(function (AgencyPolicyStatementEffectEnum) {
    AgencyPolicyStatementEffectEnum["ALLOW"] = "Allow";
    AgencyPolicyStatementEffectEnum["DENY"] = "Deny";
})(AgencyPolicyStatementEffectEnum = exports.AgencyPolicyStatementEffectEnum || (exports.AgencyPolicyStatementEffectEnum = {}));


/***/ }),

/***/ 38877:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyResult = void 0;
var AgencyResult = /** @class */ (function () {
    function AgencyResult(createTime, description, duration, expireTime, id, name) {
        this['create_time'] = createTime;
        this['description'] = description;
        this['duration'] = duration;
        this['expire_time'] = expireTime;
        this['id'] = id;
        this['name'] = name;
    }
    AgencyResult.prototype.withCreateTime = function (createTime) {
        this['create_time'] = createTime;
        return this;
    };
    Object.defineProperty(AgencyResult.prototype, "createTime", {
        get: function () {
            return this['create_time'];
        },
        set: function (createTime) {
            this['create_time'] = createTime;
        },
        enumerable: false,
        configurable: true
    });
    AgencyResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    AgencyResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(AgencyResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    AgencyResult.prototype.withDuration = function (duration) {
        this['duration'] = duration;
        return this;
    };
    AgencyResult.prototype.withExpireTime = function (expireTime) {
        this['expire_time'] = expireTime;
        return this;
    };
    Object.defineProperty(AgencyResult.prototype, "expireTime", {
        get: function () {
            return this['expire_time'];
        },
        set: function (expireTime) {
            this['expire_time'] = expireTime;
        },
        enumerable: false,
        configurable: true
    });
    AgencyResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AgencyResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    AgencyResult.prototype.withTrustDomainId = function (trustDomainId) {
        this['trust_domain_id'] = trustDomainId;
        return this;
    };
    Object.defineProperty(AgencyResult.prototype, "trustDomainId", {
        get: function () {
            return this['trust_domain_id'];
        },
        set: function (trustDomainId) {
            this['trust_domain_id'] = trustDomainId;
        },
        enumerable: false,
        configurable: true
    });
    AgencyResult.prototype.withTrustDomainName = function (trustDomainName) {
        this['trust_domain_name'] = trustDomainName;
        return this;
    };
    Object.defineProperty(AgencyResult.prototype, "trustDomainName", {
        get: function () {
            return this['trust_domain_name'];
        },
        set: function (trustDomainName) {
            this['trust_domain_name'] = trustDomainName;
        },
        enumerable: false,
        configurable: true
    });
    return AgencyResult;
}());
exports.AgencyResult = AgencyResult;


/***/ }),

/***/ 23434:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenAssumerole = void 0;
var AgencyTokenAssumerole = /** @class */ (function () {
    function AgencyTokenAssumerole(agencyName) {
        this['agency_name'] = agencyName;
    }
    AgencyTokenAssumerole.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(AgencyTokenAssumerole.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    AgencyTokenAssumerole.prototype.withDomainName = function (domainName) {
        this['domain_name'] = domainName;
        return this;
    };
    Object.defineProperty(AgencyTokenAssumerole.prototype, "domainName", {
        get: function () {
            return this['domain_name'];
        },
        set: function (domainName) {
            this['domain_name'] = domainName;
        },
        enumerable: false,
        configurable: true
    });
    AgencyTokenAssumerole.prototype.withAgencyName = function (agencyName) {
        this['agency_name'] = agencyName;
        return this;
    };
    Object.defineProperty(AgencyTokenAssumerole.prototype, "agencyName", {
        get: function () {
            return this['agency_name'];
        },
        set: function (agencyName) {
            this['agency_name'] = agencyName;
        },
        enumerable: false,
        configurable: true
    });
    return AgencyTokenAssumerole;
}());
exports.AgencyTokenAssumerole = AgencyTokenAssumerole;


/***/ }),

/***/ 99156:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenAuth = void 0;
var AgencyTokenAuth = /** @class */ (function () {
    function AgencyTokenAuth(identity, scope) {
        this['identity'] = identity;
        this['scope'] = scope;
    }
    AgencyTokenAuth.prototype.withIdentity = function (identity) {
        this['identity'] = identity;
        return this;
    };
    AgencyTokenAuth.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    return AgencyTokenAuth;
}());
exports.AgencyTokenAuth = AgencyTokenAuth;


/***/ }),

/***/ 63327:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenDomain = void 0;
var AgencyTokenDomain = /** @class */ (function () {
    function AgencyTokenDomain(name, id) {
        this['name'] = name;
        this['id'] = id;
    }
    AgencyTokenDomain.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    AgencyTokenDomain.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return AgencyTokenDomain;
}());
exports.AgencyTokenDomain = AgencyTokenDomain;


/***/ }),

/***/ 33361:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenIdentityMethodsEnum = exports.AgencyTokenIdentity = void 0;
var AgencyTokenIdentity = /** @class */ (function () {
    function AgencyTokenIdentity(methods, assumeRole) {
        this['methods'] = methods;
        this['assume_role'] = assumeRole;
    }
    AgencyTokenIdentity.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    AgencyTokenIdentity.prototype.withAssumeRole = function (assumeRole) {
        this['assume_role'] = assumeRole;
        return this;
    };
    Object.defineProperty(AgencyTokenIdentity.prototype, "assumeRole", {
        get: function () {
            return this['assume_role'];
        },
        set: function (assumeRole) {
            this['assume_role'] = assumeRole;
        },
        enumerable: false,
        configurable: true
    });
    return AgencyTokenIdentity;
}());
exports.AgencyTokenIdentity = AgencyTokenIdentity;
/**
    * @export
    * @enum {string}
    */
var AgencyTokenIdentityMethodsEnum;
(function (AgencyTokenIdentityMethodsEnum) {
    AgencyTokenIdentityMethodsEnum["ASSUME_ROLE"] = "assume_role";
})(AgencyTokenIdentityMethodsEnum = exports.AgencyTokenIdentityMethodsEnum || (exports.AgencyTokenIdentityMethodsEnum = {}));


/***/ }),

/***/ 17714:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenProject = void 0;
var AgencyTokenProject = /** @class */ (function () {
    function AgencyTokenProject(name, id, domain) {
        this['name'] = name;
        this['id'] = id;
        this['domain'] = domain;
    }
    AgencyTokenProject.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    AgencyTokenProject.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AgencyTokenProject.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    return AgencyTokenProject;
}());
exports.AgencyTokenProject = AgencyTokenProject;


/***/ }),

/***/ 76282:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenProjectDomain = void 0;
var AgencyTokenProjectDomain = /** @class */ (function () {
    function AgencyTokenProjectDomain(name, id) {
        this['name'] = name;
        this['id'] = id;
    }
    AgencyTokenProjectDomain.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    AgencyTokenProjectDomain.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return AgencyTokenProjectDomain;
}());
exports.AgencyTokenProjectDomain = AgencyTokenProjectDomain;


/***/ }),

/***/ 34550:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenResult = void 0;
var AgencyTokenResult = /** @class */ (function () {
    function AgencyTokenResult(methods, expiresAt, issuedAt, assumedBy, roles, user) {
        this['methods'] = methods;
        this['expires_at'] = expiresAt;
        this['issued_at'] = issuedAt;
        this['assumed_by'] = assumedBy;
        this['roles'] = roles;
        this['user'] = user;
    }
    AgencyTokenResult.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    AgencyTokenResult.prototype.withExpiresAt = function (expiresAt) {
        this['expires_at'] = expiresAt;
        return this;
    };
    Object.defineProperty(AgencyTokenResult.prototype, "expiresAt", {
        get: function () {
            return this['expires_at'];
        },
        set: function (expiresAt) {
            this['expires_at'] = expiresAt;
        },
        enumerable: false,
        configurable: true
    });
    AgencyTokenResult.prototype.withIssuedAt = function (issuedAt) {
        this['issued_at'] = issuedAt;
        return this;
    };
    Object.defineProperty(AgencyTokenResult.prototype, "issuedAt", {
        get: function () {
            return this['issued_at'];
        },
        set: function (issuedAt) {
            this['issued_at'] = issuedAt;
        },
        enumerable: false,
        configurable: true
    });
    AgencyTokenResult.prototype.withAssumedBy = function (assumedBy) {
        this['assumed_by'] = assumedBy;
        return this;
    };
    Object.defineProperty(AgencyTokenResult.prototype, "assumedBy", {
        get: function () {
            return this['assumed_by'];
        },
        set: function (assumedBy) {
            this['assumed_by'] = assumedBy;
        },
        enumerable: false,
        configurable: true
    });
    AgencyTokenResult.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    AgencyTokenResult.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    AgencyTokenResult.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    AgencyTokenResult.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    AgencyTokenResult.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return AgencyTokenResult;
}());
exports.AgencyTokenResult = AgencyTokenResult;


/***/ }),

/***/ 69004:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenScope = void 0;
var AgencyTokenScope = /** @class */ (function () {
    function AgencyTokenScope() {
    }
    AgencyTokenScope.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    AgencyTokenScope.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return AgencyTokenScope;
}());
exports.AgencyTokenScope = AgencyTokenScope;


/***/ }),

/***/ 26201:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenScopeDomain = void 0;
var AgencyTokenScopeDomain = /** @class */ (function () {
    function AgencyTokenScopeDomain() {
    }
    AgencyTokenScopeDomain.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AgencyTokenScopeDomain.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return AgencyTokenScopeDomain;
}());
exports.AgencyTokenScopeDomain = AgencyTokenScopeDomain;


/***/ }),

/***/ 9186:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenScopeProject = void 0;
var AgencyTokenScopeProject = /** @class */ (function () {
    function AgencyTokenScopeProject() {
    }
    AgencyTokenScopeProject.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AgencyTokenScopeProject.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return AgencyTokenScopeProject;
}());
exports.AgencyTokenScopeProject = AgencyTokenScopeProject;


/***/ }),

/***/ 12726:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenUser = void 0;
var AgencyTokenUser = /** @class */ (function () {
    function AgencyTokenUser(name, id, domain) {
        this['name'] = name;
        this['id'] = id;
        this['domain'] = domain;
    }
    AgencyTokenUser.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    AgencyTokenUser.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AgencyTokenUser.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    return AgencyTokenUser;
}());
exports.AgencyTokenUser = AgencyTokenUser;


/***/ }),

/***/ 61449:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AgencyTokenUserDomain = void 0;
var AgencyTokenUserDomain = /** @class */ (function () {
    function AgencyTokenUserDomain(id, name) {
        this['id'] = id;
        this['name'] = name;
    }
    AgencyTokenUserDomain.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AgencyTokenUserDomain.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return AgencyTokenUserDomain;
}());
exports.AgencyTokenUserDomain = AgencyTokenUserDomain;


/***/ }),

/***/ 31948:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AllowAddressNetmasksOption = void 0;
var AllowAddressNetmasksOption = /** @class */ (function () {
    function AllowAddressNetmasksOption(addressNetmask) {
        this['address_netmask'] = addressNetmask;
    }
    AllowAddressNetmasksOption.prototype.withAddressNetmask = function (addressNetmask) {
        this['address_netmask'] = addressNetmask;
        return this;
    };
    Object.defineProperty(AllowAddressNetmasksOption.prototype, "addressNetmask", {
        get: function () {
            return this['address_netmask'];
        },
        set: function (addressNetmask) {
            this['address_netmask'] = addressNetmask;
        },
        enumerable: false,
        configurable: true
    });
    AllowAddressNetmasksOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return AllowAddressNetmasksOption;
}());
exports.AllowAddressNetmasksOption = AllowAddressNetmasksOption;


/***/ }),

/***/ 87374:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AllowAddressNetmasksResult = void 0;
var AllowAddressNetmasksResult = /** @class */ (function () {
    function AllowAddressNetmasksResult(addressNetmask, description) {
        this['address_netmask'] = addressNetmask;
        this['description'] = description;
    }
    AllowAddressNetmasksResult.prototype.withAddressNetmask = function (addressNetmask) {
        this['address_netmask'] = addressNetmask;
        return this;
    };
    Object.defineProperty(AllowAddressNetmasksResult.prototype, "addressNetmask", {
        get: function () {
            return this['address_netmask'];
        },
        set: function (addressNetmask) {
            this['address_netmask'] = addressNetmask;
        },
        enumerable: false,
        configurable: true
    });
    AllowAddressNetmasksResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return AllowAddressNetmasksResult;
}());
exports.AllowAddressNetmasksResult = AllowAddressNetmasksResult;


/***/ }),

/***/ 20895:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AllowIpRangesOption = void 0;
var AllowIpRangesOption = /** @class */ (function () {
    function AllowIpRangesOption(ipRange) {
        this['ip_range'] = ipRange;
    }
    AllowIpRangesOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    AllowIpRangesOption.prototype.withIpRange = function (ipRange) {
        this['ip_range'] = ipRange;
        return this;
    };
    Object.defineProperty(AllowIpRangesOption.prototype, "ipRange", {
        get: function () {
            return this['ip_range'];
        },
        set: function (ipRange) {
            this['ip_range'] = ipRange;
        },
        enumerable: false,
        configurable: true
    });
    return AllowIpRangesOption;
}());
exports.AllowIpRangesOption = AllowIpRangesOption;


/***/ }),

/***/ 67398:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AllowIpRangesResult = void 0;
var AllowIpRangesResult = /** @class */ (function () {
    function AllowIpRangesResult(description, ipRange) {
        this['description'] = description;
        this['ip_range'] = ipRange;
    }
    AllowIpRangesResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    AllowIpRangesResult.prototype.withIpRange = function (ipRange) {
        this['ip_range'] = ipRange;
        return this;
    };
    Object.defineProperty(AllowIpRangesResult.prototype, "ipRange", {
        get: function () {
            return this['ip_range'];
        },
        set: function (ipRange) {
            this['ip_range'] = ipRange;
        },
        enumerable: false,
        configurable: true
    });
    return AllowIpRangesResult;
}());
exports.AllowIpRangesResult = AllowIpRangesResult;


/***/ }),

/***/ 18657:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateAgencyWithAllProjectsPermissionRequest = void 0;
var AssociateAgencyWithAllProjectsPermissionRequest = /** @class */ (function () {
    function AssociateAgencyWithAllProjectsPermissionRequest(agencyId, domainId, roleId) {
        this['agency_id'] = agencyId;
        this['domain_id'] = domainId;
        this['role_id'] = roleId;
    }
    AssociateAgencyWithAllProjectsPermissionRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(AssociateAgencyWithAllProjectsPermissionRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    AssociateAgencyWithAllProjectsPermissionRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(AssociateAgencyWithAllProjectsPermissionRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    AssociateAgencyWithAllProjectsPermissionRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(AssociateAgencyWithAllProjectsPermissionRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return AssociateAgencyWithAllProjectsPermissionRequest;
}());
exports.AssociateAgencyWithAllProjectsPermissionRequest = AssociateAgencyWithAllProjectsPermissionRequest;


/***/ }),

/***/ 58089:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateAgencyWithAllProjectsPermissionResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var AssociateAgencyWithAllProjectsPermissionResponse = /** @class */ (function (_super) {
    __extends(AssociateAgencyWithAllProjectsPermissionResponse, _super);
    function AssociateAgencyWithAllProjectsPermissionResponse() {
        return _super.call(this) || this;
    }
    return AssociateAgencyWithAllProjectsPermissionResponse;
}(SdkResponse_1.SdkResponse));
exports.AssociateAgencyWithAllProjectsPermissionResponse = AssociateAgencyWithAllProjectsPermissionResponse;


/***/ }),

/***/ 70970:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateAgencyWithDomainPermissionRequest = void 0;
var AssociateAgencyWithDomainPermissionRequest = /** @class */ (function () {
    function AssociateAgencyWithDomainPermissionRequest(domainId, agencyId, roleId) {
        this['domain_id'] = domainId;
        this['agency_id'] = agencyId;
        this['role_id'] = roleId;
    }
    AssociateAgencyWithDomainPermissionRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(AssociateAgencyWithDomainPermissionRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    AssociateAgencyWithDomainPermissionRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(AssociateAgencyWithDomainPermissionRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    AssociateAgencyWithDomainPermissionRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(AssociateAgencyWithDomainPermissionRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return AssociateAgencyWithDomainPermissionRequest;
}());
exports.AssociateAgencyWithDomainPermissionRequest = AssociateAgencyWithDomainPermissionRequest;


/***/ }),

/***/ 43339:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateAgencyWithDomainPermissionResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var AssociateAgencyWithDomainPermissionResponse = /** @class */ (function (_super) {
    __extends(AssociateAgencyWithDomainPermissionResponse, _super);
    function AssociateAgencyWithDomainPermissionResponse() {
        return _super.call(this) || this;
    }
    return AssociateAgencyWithDomainPermissionResponse;
}(SdkResponse_1.SdkResponse));
exports.AssociateAgencyWithDomainPermissionResponse = AssociateAgencyWithDomainPermissionResponse;


/***/ }),

/***/ 48129:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateAgencyWithProjectPermissionRequest = void 0;
var AssociateAgencyWithProjectPermissionRequest = /** @class */ (function () {
    function AssociateAgencyWithProjectPermissionRequest(agencyId, roleId) {
        this['agency_id'] = agencyId;
        this['role_id'] = roleId;
    }
    AssociateAgencyWithProjectPermissionRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(AssociateAgencyWithProjectPermissionRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    AssociateAgencyWithProjectPermissionRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(AssociateAgencyWithProjectPermissionRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return AssociateAgencyWithProjectPermissionRequest;
}());
exports.AssociateAgencyWithProjectPermissionRequest = AssociateAgencyWithProjectPermissionRequest;


/***/ }),

/***/ 6858:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateAgencyWithProjectPermissionResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var AssociateAgencyWithProjectPermissionResponse = /** @class */ (function (_super) {
    __extends(AssociateAgencyWithProjectPermissionResponse, _super);
    function AssociateAgencyWithProjectPermissionResponse() {
        return _super.call(this) || this;
    }
    return AssociateAgencyWithProjectPermissionResponse;
}(SdkResponse_1.SdkResponse));
exports.AssociateAgencyWithProjectPermissionResponse = AssociateAgencyWithProjectPermissionResponse;


/***/ }),

/***/ 88169:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateRoleToGroupOnEnterpriseProjectRequest = void 0;
var AssociateRoleToGroupOnEnterpriseProjectRequest = /** @class */ (function () {
    function AssociateRoleToGroupOnEnterpriseProjectRequest(enterpriseProjectId, groupId, roleId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    AssociateRoleToGroupOnEnterpriseProjectRequest.prototype.withEnterpriseProjectId = function (enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        return this;
    };
    Object.defineProperty(AssociateRoleToGroupOnEnterpriseProjectRequest.prototype, "enterpriseProjectId", {
        get: function () {
            return this['enterprise_project_id'];
        },
        set: function (enterpriseProjectId) {
            this['enterprise_project_id'] = enterpriseProjectId;
        },
        enumerable: false,
        configurable: true
    });
    AssociateRoleToGroupOnEnterpriseProjectRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(AssociateRoleToGroupOnEnterpriseProjectRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    AssociateRoleToGroupOnEnterpriseProjectRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(AssociateRoleToGroupOnEnterpriseProjectRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return AssociateRoleToGroupOnEnterpriseProjectRequest;
}());
exports.AssociateRoleToGroupOnEnterpriseProjectRequest = AssociateRoleToGroupOnEnterpriseProjectRequest;


/***/ }),

/***/ 5722:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateRoleToGroupOnEnterpriseProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var AssociateRoleToGroupOnEnterpriseProjectResponse = /** @class */ (function (_super) {
    __extends(AssociateRoleToGroupOnEnterpriseProjectResponse, _super);
    function AssociateRoleToGroupOnEnterpriseProjectResponse() {
        return _super.call(this) || this;
    }
    return AssociateRoleToGroupOnEnterpriseProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.AssociateRoleToGroupOnEnterpriseProjectResponse = AssociateRoleToGroupOnEnterpriseProjectResponse;


/***/ }),

/***/ 86383:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateRoleToUserOnEnterpriseProjectRequest = void 0;
var AssociateRoleToUserOnEnterpriseProjectRequest = /** @class */ (function () {
    function AssociateRoleToUserOnEnterpriseProjectRequest(enterpriseProjectId, userId, roleId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        this['user_id'] = userId;
        this['role_id'] = roleId;
    }
    AssociateRoleToUserOnEnterpriseProjectRequest.prototype.withEnterpriseProjectId = function (enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        return this;
    };
    Object.defineProperty(AssociateRoleToUserOnEnterpriseProjectRequest.prototype, "enterpriseProjectId", {
        get: function () {
            return this['enterprise_project_id'];
        },
        set: function (enterpriseProjectId) {
            this['enterprise_project_id'] = enterpriseProjectId;
        },
        enumerable: false,
        configurable: true
    });
    AssociateRoleToUserOnEnterpriseProjectRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(AssociateRoleToUserOnEnterpriseProjectRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    AssociateRoleToUserOnEnterpriseProjectRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(AssociateRoleToUserOnEnterpriseProjectRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return AssociateRoleToUserOnEnterpriseProjectRequest;
}());
exports.AssociateRoleToUserOnEnterpriseProjectRequest = AssociateRoleToUserOnEnterpriseProjectRequest;


/***/ }),

/***/ 75711:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssociateRoleToUserOnEnterpriseProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var AssociateRoleToUserOnEnterpriseProjectResponse = /** @class */ (function (_super) {
    __extends(AssociateRoleToUserOnEnterpriseProjectResponse, _super);
    function AssociateRoleToUserOnEnterpriseProjectResponse() {
        return _super.call(this) || this;
    }
    return AssociateRoleToUserOnEnterpriseProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.AssociateRoleToUserOnEnterpriseProjectResponse = AssociateRoleToUserOnEnterpriseProjectResponse;


/***/ }),

/***/ 31560:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AssumeroleSessionuser = void 0;
var AssumeroleSessionuser = /** @class */ (function () {
    function AssumeroleSessionuser() {
    }
    AssumeroleSessionuser.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return AssumeroleSessionuser;
}());
exports.AssumeroleSessionuser = AssumeroleSessionuser;


/***/ }),

/***/ 58371:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AuthProjectResult = void 0;
var AuthProjectResult = /** @class */ (function () {
    function AuthProjectResult(isDomain, description, links, enabled, id, parentId, domainId, name) {
        this['is_domain'] = isDomain;
        this['description'] = description;
        this['links'] = links;
        this['enabled'] = enabled;
        this['id'] = id;
        this['parent_id'] = parentId;
        this['domain_id'] = domainId;
        this['name'] = name;
    }
    AuthProjectResult.prototype.withIsDomain = function (isDomain) {
        this['is_domain'] = isDomain;
        return this;
    };
    Object.defineProperty(AuthProjectResult.prototype, "isDomain", {
        get: function () {
            return this['is_domain'];
        },
        set: function (isDomain) {
            this['is_domain'] = isDomain;
        },
        enumerable: false,
        configurable: true
    });
    AuthProjectResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    AuthProjectResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    AuthProjectResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    AuthProjectResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AuthProjectResult.prototype.withParentId = function (parentId) {
        this['parent_id'] = parentId;
        return this;
    };
    Object.defineProperty(AuthProjectResult.prototype, "parentId", {
        get: function () {
            return this['parent_id'];
        },
        set: function (parentId) {
            this['parent_id'] = parentId;
        },
        enumerable: false,
        configurable: true
    });
    AuthProjectResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(AuthProjectResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    AuthProjectResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return AuthProjectResult;
}());
exports.AuthProjectResult = AuthProjectResult;


/***/ }),

/***/ 78592:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AuthScope = void 0;
var AuthScope = /** @class */ (function () {
    function AuthScope() {
    }
    AuthScope.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    AuthScope.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return AuthScope;
}());
exports.AuthScope = AuthScope;


/***/ }),

/***/ 41106:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AuthScopeDomain = void 0;
var AuthScopeDomain = /** @class */ (function () {
    function AuthScopeDomain() {
    }
    AuthScopeDomain.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AuthScopeDomain.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return AuthScopeDomain;
}());
exports.AuthScopeDomain = AuthScopeDomain;


/***/ }),

/***/ 20707:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AuthScopeProject = void 0;
var AuthScopeProject = /** @class */ (function () {
    function AuthScopeProject() {
    }
    AuthScopeProject.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AuthScopeProject.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return AuthScopeProject;
}());
exports.AuthScopeProject = AuthScopeProject;


/***/ }),

/***/ 28307:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BindMfaDevice = void 0;
var BindMfaDevice = /** @class */ (function () {
    function BindMfaDevice(userId, serialNumber, authenticationCodeFirst, authenticationCodeSecond) {
        this['user_id'] = userId;
        this['serial_number'] = serialNumber;
        this['authentication_code_first'] = authenticationCodeFirst;
        this['authentication_code_second'] = authenticationCodeSecond;
    }
    BindMfaDevice.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(BindMfaDevice.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    BindMfaDevice.prototype.withSerialNumber = function (serialNumber) {
        this['serial_number'] = serialNumber;
        return this;
    };
    Object.defineProperty(BindMfaDevice.prototype, "serialNumber", {
        get: function () {
            return this['serial_number'];
        },
        set: function (serialNumber) {
            this['serial_number'] = serialNumber;
        },
        enumerable: false,
        configurable: true
    });
    BindMfaDevice.prototype.withAuthenticationCodeFirst = function (authenticationCodeFirst) {
        this['authentication_code_first'] = authenticationCodeFirst;
        return this;
    };
    Object.defineProperty(BindMfaDevice.prototype, "authenticationCodeFirst", {
        get: function () {
            return this['authentication_code_first'];
        },
        set: function (authenticationCodeFirst) {
            this['authentication_code_first'] = authenticationCodeFirst;
        },
        enumerable: false,
        configurable: true
    });
    BindMfaDevice.prototype.withAuthenticationCodeSecond = function (authenticationCodeSecond) {
        this['authentication_code_second'] = authenticationCodeSecond;
        return this;
    };
    Object.defineProperty(BindMfaDevice.prototype, "authenticationCodeSecond", {
        get: function () {
            return this['authentication_code_second'];
        },
        set: function (authenticationCodeSecond) {
            this['authentication_code_second'] = authenticationCodeSecond;
        },
        enumerable: false,
        configurable: true
    });
    return BindMfaDevice;
}());
exports.BindMfaDevice = BindMfaDevice;


/***/ }),

/***/ 84856:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Catalog = void 0;
var Catalog = /** @class */ (function () {
    function Catalog(endpoints, id, name, type) {
        this['endpoints'] = endpoints;
        this['id'] = id;
        this['name'] = name;
        this['type'] = type;
    }
    Catalog.prototype.withEndpoints = function (endpoints) {
        this['endpoints'] = endpoints;
        return this;
    };
    Catalog.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    Catalog.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    Catalog.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    return Catalog;
}());
exports.Catalog = Catalog;


/***/ }),

/***/ 84022:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CatalogEndpoints = void 0;
var CatalogEndpoints = /** @class */ (function () {
    function CatalogEndpoints(id, _interface, region, regionId, url) {
        this['id'] = id;
        this['interface'] = _interface;
        this['region'] = region;
        this['region_id'] = regionId;
        this['url'] = url;
    }
    CatalogEndpoints.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    CatalogEndpoints.prototype.withInterface = function (_interface) {
        this['interface'] = _interface;
        return this;
    };
    Object.defineProperty(CatalogEndpoints.prototype, "_interface", {
        get: function () {
            return this['interface'];
        },
        set: function (_interface) {
            this['interface'] = _interface;
        },
        enumerable: false,
        configurable: true
    });
    CatalogEndpoints.prototype.withRegion = function (region) {
        this['region'] = region;
        return this;
    };
    CatalogEndpoints.prototype.withRegionId = function (regionId) {
        this['region_id'] = regionId;
        return this;
    };
    Object.defineProperty(CatalogEndpoints.prototype, "regionId", {
        get: function () {
            return this['region_id'];
        },
        set: function (regionId) {
            this['region_id'] = regionId;
        },
        enumerable: false,
        configurable: true
    });
    CatalogEndpoints.prototype.withUrl = function (url) {
        this['url'] = url;
        return this;
    };
    return CatalogEndpoints;
}());
exports.CatalogEndpoints = CatalogEndpoints;


/***/ }),

/***/ 12508:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CheckAllProjectsPermissionForAgencyRequest = void 0;
var CheckAllProjectsPermissionForAgencyRequest = /** @class */ (function () {
    function CheckAllProjectsPermissionForAgencyRequest(agencyId, domainId, roleId) {
        this['agency_id'] = agencyId;
        this['domain_id'] = domainId;
        this['role_id'] = roleId;
    }
    CheckAllProjectsPermissionForAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(CheckAllProjectsPermissionForAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    CheckAllProjectsPermissionForAgencyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(CheckAllProjectsPermissionForAgencyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    CheckAllProjectsPermissionForAgencyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(CheckAllProjectsPermissionForAgencyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return CheckAllProjectsPermissionForAgencyRequest;
}());
exports.CheckAllProjectsPermissionForAgencyRequest = CheckAllProjectsPermissionForAgencyRequest;


/***/ }),

/***/ 56442:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CheckAllProjectsPermissionForAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CheckAllProjectsPermissionForAgencyResponse = /** @class */ (function (_super) {
    __extends(CheckAllProjectsPermissionForAgencyResponse, _super);
    function CheckAllProjectsPermissionForAgencyResponse() {
        return _super.call(this) || this;
    }
    return CheckAllProjectsPermissionForAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.CheckAllProjectsPermissionForAgencyResponse = CheckAllProjectsPermissionForAgencyResponse;


/***/ }),

/***/ 6150:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CheckDomainPermissionForAgencyRequest = void 0;
var CheckDomainPermissionForAgencyRequest = /** @class */ (function () {
    function CheckDomainPermissionForAgencyRequest(domainId, agencyId, roleId) {
        this['domain_id'] = domainId;
        this['agency_id'] = agencyId;
        this['role_id'] = roleId;
    }
    CheckDomainPermissionForAgencyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(CheckDomainPermissionForAgencyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    CheckDomainPermissionForAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(CheckDomainPermissionForAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    CheckDomainPermissionForAgencyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(CheckDomainPermissionForAgencyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return CheckDomainPermissionForAgencyRequest;
}());
exports.CheckDomainPermissionForAgencyRequest = CheckDomainPermissionForAgencyRequest;


/***/ }),

/***/ 68201:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CheckDomainPermissionForAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CheckDomainPermissionForAgencyResponse = /** @class */ (function (_super) {
    __extends(CheckDomainPermissionForAgencyResponse, _super);
    function CheckDomainPermissionForAgencyResponse() {
        return _super.call(this) || this;
    }
    return CheckDomainPermissionForAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.CheckDomainPermissionForAgencyResponse = CheckDomainPermissionForAgencyResponse;


/***/ }),

/***/ 24791:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CheckProjectPermissionForAgencyRequest = void 0;
var CheckProjectPermissionForAgencyRequest = /** @class */ (function () {
    function CheckProjectPermissionForAgencyRequest(agencyId, roleId) {
        this['agency_id'] = agencyId;
        this['role_id'] = roleId;
    }
    CheckProjectPermissionForAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(CheckProjectPermissionForAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    CheckProjectPermissionForAgencyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(CheckProjectPermissionForAgencyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return CheckProjectPermissionForAgencyRequest;
}());
exports.CheckProjectPermissionForAgencyRequest = CheckProjectPermissionForAgencyRequest;


/***/ }),

/***/ 54022:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CheckProjectPermissionForAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CheckProjectPermissionForAgencyResponse = /** @class */ (function (_super) {
    __extends(CheckProjectPermissionForAgencyResponse, _super);
    function CheckProjectPermissionForAgencyResponse() {
        return _super.call(this) || this;
    }
    return CheckProjectPermissionForAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.CheckProjectPermissionForAgencyResponse = CheckProjectPermissionForAgencyResponse;


/***/ }),

/***/ 43986:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Config = void 0;
var Config = /** @class */ (function () {
    function Config(securityCompliance) {
        this['security_compliance'] = securityCompliance;
    }
    Config.prototype.withSecurityCompliance = function (securityCompliance) {
        this['security_compliance'] = securityCompliance;
        return this;
    };
    Object.defineProperty(Config.prototype, "securityCompliance", {
        get: function () {
            return this['security_compliance'];
        },
        set: function (securityCompliance) {
            this['security_compliance'] = securityCompliance;
        },
        enumerable: false,
        configurable: true
    });
    return Config;
}());
exports.Config = Config;


/***/ }),

/***/ 80894:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConfigByOption = void 0;
var ConfigByOption = /** @class */ (function () {
    function ConfigByOption() {
    }
    ConfigByOption.prototype.withPasswordRegex = function (passwordRegex) {
        this['password_regex'] = passwordRegex;
        return this;
    };
    Object.defineProperty(ConfigByOption.prototype, "passwordRegex", {
        get: function () {
            return this['password_regex'];
        },
        set: function (passwordRegex) {
            this['password_regex'] = passwordRegex;
        },
        enumerable: false,
        configurable: true
    });
    ConfigByOption.prototype.withPasswordRegexDescription = function (passwordRegexDescription) {
        this['password_regex_description'] = passwordRegexDescription;
        return this;
    };
    Object.defineProperty(ConfigByOption.prototype, "passwordRegexDescription", {
        get: function () {
            return this['password_regex_description'];
        },
        set: function (passwordRegexDescription) {
            this['password_regex_description'] = passwordRegexDescription;
        },
        enumerable: false,
        configurable: true
    });
    return ConfigByOption;
}());
exports.ConfigByOption = ConfigByOption;


/***/ }),

/***/ 14474:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateAgencyCustomPolicyRequest = void 0;
var CreateAgencyCustomPolicyRequest = /** @class */ (function () {
    function CreateAgencyCustomPolicyRequest() {
    }
    CreateAgencyCustomPolicyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateAgencyCustomPolicyRequest;
}());
exports.CreateAgencyCustomPolicyRequest = CreateAgencyCustomPolicyRequest;


/***/ }),

/***/ 12803:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateAgencyCustomPolicyRequestBody = void 0;
var CreateAgencyCustomPolicyRequestBody = /** @class */ (function () {
    function CreateAgencyCustomPolicyRequestBody(role) {
        this['role'] = role;
    }
    CreateAgencyCustomPolicyRequestBody.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return CreateAgencyCustomPolicyRequestBody;
}());
exports.CreateAgencyCustomPolicyRequestBody = CreateAgencyCustomPolicyRequestBody;


/***/ }),

/***/ 92551:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateAgencyCustomPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateAgencyCustomPolicyResponse = /** @class */ (function (_super) {
    __extends(CreateAgencyCustomPolicyResponse, _super);
    function CreateAgencyCustomPolicyResponse() {
        return _super.call(this) || this;
    }
    CreateAgencyCustomPolicyResponse.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return CreateAgencyCustomPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateAgencyCustomPolicyResponse = CreateAgencyCustomPolicyResponse;


/***/ }),

/***/ 42060:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateAgencyOptionDurationEnum = exports.CreateAgencyOption = void 0;
var CreateAgencyOption = /** @class */ (function () {
    function CreateAgencyOption(name, domainId) {
        this['name'] = name;
        this['domain_id'] = domainId;
    }
    CreateAgencyOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    CreateAgencyOption.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(CreateAgencyOption.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    CreateAgencyOption.prototype.withTrustDomainId = function (trustDomainId) {
        this['trust_domain_id'] = trustDomainId;
        return this;
    };
    Object.defineProperty(CreateAgencyOption.prototype, "trustDomainId", {
        get: function () {
            return this['trust_domain_id'];
        },
        set: function (trustDomainId) {
            this['trust_domain_id'] = trustDomainId;
        },
        enumerable: false,
        configurable: true
    });
    CreateAgencyOption.prototype.withTrustDomainName = function (trustDomainName) {
        this['trust_domain_name'] = trustDomainName;
        return this;
    };
    Object.defineProperty(CreateAgencyOption.prototype, "trustDomainName", {
        get: function () {
            return this['trust_domain_name'];
        },
        set: function (trustDomainName) {
            this['trust_domain_name'] = trustDomainName;
        },
        enumerable: false,
        configurable: true
    });
    CreateAgencyOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    CreateAgencyOption.prototype.withDuration = function (duration) {
        this['duration'] = duration;
        return this;
    };
    return CreateAgencyOption;
}());
exports.CreateAgencyOption = CreateAgencyOption;
/**
    * @export
    * @enum {string}
    */
var CreateAgencyOptionDurationEnum;
(function (CreateAgencyOptionDurationEnum) {
    CreateAgencyOptionDurationEnum["FOREVER"] = "FOREVER";
    CreateAgencyOptionDurationEnum["ONEDAY"] = "ONEDAY";
})(CreateAgencyOptionDurationEnum = exports.CreateAgencyOptionDurationEnum || (exports.CreateAgencyOptionDurationEnum = {}));


/***/ }),

/***/ 7030:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateAgencyRequest = void 0;
var CreateAgencyRequest = /** @class */ (function () {
    function CreateAgencyRequest() {
    }
    CreateAgencyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateAgencyRequest;
}());
exports.CreateAgencyRequest = CreateAgencyRequest;


/***/ }),

/***/ 2604:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateAgencyRequestBody = void 0;
var CreateAgencyRequestBody = /** @class */ (function () {
    function CreateAgencyRequestBody(agency) {
        this['agency'] = agency;
    }
    CreateAgencyRequestBody.prototype.withAgency = function (agency) {
        this['agency'] = agency;
        return this;
    };
    return CreateAgencyRequestBody;
}());
exports.CreateAgencyRequestBody = CreateAgencyRequestBody;


/***/ }),

/***/ 18956:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateAgencyResponse = /** @class */ (function (_super) {
    __extends(CreateAgencyResponse, _super);
    function CreateAgencyResponse() {
        return _super.call(this) || this;
    }
    CreateAgencyResponse.prototype.withAgency = function (agency) {
        this['agency'] = agency;
        return this;
    };
    return CreateAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateAgencyResponse = CreateAgencyResponse;


/***/ }),

/***/ 96546:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateBindingDeviceRequest = void 0;
var CreateBindingDeviceRequest = /** @class */ (function () {
    function CreateBindingDeviceRequest() {
    }
    CreateBindingDeviceRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateBindingDeviceRequest;
}());
exports.CreateBindingDeviceRequest = CreateBindingDeviceRequest;


/***/ }),

/***/ 96654:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateBindingDeviceResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateBindingDeviceResponse = /** @class */ (function (_super) {
    __extends(CreateBindingDeviceResponse, _super);
    function CreateBindingDeviceResponse() {
        return _super.call(this) || this;
    }
    return CreateBindingDeviceResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateBindingDeviceResponse = CreateBindingDeviceResponse;


/***/ }),

/***/ 97755:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateCloudServiceCustomPolicyRequest = void 0;
var CreateCloudServiceCustomPolicyRequest = /** @class */ (function () {
    function CreateCloudServiceCustomPolicyRequest() {
    }
    CreateCloudServiceCustomPolicyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateCloudServiceCustomPolicyRequest;
}());
exports.CreateCloudServiceCustomPolicyRequest = CreateCloudServiceCustomPolicyRequest;


/***/ }),

/***/ 92405:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateCloudServiceCustomPolicyRequestBody = void 0;
var CreateCloudServiceCustomPolicyRequestBody = /** @class */ (function () {
    function CreateCloudServiceCustomPolicyRequestBody(role) {
        this['role'] = role;
    }
    CreateCloudServiceCustomPolicyRequestBody.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return CreateCloudServiceCustomPolicyRequestBody;
}());
exports.CreateCloudServiceCustomPolicyRequestBody = CreateCloudServiceCustomPolicyRequestBody;


/***/ }),

/***/ 56040:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateCloudServiceCustomPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateCloudServiceCustomPolicyResponse = /** @class */ (function (_super) {
    __extends(CreateCloudServiceCustomPolicyResponse, _super);
    function CreateCloudServiceCustomPolicyResponse() {
        return _super.call(this) || this;
    }
    CreateCloudServiceCustomPolicyResponse.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return CreateCloudServiceCustomPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateCloudServiceCustomPolicyResponse = CreateCloudServiceCustomPolicyResponse;


/***/ }),

/***/ 51496:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateCredentialOption = void 0;
var CreateCredentialOption = /** @class */ (function () {
    function CreateCredentialOption(userId) {
        this['user_id'] = userId;
    }
    CreateCredentialOption.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(CreateCredentialOption.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    CreateCredentialOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return CreateCredentialOption;
}());
exports.CreateCredentialOption = CreateCredentialOption;


/***/ }),

/***/ 96345:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateCredentialResult = void 0;
var CreateCredentialResult = /** @class */ (function () {
    function CreateCredentialResult(createTime, access, secret, status, userId, description) {
        this['create_time'] = createTime;
        this['access'] = access;
        this['secret'] = secret;
        this['status'] = status;
        this['user_id'] = userId;
        this['description'] = description;
    }
    CreateCredentialResult.prototype.withCreateTime = function (createTime) {
        this['create_time'] = createTime;
        return this;
    };
    Object.defineProperty(CreateCredentialResult.prototype, "createTime", {
        get: function () {
            return this['create_time'];
        },
        set: function (createTime) {
            this['create_time'] = createTime;
        },
        enumerable: false,
        configurable: true
    });
    CreateCredentialResult.prototype.withAccess = function (access) {
        this['access'] = access;
        return this;
    };
    CreateCredentialResult.prototype.withSecret = function (secret) {
        this['secret'] = secret;
        return this;
    };
    CreateCredentialResult.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    CreateCredentialResult.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(CreateCredentialResult.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    CreateCredentialResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return CreateCredentialResult;
}());
exports.CreateCredentialResult = CreateCredentialResult;


/***/ }),

/***/ 86181:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateLoginTokenRequest = void 0;
var CreateLoginTokenRequest = /** @class */ (function () {
    function CreateLoginTokenRequest() {
    }
    CreateLoginTokenRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateLoginTokenRequest;
}());
exports.CreateLoginTokenRequest = CreateLoginTokenRequest;


/***/ }),

/***/ 28554:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateLoginTokenRequestBody = void 0;
var CreateLoginTokenRequestBody = /** @class */ (function () {
    function CreateLoginTokenRequestBody(auth) {
        this['auth'] = auth;
    }
    CreateLoginTokenRequestBody.prototype.withAuth = function (auth) {
        this['auth'] = auth;
        return this;
    };
    return CreateLoginTokenRequestBody;
}());
exports.CreateLoginTokenRequestBody = CreateLoginTokenRequestBody;


/***/ }),

/***/ 61873:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateLoginTokenResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateLoginTokenResponse = /** @class */ (function (_super) {
    __extends(CreateLoginTokenResponse, _super);
    function CreateLoginTokenResponse() {
        return _super.call(this) || this;
    }
    CreateLoginTokenResponse.prototype.withLogintoken = function (logintoken) {
        this['logintoken'] = logintoken;
        return this;
    };
    CreateLoginTokenResponse.prototype.withXSubjectLoginToken = function (xSubjectLoginToken) {
        this['X-Subject-LoginToken'] = xSubjectLoginToken;
        return this;
    };
    Object.defineProperty(CreateLoginTokenResponse.prototype, "xSubjectLoginToken", {
        get: function () {
            return this['X-Subject-LoginToken'];
        },
        set: function (xSubjectLoginToken) {
            this['X-Subject-LoginToken'] = xSubjectLoginToken;
        },
        enumerable: false,
        configurable: true
    });
    return CreateLoginTokenResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateLoginTokenResponse = CreateLoginTokenResponse;


/***/ }),

/***/ 49521:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateMetadataRequest = void 0;
var CreateMetadataRequest = /** @class */ (function () {
    function CreateMetadataRequest(idpId, protocolId) {
        this['idp_id'] = idpId;
        this['protocol_id'] = protocolId;
    }
    CreateMetadataRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(CreateMetadataRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    CreateMetadataRequest.prototype.withProtocolId = function (protocolId) {
        this['protocol_id'] = protocolId;
        return this;
    };
    Object.defineProperty(CreateMetadataRequest.prototype, "protocolId", {
        get: function () {
            return this['protocol_id'];
        },
        set: function (protocolId) {
            this['protocol_id'] = protocolId;
        },
        enumerable: false,
        configurable: true
    });
    CreateMetadataRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateMetadataRequest;
}());
exports.CreateMetadataRequest = CreateMetadataRequest;


/***/ }),

/***/ 97207:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateMetadataRequestBody = void 0;
var CreateMetadataRequestBody = /** @class */ (function () {
    function CreateMetadataRequestBody(domainId, xaccountType, metadata) {
        this['domain_id'] = domainId;
        this['xaccount_type'] = xaccountType;
        this['metadata'] = metadata;
    }
    CreateMetadataRequestBody.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(CreateMetadataRequestBody.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    CreateMetadataRequestBody.prototype.withXaccountType = function (xaccountType) {
        this['xaccount_type'] = xaccountType;
        return this;
    };
    Object.defineProperty(CreateMetadataRequestBody.prototype, "xaccountType", {
        get: function () {
            return this['xaccount_type'];
        },
        set: function (xaccountType) {
            this['xaccount_type'] = xaccountType;
        },
        enumerable: false,
        configurable: true
    });
    CreateMetadataRequestBody.prototype.withMetadata = function (metadata) {
        this['metadata'] = metadata;
        return this;
    };
    return CreateMetadataRequestBody;
}());
exports.CreateMetadataRequestBody = CreateMetadataRequestBody;


/***/ }),

/***/ 91095:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateMetadataResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateMetadataResponse = /** @class */ (function (_super) {
    __extends(CreateMetadataResponse, _super);
    function CreateMetadataResponse() {
        return _super.call(this) || this;
    }
    CreateMetadataResponse.prototype.withMessage = function (message) {
        this['message'] = message;
        return this;
    };
    return CreateMetadataResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateMetadataResponse = CreateMetadataResponse;


/***/ }),

/***/ 5918:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateMfaDevice = void 0;
var CreateMfaDevice = /** @class */ (function () {
    function CreateMfaDevice(name, userId) {
        this['name'] = name;
        this['user_id'] = userId;
    }
    CreateMfaDevice.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    CreateMfaDevice.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(CreateMfaDevice.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return CreateMfaDevice;
}());
exports.CreateMfaDevice = CreateMfaDevice;


/***/ }),

/***/ 10749:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateMfaDeviceReq = void 0;
var CreateMfaDeviceReq = /** @class */ (function () {
    function CreateMfaDeviceReq(virtualMfaDevice) {
        this['virtual_mfa_device'] = virtualMfaDevice;
    }
    CreateMfaDeviceReq.prototype.withVirtualMfaDevice = function (virtualMfaDevice) {
        this['virtual_mfa_device'] = virtualMfaDevice;
        return this;
    };
    Object.defineProperty(CreateMfaDeviceReq.prototype, "virtualMfaDevice", {
        get: function () {
            return this['virtual_mfa_device'];
        },
        set: function (virtualMfaDevice) {
            this['virtual_mfa_device'] = virtualMfaDevice;
        },
        enumerable: false,
        configurable: true
    });
    return CreateMfaDeviceReq;
}());
exports.CreateMfaDeviceReq = CreateMfaDeviceReq;


/***/ }),

/***/ 55554:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateMfaDeviceRequest = void 0;
var CreateMfaDeviceRequest = /** @class */ (function () {
    function CreateMfaDeviceRequest() {
    }
    CreateMfaDeviceRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateMfaDeviceRequest;
}());
exports.CreateMfaDeviceRequest = CreateMfaDeviceRequest;


/***/ }),

/***/ 75153:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateMfaDeviceRespon = void 0;
var CreateMfaDeviceRespon = /** @class */ (function () {
    function CreateMfaDeviceRespon(serialNumber, base32StringSeed) {
        this['serial_number'] = serialNumber;
        this['base32_string_seed'] = base32StringSeed;
    }
    CreateMfaDeviceRespon.prototype.withSerialNumber = function (serialNumber) {
        this['serial_number'] = serialNumber;
        return this;
    };
    Object.defineProperty(CreateMfaDeviceRespon.prototype, "serialNumber", {
        get: function () {
            return this['serial_number'];
        },
        set: function (serialNumber) {
            this['serial_number'] = serialNumber;
        },
        enumerable: false,
        configurable: true
    });
    CreateMfaDeviceRespon.prototype.withBase32StringSeed = function (base32StringSeed) {
        this['base32_string_seed'] = base32StringSeed;
        return this;
    };
    Object.defineProperty(CreateMfaDeviceRespon.prototype, "base32StringSeed", {
        get: function () {
            return this['base32_string_seed'];
        },
        set: function (base32StringSeed) {
            this['base32_string_seed'] = base32StringSeed;
        },
        enumerable: false,
        configurable: true
    });
    return CreateMfaDeviceRespon;
}());
exports.CreateMfaDeviceRespon = CreateMfaDeviceRespon;


/***/ }),

/***/ 97259:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateMfaDeviceResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateMfaDeviceResponse = /** @class */ (function (_super) {
    __extends(CreateMfaDeviceResponse, _super);
    function CreateMfaDeviceResponse() {
        return _super.call(this) || this;
    }
    CreateMfaDeviceResponse.prototype.withVirtualMfaDevice = function (virtualMfaDevice) {
        this['virtual_mfa_device'] = virtualMfaDevice;
        return this;
    };
    Object.defineProperty(CreateMfaDeviceResponse.prototype, "virtualMfaDevice", {
        get: function () {
            return this['virtual_mfa_device'];
        },
        set: function (virtualMfaDevice) {
            this['virtual_mfa_device'] = virtualMfaDevice;
        },
        enumerable: false,
        configurable: true
    });
    return CreateMfaDeviceResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateMfaDeviceResponse = CreateMfaDeviceResponse;


/***/ }),

/***/ 65141:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateOpenIdConnectConfigResponseModeEnum = exports.CreateOpenIdConnectConfigResponseTypeEnum = exports.CreateOpenIdConnectConfig = void 0;
var CreateOpenIdConnectConfig = /** @class */ (function () {
    function CreateOpenIdConnectConfig(accessMode, idpUrl, clientId, signingKey) {
        this['access_mode'] = accessMode;
        this['idp_url'] = idpUrl;
        this['client_id'] = clientId;
        this['signing_key'] = signingKey;
    }
    CreateOpenIdConnectConfig.prototype.withAccessMode = function (accessMode) {
        this['access_mode'] = accessMode;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfig.prototype, "accessMode", {
        get: function () {
            return this['access_mode'];
        },
        set: function (accessMode) {
            this['access_mode'] = accessMode;
        },
        enumerable: false,
        configurable: true
    });
    CreateOpenIdConnectConfig.prototype.withIdpUrl = function (idpUrl) {
        this['idp_url'] = idpUrl;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfig.prototype, "idpUrl", {
        get: function () {
            return this['idp_url'];
        },
        set: function (idpUrl) {
            this['idp_url'] = idpUrl;
        },
        enumerable: false,
        configurable: true
    });
    CreateOpenIdConnectConfig.prototype.withClientId = function (clientId) {
        this['client_id'] = clientId;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfig.prototype, "clientId", {
        get: function () {
            return this['client_id'];
        },
        set: function (clientId) {
            this['client_id'] = clientId;
        },
        enumerable: false,
        configurable: true
    });
    CreateOpenIdConnectConfig.prototype.withAuthorizationEndpoint = function (authorizationEndpoint) {
        this['authorization_endpoint'] = authorizationEndpoint;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfig.prototype, "authorizationEndpoint", {
        get: function () {
            return this['authorization_endpoint'];
        },
        set: function (authorizationEndpoint) {
            this['authorization_endpoint'] = authorizationEndpoint;
        },
        enumerable: false,
        configurable: true
    });
    CreateOpenIdConnectConfig.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    CreateOpenIdConnectConfig.prototype.withResponseType = function (responseType) {
        this['response_type'] = responseType;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfig.prototype, "responseType", {
        get: function () {
            return this['response_type'];
        },
        set: function (responseType) {
            this['response_type'] = responseType;
        },
        enumerable: false,
        configurable: true
    });
    CreateOpenIdConnectConfig.prototype.withResponseMode = function (responseMode) {
        this['response_mode'] = responseMode;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfig.prototype, "responseMode", {
        get: function () {
            return this['response_mode'];
        },
        set: function (responseMode) {
            this['response_mode'] = responseMode;
        },
        enumerable: false,
        configurable: true
    });
    CreateOpenIdConnectConfig.prototype.withSigningKey = function (signingKey) {
        this['signing_key'] = signingKey;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfig.prototype, "signingKey", {
        get: function () {
            return this['signing_key'];
        },
        set: function (signingKey) {
            this['signing_key'] = signingKey;
        },
        enumerable: false,
        configurable: true
    });
    return CreateOpenIdConnectConfig;
}());
exports.CreateOpenIdConnectConfig = CreateOpenIdConnectConfig;
/**
    * @export
    * @enum {string}
    */
var CreateOpenIdConnectConfigResponseTypeEnum;
(function (CreateOpenIdConnectConfigResponseTypeEnum) {
    CreateOpenIdConnectConfigResponseTypeEnum["ID_TOKEN"] = "id_token";
})(CreateOpenIdConnectConfigResponseTypeEnum = exports.CreateOpenIdConnectConfigResponseTypeEnum || (exports.CreateOpenIdConnectConfigResponseTypeEnum = {}));
/**
    * @export
    * @enum {string}
    */
var CreateOpenIdConnectConfigResponseModeEnum;
(function (CreateOpenIdConnectConfigResponseModeEnum) {
    CreateOpenIdConnectConfigResponseModeEnum["FRAGMENT"] = "fragment";
    CreateOpenIdConnectConfigResponseModeEnum["FORM_POST"] = "form_post";
})(CreateOpenIdConnectConfigResponseModeEnum = exports.CreateOpenIdConnectConfigResponseModeEnum || (exports.CreateOpenIdConnectConfigResponseModeEnum = {}));


/***/ }),

/***/ 52774:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateOpenIdConnectConfigRequest = void 0;
var CreateOpenIdConnectConfigRequest = /** @class */ (function () {
    function CreateOpenIdConnectConfigRequest(idpId) {
        this['idp_id'] = idpId;
    }
    CreateOpenIdConnectConfigRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfigRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    CreateOpenIdConnectConfigRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateOpenIdConnectConfigRequest;
}());
exports.CreateOpenIdConnectConfigRequest = CreateOpenIdConnectConfigRequest;


/***/ }),

/***/ 176:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateOpenIdConnectConfigRequestBody = void 0;
var CreateOpenIdConnectConfigRequestBody = /** @class */ (function () {
    function CreateOpenIdConnectConfigRequestBody(openidConnectConfig) {
        this['openid_connect_config'] = openidConnectConfig;
    }
    CreateOpenIdConnectConfigRequestBody.prototype.withOpenidConnectConfig = function (openidConnectConfig) {
        this['openid_connect_config'] = openidConnectConfig;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfigRequestBody.prototype, "openidConnectConfig", {
        get: function () {
            return this['openid_connect_config'];
        },
        set: function (openidConnectConfig) {
            this['openid_connect_config'] = openidConnectConfig;
        },
        enumerable: false,
        configurable: true
    });
    return CreateOpenIdConnectConfigRequestBody;
}());
exports.CreateOpenIdConnectConfigRequestBody = CreateOpenIdConnectConfigRequestBody;


/***/ }),

/***/ 4737:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateOpenIdConnectConfigResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateOpenIdConnectConfigResponse = /** @class */ (function (_super) {
    __extends(CreateOpenIdConnectConfigResponse, _super);
    function CreateOpenIdConnectConfigResponse() {
        return _super.call(this) || this;
    }
    CreateOpenIdConnectConfigResponse.prototype.withOpenidConnectConfig = function (openidConnectConfig) {
        this['openid_connect_config'] = openidConnectConfig;
        return this;
    };
    Object.defineProperty(CreateOpenIdConnectConfigResponse.prototype, "openidConnectConfig", {
        get: function () {
            return this['openid_connect_config'];
        },
        set: function (openidConnectConfig) {
            this['openid_connect_config'] = openidConnectConfig;
        },
        enumerable: false,
        configurable: true
    });
    return CreateOpenIdConnectConfigResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateOpenIdConnectConfigResponse = CreateOpenIdConnectConfigResponse;


/***/ }),

/***/ 40275:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreatePermanentAccessKeyRequest = void 0;
var CreatePermanentAccessKeyRequest = /** @class */ (function () {
    function CreatePermanentAccessKeyRequest() {
    }
    CreatePermanentAccessKeyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreatePermanentAccessKeyRequest;
}());
exports.CreatePermanentAccessKeyRequest = CreatePermanentAccessKeyRequest;


/***/ }),

/***/ 2592:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreatePermanentAccessKeyRequestBody = void 0;
var CreatePermanentAccessKeyRequestBody = /** @class */ (function () {
    function CreatePermanentAccessKeyRequestBody(credential) {
        this['credential'] = credential;
    }
    CreatePermanentAccessKeyRequestBody.prototype.withCredential = function (credential) {
        this['credential'] = credential;
        return this;
    };
    return CreatePermanentAccessKeyRequestBody;
}());
exports.CreatePermanentAccessKeyRequestBody = CreatePermanentAccessKeyRequestBody;


/***/ }),

/***/ 57562:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreatePermanentAccessKeyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreatePermanentAccessKeyResponse = /** @class */ (function (_super) {
    __extends(CreatePermanentAccessKeyResponse, _super);
    function CreatePermanentAccessKeyResponse() {
        return _super.call(this) || this;
    }
    CreatePermanentAccessKeyResponse.prototype.withCredential = function (credential) {
        this['credential'] = credential;
        return this;
    };
    return CreatePermanentAccessKeyResponse;
}(SdkResponse_1.SdkResponse));
exports.CreatePermanentAccessKeyResponse = CreatePermanentAccessKeyResponse;


/***/ }),

/***/ 37533:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateTemporaryAccessKeyByAgencyRequest = void 0;
var CreateTemporaryAccessKeyByAgencyRequest = /** @class */ (function () {
    function CreateTemporaryAccessKeyByAgencyRequest() {
    }
    CreateTemporaryAccessKeyByAgencyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateTemporaryAccessKeyByAgencyRequest;
}());
exports.CreateTemporaryAccessKeyByAgencyRequest = CreateTemporaryAccessKeyByAgencyRequest;


/***/ }),

/***/ 13804:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateTemporaryAccessKeyByAgencyRequestBody = void 0;
var CreateTemporaryAccessKeyByAgencyRequestBody = /** @class */ (function () {
    function CreateTemporaryAccessKeyByAgencyRequestBody(auth) {
        this['auth'] = auth;
    }
    CreateTemporaryAccessKeyByAgencyRequestBody.prototype.withAuth = function (auth) {
        this['auth'] = auth;
        return this;
    };
    return CreateTemporaryAccessKeyByAgencyRequestBody;
}());
exports.CreateTemporaryAccessKeyByAgencyRequestBody = CreateTemporaryAccessKeyByAgencyRequestBody;


/***/ }),

/***/ 69683:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateTemporaryAccessKeyByAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateTemporaryAccessKeyByAgencyResponse = /** @class */ (function (_super) {
    __extends(CreateTemporaryAccessKeyByAgencyResponse, _super);
    function CreateTemporaryAccessKeyByAgencyResponse() {
        return _super.call(this) || this;
    }
    CreateTemporaryAccessKeyByAgencyResponse.prototype.withCredential = function (credential) {
        this['credential'] = credential;
        return this;
    };
    return CreateTemporaryAccessKeyByAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateTemporaryAccessKeyByAgencyResponse = CreateTemporaryAccessKeyByAgencyResponse;


/***/ }),

/***/ 53831:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateTemporaryAccessKeyByTokenRequest = void 0;
var CreateTemporaryAccessKeyByTokenRequest = /** @class */ (function () {
    function CreateTemporaryAccessKeyByTokenRequest() {
    }
    CreateTemporaryAccessKeyByTokenRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateTemporaryAccessKeyByTokenRequest;
}());
exports.CreateTemporaryAccessKeyByTokenRequest = CreateTemporaryAccessKeyByTokenRequest;


/***/ }),

/***/ 62101:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateTemporaryAccessKeyByTokenRequestBody = void 0;
var CreateTemporaryAccessKeyByTokenRequestBody = /** @class */ (function () {
    function CreateTemporaryAccessKeyByTokenRequestBody(auth) {
        this['auth'] = auth;
    }
    CreateTemporaryAccessKeyByTokenRequestBody.prototype.withAuth = function (auth) {
        this['auth'] = auth;
        return this;
    };
    return CreateTemporaryAccessKeyByTokenRequestBody;
}());
exports.CreateTemporaryAccessKeyByTokenRequestBody = CreateTemporaryAccessKeyByTokenRequestBody;


/***/ }),

/***/ 95286:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateTemporaryAccessKeyByTokenResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateTemporaryAccessKeyByTokenResponse = /** @class */ (function (_super) {
    __extends(CreateTemporaryAccessKeyByTokenResponse, _super);
    function CreateTemporaryAccessKeyByTokenResponse() {
        return _super.call(this) || this;
    }
    CreateTemporaryAccessKeyByTokenResponse.prototype.withCredential = function (credential) {
        this['credential'] = credential;
        return this;
    };
    return CreateTemporaryAccessKeyByTokenResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateTemporaryAccessKeyByTokenResponse = CreateTemporaryAccessKeyByTokenResponse;


/***/ }),

/***/ 58293:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateTokenWithIdTokenRequest = void 0;
var CreateTokenWithIdTokenRequest = /** @class */ (function () {
    function CreateTokenWithIdTokenRequest(xIdpId) {
        this['X-Idp-Id'] = xIdpId;
    }
    CreateTokenWithIdTokenRequest.prototype.withXIdpId = function (xIdpId) {
        this['X-Idp-Id'] = xIdpId;
        return this;
    };
    Object.defineProperty(CreateTokenWithIdTokenRequest.prototype, "xIdpId", {
        get: function () {
            return this['X-Idp-Id'];
        },
        set: function (xIdpId) {
            this['X-Idp-Id'] = xIdpId;
        },
        enumerable: false,
        configurable: true
    });
    CreateTokenWithIdTokenRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateTokenWithIdTokenRequest;
}());
exports.CreateTokenWithIdTokenRequest = CreateTokenWithIdTokenRequest;


/***/ }),

/***/ 92631:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateTokenWithIdTokenResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateTokenWithIdTokenResponse = /** @class */ (function (_super) {
    __extends(CreateTokenWithIdTokenResponse, _super);
    function CreateTokenWithIdTokenResponse() {
        return _super.call(this) || this;
    }
    CreateTokenWithIdTokenResponse.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    CreateTokenWithIdTokenResponse.prototype.withXSubjectToken = function (xSubjectToken) {
        this['X-Subject-Token'] = xSubjectToken;
        return this;
    };
    Object.defineProperty(CreateTokenWithIdTokenResponse.prototype, "xSubjectToken", {
        get: function () {
            return this['X-Subject-Token'];
        },
        set: function (xSubjectToken) {
            this['X-Subject-Token'] = xSubjectToken;
        },
        enumerable: false,
        configurable: true
    });
    return CreateTokenWithIdTokenResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateTokenWithIdTokenResponse = CreateTokenWithIdTokenResponse;


/***/ }),

/***/ 15413:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateUnscopedTokenWithIdTokenRequest = void 0;
var CreateUnscopedTokenWithIdTokenRequest = /** @class */ (function () {
    function CreateUnscopedTokenWithIdTokenRequest(idpId, protocolId, authorization) {
        this['idp_id'] = idpId;
        this['protocol_id'] = protocolId;
        this['Authorization'] = authorization;
    }
    CreateUnscopedTokenWithIdTokenRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(CreateUnscopedTokenWithIdTokenRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    CreateUnscopedTokenWithIdTokenRequest.prototype.withProtocolId = function (protocolId) {
        this['protocol_id'] = protocolId;
        return this;
    };
    Object.defineProperty(CreateUnscopedTokenWithIdTokenRequest.prototype, "protocolId", {
        get: function () {
            return this['protocol_id'];
        },
        set: function (protocolId) {
            this['protocol_id'] = protocolId;
        },
        enumerable: false,
        configurable: true
    });
    CreateUnscopedTokenWithIdTokenRequest.prototype.withAuthorization = function (authorization) {
        this['Authorization'] = authorization;
        return this;
    };
    Object.defineProperty(CreateUnscopedTokenWithIdTokenRequest.prototype, "authorization", {
        get: function () {
            return this['Authorization'];
        },
        set: function (authorization) {
            this['Authorization'] = authorization;
        },
        enumerable: false,
        configurable: true
    });
    return CreateUnscopedTokenWithIdTokenRequest;
}());
exports.CreateUnscopedTokenWithIdTokenRequest = CreateUnscopedTokenWithIdTokenRequest;


/***/ }),

/***/ 35110:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateUnscopedTokenWithIdTokenResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateUnscopedTokenWithIdTokenResponse = /** @class */ (function (_super) {
    __extends(CreateUnscopedTokenWithIdTokenResponse, _super);
    function CreateUnscopedTokenWithIdTokenResponse() {
        return _super.call(this) || this;
    }
    CreateUnscopedTokenWithIdTokenResponse.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    CreateUnscopedTokenWithIdTokenResponse.prototype.withXSubjectToken = function (xSubjectToken) {
        this['X-Subject-Token'] = xSubjectToken;
        return this;
    };
    Object.defineProperty(CreateUnscopedTokenWithIdTokenResponse.prototype, "xSubjectToken", {
        get: function () {
            return this['X-Subject-Token'];
        },
        set: function (xSubjectToken) {
            this['X-Subject-Token'] = xSubjectToken;
        },
        enumerable: false,
        configurable: true
    });
    return CreateUnscopedTokenWithIdTokenResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateUnscopedTokenWithIdTokenResponse = CreateUnscopedTokenWithIdTokenResponse;


/***/ }),

/***/ 56388:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateUserOption = void 0;
var CreateUserOption = /** @class */ (function () {
    function CreateUserOption(name, domainId) {
        this['name'] = name;
        this['domain_id'] = domainId;
    }
    CreateUserOption.prototype.withAccessMode = function (accessMode) {
        this['access_mode'] = accessMode;
        return this;
    };
    Object.defineProperty(CreateUserOption.prototype, "accessMode", {
        get: function () {
            return this['access_mode'];
        },
        set: function (accessMode) {
            this['access_mode'] = accessMode;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    CreateUserOption.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(CreateUserOption.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserOption.prototype.withPassword = function (password) {
        this['password'] = password;
        return this;
    };
    CreateUserOption.prototype.withEmail = function (email) {
        this['email'] = email;
        return this;
    };
    CreateUserOption.prototype.withAreacode = function (areacode) {
        this['areacode'] = areacode;
        return this;
    };
    CreateUserOption.prototype.withPhone = function (phone) {
        this['phone'] = phone;
        return this;
    };
    CreateUserOption.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    CreateUserOption.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(CreateUserOption.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserOption.prototype.withXuserType = function (xuserType) {
        this['xuser_type'] = xuserType;
        return this;
    };
    Object.defineProperty(CreateUserOption.prototype, "xuserType", {
        get: function () {
            return this['xuser_type'];
        },
        set: function (xuserType) {
            this['xuser_type'] = xuserType;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserOption.prototype.withXuserId = function (xuserId) {
        this['xuser_id'] = xuserId;
        return this;
    };
    Object.defineProperty(CreateUserOption.prototype, "xuserId", {
        get: function () {
            return this['xuser_id'];
        },
        set: function (xuserId) {
            this['xuser_id'] = xuserId;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return CreateUserOption;
}());
exports.CreateUserOption = CreateUserOption;


/***/ }),

/***/ 13826:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateUserRequest = void 0;
var CreateUserRequest = /** @class */ (function () {
    function CreateUserRequest() {
    }
    CreateUserRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return CreateUserRequest;
}());
exports.CreateUserRequest = CreateUserRequest;


/***/ }),

/***/ 60774:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateUserRequestBody = void 0;
var CreateUserRequestBody = /** @class */ (function () {
    function CreateUserRequestBody(user) {
        this['user'] = user;
    }
    CreateUserRequestBody.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return CreateUserRequestBody;
}());
exports.CreateUserRequestBody = CreateUserRequestBody;


/***/ }),

/***/ 37818:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateUserResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var CreateUserResponse = /** @class */ (function (_super) {
    __extends(CreateUserResponse, _super);
    function CreateUserResponse() {
        return _super.call(this) || this;
    }
    CreateUserResponse.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return CreateUserResponse;
}(SdkResponse_1.SdkResponse));
exports.CreateUserResponse = CreateUserResponse;


/***/ }),

/***/ 85261:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateUserResult = void 0;
var CreateUserResult = /** @class */ (function () {
    function CreateUserResult(name, domainId, enabled, id) {
        this['name'] = name;
        this['domain_id'] = domainId;
        this['enabled'] = enabled;
        this['id'] = id;
    }
    CreateUserResult.prototype.withAccessMode = function (accessMode) {
        this['access_mode'] = accessMode;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "accessMode", {
        get: function () {
            return this['access_mode'];
        },
        set: function (accessMode) {
            this['access_mode'] = accessMode;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserResult.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    CreateUserResult.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserResult.prototype.withXuserId = function (xuserId) {
        this['xuser_id'] = xuserId;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "xuserId", {
        get: function () {
            return this['xuser_id'];
        },
        set: function (xuserId) {
            this['xuser_id'] = xuserId;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserResult.prototype.withXuserType = function (xuserType) {
        this['xuser_type'] = xuserType;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "xuserType", {
        get: function () {
            return this['xuser_type'];
        },
        set: function (xuserType) {
            this['xuser_type'] = xuserType;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    CreateUserResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    CreateUserResult.prototype.withPhone = function (phone) {
        this['phone'] = phone;
        return this;
    };
    CreateUserResult.prototype.withIsDomainOwner = function (isDomainOwner) {
        this['is_domain_owner'] = isDomainOwner;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "isDomainOwner", {
        get: function () {
            return this['is_domain_owner'];
        },
        set: function (isDomainOwner) {
            this['is_domain_owner'] = isDomainOwner;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    CreateUserResult.prototype.withAreacode = function (areacode) {
        this['areacode'] = areacode;
        return this;
    };
    CreateUserResult.prototype.withEmail = function (email) {
        this['email'] = email;
        return this;
    };
    CreateUserResult.prototype.withCreateTime = function (createTime) {
        this['create_time'] = createTime;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "createTime", {
        get: function () {
            return this['create_time'];
        },
        set: function (createTime) {
            this['create_time'] = createTime;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserResult.prototype.withXdomainId = function (xdomainId) {
        this['xdomain_id'] = xdomainId;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "xdomainId", {
        get: function () {
            return this['xdomain_id'];
        },
        set: function (xdomainId) {
            this['xdomain_id'] = xdomainId;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserResult.prototype.withXdomainType = function (xdomainType) {
        this['xdomain_type'] = xdomainType;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "xdomainType", {
        get: function () {
            return this['xdomain_type'];
        },
        set: function (xdomainType) {
            this['xdomain_type'] = xdomainType;
        },
        enumerable: false,
        configurable: true
    });
    CreateUserResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    CreateUserResult.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(CreateUserResult.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    return CreateUserResult;
}());
exports.CreateUserResult = CreateUserResult;


/***/ }),

/***/ 4819:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Credential = void 0;
var Credential = /** @class */ (function () {
    function Credential(expiresAt, access, secret, securitytoken) {
        this['expires_at'] = expiresAt;
        this['access'] = access;
        this['secret'] = secret;
        this['securitytoken'] = securitytoken;
    }
    Credential.prototype.withExpiresAt = function (expiresAt) {
        this['expires_at'] = expiresAt;
        return this;
    };
    Object.defineProperty(Credential.prototype, "expiresAt", {
        get: function () {
            return this['expires_at'];
        },
        set: function (expiresAt) {
            this['expires_at'] = expiresAt;
        },
        enumerable: false,
        configurable: true
    });
    Credential.prototype.withAccess = function (access) {
        this['access'] = access;
        return this;
    };
    Credential.prototype.withSecret = function (secret) {
        this['secret'] = secret;
        return this;
    };
    Credential.prototype.withSecuritytoken = function (securitytoken) {
        this['securitytoken'] = securitytoken;
        return this;
    };
    return Credential;
}());
exports.Credential = Credential;


/***/ }),

/***/ 45746:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Credentials = void 0;
var Credentials = /** @class */ (function () {
    function Credentials(userId, access, status, createTime, description) {
        this['user_id'] = userId;
        this['access'] = access;
        this['status'] = status;
        this['create_time'] = createTime;
        this['description'] = description;
    }
    Credentials.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(Credentials.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    Credentials.prototype.withAccess = function (access) {
        this['access'] = access;
        return this;
    };
    Credentials.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    Credentials.prototype.withCreateTime = function (createTime) {
        this['create_time'] = createTime;
        return this;
    };
    Object.defineProperty(Credentials.prototype, "createTime", {
        get: function () {
            return this['create_time'];
        },
        set: function (createTime) {
            this['create_time'] = createTime;
        },
        enumerable: false,
        configurable: true
    });
    Credentials.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return Credentials;
}());
exports.Credentials = Credentials;


/***/ }),

/***/ 73989:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteAgencyRequest = void 0;
var DeleteAgencyRequest = /** @class */ (function () {
    function DeleteAgencyRequest(agencyId) {
        this['agency_id'] = agencyId;
    }
    DeleteAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(DeleteAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    return DeleteAgencyRequest;
}());
exports.DeleteAgencyRequest = DeleteAgencyRequest;


/***/ }),

/***/ 79109:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var DeleteAgencyResponse = /** @class */ (function (_super) {
    __extends(DeleteAgencyResponse, _super);
    function DeleteAgencyResponse() {
        return _super.call(this) || this;
    }
    return DeleteAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.DeleteAgencyResponse = DeleteAgencyResponse;


/***/ }),

/***/ 59928:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteBindingDeviceRequest = void 0;
var DeleteBindingDeviceRequest = /** @class */ (function () {
    function DeleteBindingDeviceRequest() {
    }
    DeleteBindingDeviceRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return DeleteBindingDeviceRequest;
}());
exports.DeleteBindingDeviceRequest = DeleteBindingDeviceRequest;


/***/ }),

/***/ 51109:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteBindingDeviceResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var DeleteBindingDeviceResponse = /** @class */ (function (_super) {
    __extends(DeleteBindingDeviceResponse, _super);
    function DeleteBindingDeviceResponse() {
        return _super.call(this) || this;
    }
    return DeleteBindingDeviceResponse;
}(SdkResponse_1.SdkResponse));
exports.DeleteBindingDeviceResponse = DeleteBindingDeviceResponse;


/***/ }),

/***/ 51487:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteCustomPolicyRequest = void 0;
var DeleteCustomPolicyRequest = /** @class */ (function () {
    function DeleteCustomPolicyRequest(roleId) {
        this['role_id'] = roleId;
    }
    DeleteCustomPolicyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(DeleteCustomPolicyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return DeleteCustomPolicyRequest;
}());
exports.DeleteCustomPolicyRequest = DeleteCustomPolicyRequest;


/***/ }),

/***/ 44631:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteCustomPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var DeleteCustomPolicyResponse = /** @class */ (function (_super) {
    __extends(DeleteCustomPolicyResponse, _super);
    function DeleteCustomPolicyResponse() {
        return _super.call(this) || this;
    }
    return DeleteCustomPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.DeleteCustomPolicyResponse = DeleteCustomPolicyResponse;


/***/ }),

/***/ 92910:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteDomainGroupInheritedRoleRequest = void 0;
var DeleteDomainGroupInheritedRoleRequest = /** @class */ (function () {
    function DeleteDomainGroupInheritedRoleRequest(domainId, groupId, roleId) {
        this['domain_id'] = domainId;
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    DeleteDomainGroupInheritedRoleRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(DeleteDomainGroupInheritedRoleRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    DeleteDomainGroupInheritedRoleRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(DeleteDomainGroupInheritedRoleRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    DeleteDomainGroupInheritedRoleRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(DeleteDomainGroupInheritedRoleRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return DeleteDomainGroupInheritedRoleRequest;
}());
exports.DeleteDomainGroupInheritedRoleRequest = DeleteDomainGroupInheritedRoleRequest;


/***/ }),

/***/ 69437:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteDomainGroupInheritedRoleResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var DeleteDomainGroupInheritedRoleResponse = /** @class */ (function (_super) {
    __extends(DeleteDomainGroupInheritedRoleResponse, _super);
    function DeleteDomainGroupInheritedRoleResponse() {
        return _super.call(this) || this;
    }
    return DeleteDomainGroupInheritedRoleResponse;
}(SdkResponse_1.SdkResponse));
exports.DeleteDomainGroupInheritedRoleResponse = DeleteDomainGroupInheritedRoleResponse;


/***/ }),

/***/ 28204:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteMfaDeviceRequest = void 0;
var DeleteMfaDeviceRequest = /** @class */ (function () {
    function DeleteMfaDeviceRequest(userId, serialNumber) {
        this['user_id'] = userId;
        this['serial_number'] = serialNumber;
    }
    DeleteMfaDeviceRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(DeleteMfaDeviceRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    DeleteMfaDeviceRequest.prototype.withSerialNumber = function (serialNumber) {
        this['serial_number'] = serialNumber;
        return this;
    };
    Object.defineProperty(DeleteMfaDeviceRequest.prototype, "serialNumber", {
        get: function () {
            return this['serial_number'];
        },
        set: function (serialNumber) {
            this['serial_number'] = serialNumber;
        },
        enumerable: false,
        configurable: true
    });
    return DeleteMfaDeviceRequest;
}());
exports.DeleteMfaDeviceRequest = DeleteMfaDeviceRequest;


/***/ }),

/***/ 40825:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteMfaDeviceResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var DeleteMfaDeviceResponse = /** @class */ (function (_super) {
    __extends(DeleteMfaDeviceResponse, _super);
    function DeleteMfaDeviceResponse() {
        return _super.call(this) || this;
    }
    return DeleteMfaDeviceResponse;
}(SdkResponse_1.SdkResponse));
exports.DeleteMfaDeviceResponse = DeleteMfaDeviceResponse;


/***/ }),

/***/ 96396:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeletePermanentAccessKeyRequest = void 0;
var DeletePermanentAccessKeyRequest = /** @class */ (function () {
    function DeletePermanentAccessKeyRequest(accessKey) {
        this['access_key'] = accessKey;
    }
    DeletePermanentAccessKeyRequest.prototype.withAccessKey = function (accessKey) {
        this['access_key'] = accessKey;
        return this;
    };
    Object.defineProperty(DeletePermanentAccessKeyRequest.prototype, "accessKey", {
        get: function () {
            return this['access_key'];
        },
        set: function (accessKey) {
            this['access_key'] = accessKey;
        },
        enumerable: false,
        configurable: true
    });
    return DeletePermanentAccessKeyRequest;
}());
exports.DeletePermanentAccessKeyRequest = DeletePermanentAccessKeyRequest;


/***/ }),

/***/ 27338:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeletePermanentAccessKeyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var DeletePermanentAccessKeyResponse = /** @class */ (function (_super) {
    __extends(DeletePermanentAccessKeyResponse, _super);
    function DeletePermanentAccessKeyResponse() {
        return _super.call(this) || this;
    }
    return DeletePermanentAccessKeyResponse;
}(SdkResponse_1.SdkResponse));
exports.DeletePermanentAccessKeyResponse = DeletePermanentAccessKeyResponse;


/***/ }),

/***/ 76674:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DomainInfo = void 0;
var DomainInfo = /** @class */ (function () {
    function DomainInfo(name) {
        this['name'] = name;
    }
    DomainInfo.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    DomainInfo.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return DomainInfo;
}());
exports.DomainInfo = DomainInfo;


/***/ }),

/***/ 16918:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Domains = void 0;
var Domains = /** @class */ (function () {
    function Domains(enabled, id, name, links, description) {
        this['enabled'] = enabled;
        this['id'] = id;
        this['name'] = name;
        this['links'] = links;
        this['description'] = description;
    }
    Domains.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    Domains.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    Domains.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    Domains.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    Domains.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return Domains;
}());
exports.Domains = Domains;


/***/ }),

/***/ 40356:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Endpoint = void 0;
var Endpoint = /** @class */ (function () {
    function Endpoint(serviceId, regionId, links, id, _interface, region, url, enabled) {
        this['service_id'] = serviceId;
        this['region_id'] = regionId;
        this['links'] = links;
        this['id'] = id;
        this['interface'] = _interface;
        this['region'] = region;
        this['url'] = url;
        this['enabled'] = enabled;
    }
    Endpoint.prototype.withServiceId = function (serviceId) {
        this['service_id'] = serviceId;
        return this;
    };
    Object.defineProperty(Endpoint.prototype, "serviceId", {
        get: function () {
            return this['service_id'];
        },
        set: function (serviceId) {
            this['service_id'] = serviceId;
        },
        enumerable: false,
        configurable: true
    });
    Endpoint.prototype.withRegionId = function (regionId) {
        this['region_id'] = regionId;
        return this;
    };
    Object.defineProperty(Endpoint.prototype, "regionId", {
        get: function () {
            return this['region_id'];
        },
        set: function (regionId) {
            this['region_id'] = regionId;
        },
        enumerable: false,
        configurable: true
    });
    Endpoint.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    Endpoint.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    Endpoint.prototype.withInterface = function (_interface) {
        this['interface'] = _interface;
        return this;
    };
    Object.defineProperty(Endpoint.prototype, "_interface", {
        get: function () {
            return this['interface'];
        },
        set: function (_interface) {
            this['interface'] = _interface;
        },
        enumerable: false,
        configurable: true
    });
    Endpoint.prototype.withRegion = function (region) {
        this['region'] = region;
        return this;
    };
    Endpoint.prototype.withUrl = function (url) {
        this['url'] = url;
        return this;
    };
    Endpoint.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    return Endpoint;
}());
exports.Endpoint = Endpoint;


/***/ }),

/***/ 74822:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FederationUserBody = void 0;
var FederationUserBody = /** @class */ (function () {
    function FederationUserBody(osFederation, domain) {
        this['OS-FEDERATION'] = osFederation;
        this['domain'] = domain;
    }
    FederationUserBody.prototype.withOsFederation = function (osFederation) {
        this['OS-FEDERATION'] = osFederation;
        return this;
    };
    Object.defineProperty(FederationUserBody.prototype, "osFederation", {
        get: function () {
            return this['OS-FEDERATION'];
        },
        set: function (osFederation) {
            this['OS-FEDERATION'] = osFederation;
        },
        enumerable: false,
        configurable: true
    });
    FederationUserBody.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    FederationUserBody.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    FederationUserBody.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return FederationUserBody;
}());
exports.FederationUserBody = FederationUserBody;


/***/ }),

/***/ 68209:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GetIdTokenAuthParams = void 0;
var GetIdTokenAuthParams = /** @class */ (function () {
    function GetIdTokenAuthParams(idToken) {
        this['id_token'] = idToken;
    }
    GetIdTokenAuthParams.prototype.withIdToken = function (idToken) {
        this['id_token'] = idToken;
        return this;
    };
    Object.defineProperty(GetIdTokenAuthParams.prototype, "idToken", {
        get: function () {
            return this['id_token'];
        },
        set: function (idToken) {
            this['id_token'] = idToken;
        },
        enumerable: false,
        configurable: true
    });
    GetIdTokenAuthParams.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    return GetIdTokenAuthParams;
}());
exports.GetIdTokenAuthParams = GetIdTokenAuthParams;


/***/ }),

/***/ 21975:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GetIdTokenIdScopeBody = void 0;
var GetIdTokenIdScopeBody = /** @class */ (function () {
    function GetIdTokenIdScopeBody() {
    }
    GetIdTokenIdScopeBody.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    GetIdTokenIdScopeBody.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return GetIdTokenIdScopeBody;
}());
exports.GetIdTokenIdScopeBody = GetIdTokenIdScopeBody;


/***/ }),

/***/ 59673:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GetIdTokenIdTokenBody = void 0;
var GetIdTokenIdTokenBody = /** @class */ (function () {
    function GetIdTokenIdTokenBody(id) {
        this['id'] = id;
    }
    GetIdTokenIdTokenBody.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return GetIdTokenIdTokenBody;
}());
exports.GetIdTokenIdTokenBody = GetIdTokenIdTokenBody;


/***/ }),

/***/ 33586:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GetIdTokenRequestBody = void 0;
var GetIdTokenRequestBody = /** @class */ (function () {
    function GetIdTokenRequestBody(auth) {
        this['auth'] = auth;
    }
    GetIdTokenRequestBody.prototype.withAuth = function (auth) {
        this['auth'] = auth;
        return this;
    };
    return GetIdTokenRequestBody;
}());
exports.GetIdTokenRequestBody = GetIdTokenRequestBody;


/***/ }),

/***/ 10643:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GetIdTokenScopeDomainOrProjectBody = void 0;
var GetIdTokenScopeDomainOrProjectBody = /** @class */ (function () {
    function GetIdTokenScopeDomainOrProjectBody() {
    }
    GetIdTokenScopeDomainOrProjectBody.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    GetIdTokenScopeDomainOrProjectBody.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return GetIdTokenScopeDomainOrProjectBody;
}());
exports.GetIdTokenScopeDomainOrProjectBody = GetIdTokenScopeDomainOrProjectBody;


/***/ }),

/***/ 63946:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdentityAssumerole = void 0;
var IdentityAssumerole = /** @class */ (function () {
    function IdentityAssumerole(agencyName) {
        this['agency_name'] = agencyName;
    }
    IdentityAssumerole.prototype.withAgencyName = function (agencyName) {
        this['agency_name'] = agencyName;
        return this;
    };
    Object.defineProperty(IdentityAssumerole.prototype, "agencyName", {
        get: function () {
            return this['agency_name'];
        },
        set: function (agencyName) {
            this['agency_name'] = agencyName;
        },
        enumerable: false,
        configurable: true
    });
    IdentityAssumerole.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(IdentityAssumerole.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    IdentityAssumerole.prototype.withDomainName = function (domainName) {
        this['domain_name'] = domainName;
        return this;
    };
    Object.defineProperty(IdentityAssumerole.prototype, "domainName", {
        get: function () {
            return this['domain_name'];
        },
        set: function (domainName) {
            this['domain_name'] = domainName;
        },
        enumerable: false,
        configurable: true
    });
    IdentityAssumerole.prototype.withDurationSeconds = function (durationSeconds) {
        this['duration_seconds'] = durationSeconds;
        return this;
    };
    Object.defineProperty(IdentityAssumerole.prototype, "durationSeconds", {
        get: function () {
            return this['duration_seconds'];
        },
        set: function (durationSeconds) {
            this['duration_seconds'] = durationSeconds;
        },
        enumerable: false,
        configurable: true
    });
    IdentityAssumerole.prototype.withSessionUser = function (sessionUser) {
        this['session_user'] = sessionUser;
        return this;
    };
    Object.defineProperty(IdentityAssumerole.prototype, "sessionUser", {
        get: function () {
            return this['session_user'];
        },
        set: function (sessionUser) {
            this['session_user'] = sessionUser;
        },
        enumerable: false,
        configurable: true
    });
    return IdentityAssumerole;
}());
exports.IdentityAssumerole = IdentityAssumerole;


/***/ }),

/***/ 6971:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdentityToken = void 0;
var IdentityToken = /** @class */ (function () {
    function IdentityToken() {
    }
    IdentityToken.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    IdentityToken.prototype.withDurationSeconds = function (durationSeconds) {
        this['duration_seconds'] = durationSeconds;
        return this;
    };
    Object.defineProperty(IdentityToken.prototype, "durationSeconds", {
        get: function () {
            return this['duration_seconds'];
        },
        set: function (durationSeconds) {
            this['duration_seconds'] = durationSeconds;
        },
        enumerable: false,
        configurable: true
    });
    return IdentityToken;
}());
exports.IdentityToken = IdentityToken;


/***/ }),

/***/ 38580:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdentityproviderOption = void 0;
var IdentityproviderOption = /** @class */ (function () {
    function IdentityproviderOption() {
    }
    IdentityproviderOption.prototype.withSsoType = function (ssoType) {
        this['sso_type'] = ssoType;
        return this;
    };
    Object.defineProperty(IdentityproviderOption.prototype, "ssoType", {
        get: function () {
            return this['sso_type'];
        },
        set: function (ssoType) {
            this['sso_type'] = ssoType;
        },
        enumerable: false,
        configurable: true
    });
    IdentityproviderOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    IdentityproviderOption.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    return IdentityproviderOption;
}());
exports.IdentityproviderOption = IdentityproviderOption;


/***/ }),

/***/ 62938:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdentityprovidersLinks = void 0;
var IdentityprovidersLinks = /** @class */ (function () {
    function IdentityprovidersLinks(self, protocols) {
        this['self'] = self;
        this['protocols'] = protocols;
    }
    IdentityprovidersLinks.prototype.withSelf = function (self) {
        this['self'] = self;
        return this;
    };
    IdentityprovidersLinks.prototype.withProtocols = function (protocols) {
        this['protocols'] = protocols;
        return this;
    };
    return IdentityprovidersLinks;
}());
exports.IdentityprovidersLinks = IdentityprovidersLinks;


/***/ }),

/***/ 95262:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdentityprovidersResult = void 0;
var IdentityprovidersResult = /** @class */ (function () {
    function IdentityprovidersResult(ssoType, id, description, enabled, remoteIds, links) {
        this['sso_type'] = ssoType;
        this['id'] = id;
        this['description'] = description;
        this['enabled'] = enabled;
        this['remote_ids'] = remoteIds;
        this['links'] = links;
    }
    IdentityprovidersResult.prototype.withSsoType = function (ssoType) {
        this['sso_type'] = ssoType;
        return this;
    };
    Object.defineProperty(IdentityprovidersResult.prototype, "ssoType", {
        get: function () {
            return this['sso_type'];
        },
        set: function (ssoType) {
            this['sso_type'] = ssoType;
        },
        enumerable: false,
        configurable: true
    });
    IdentityprovidersResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    IdentityprovidersResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    IdentityprovidersResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    IdentityprovidersResult.prototype.withRemoteIds = function (remoteIds) {
        this['remote_ids'] = remoteIds;
        return this;
    };
    Object.defineProperty(IdentityprovidersResult.prototype, "remoteIds", {
        get: function () {
            return this['remote_ids'];
        },
        set: function (remoteIds) {
            this['remote_ids'] = remoteIds;
        },
        enumerable: false,
        configurable: true
    });
    IdentityprovidersResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return IdentityprovidersResult;
}());
exports.IdentityprovidersResult = IdentityprovidersResult;


/***/ }),

/***/ 4745:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdpIdInfo = void 0;
var IdpIdInfo = /** @class */ (function () {
    function IdpIdInfo(id) {
        this['id'] = id;
    }
    IdpIdInfo.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return IdpIdInfo;
}());
exports.IdpIdInfo = IdpIdInfo;


/***/ }),

/***/ 79051:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneAddUserToGroupRequest = void 0;
var KeystoneAddUserToGroupRequest = /** @class */ (function () {
    function KeystoneAddUserToGroupRequest(groupId, userId) {
        this['group_id'] = groupId;
        this['user_id'] = userId;
    }
    KeystoneAddUserToGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneAddUserToGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneAddUserToGroupRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(KeystoneAddUserToGroupRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneAddUserToGroupRequest;
}());
exports.KeystoneAddUserToGroupRequest = KeystoneAddUserToGroupRequest;


/***/ }),

/***/ 24713:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneAddUserToGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneAddUserToGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneAddUserToGroupResponse, _super);
    function KeystoneAddUserToGroupResponse() {
        return _super.call(this) || this;
    }
    return KeystoneAddUserToGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneAddUserToGroupResponse = KeystoneAddUserToGroupResponse;


/***/ }),

/***/ 5998:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneAssociateGroupWithDomainPermissionRequest = void 0;
var KeystoneAssociateGroupWithDomainPermissionRequest = /** @class */ (function () {
    function KeystoneAssociateGroupWithDomainPermissionRequest(domainId, groupId, roleId) {
        this['domain_id'] = domainId;
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    KeystoneAssociateGroupWithDomainPermissionRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneAssociateGroupWithDomainPermissionRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneAssociateGroupWithDomainPermissionRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneAssociateGroupWithDomainPermissionRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneAssociateGroupWithDomainPermissionRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(KeystoneAssociateGroupWithDomainPermissionRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneAssociateGroupWithDomainPermissionRequest;
}());
exports.KeystoneAssociateGroupWithDomainPermissionRequest = KeystoneAssociateGroupWithDomainPermissionRequest;


/***/ }),

/***/ 78292:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneAssociateGroupWithDomainPermissionResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneAssociateGroupWithDomainPermissionResponse = /** @class */ (function (_super) {
    __extends(KeystoneAssociateGroupWithDomainPermissionResponse, _super);
    function KeystoneAssociateGroupWithDomainPermissionResponse() {
        return _super.call(this) || this;
    }
    return KeystoneAssociateGroupWithDomainPermissionResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneAssociateGroupWithDomainPermissionResponse = KeystoneAssociateGroupWithDomainPermissionResponse;


/***/ }),

/***/ 46603:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneAssociateGroupWithProjectPermissionRequest = void 0;
var KeystoneAssociateGroupWithProjectPermissionRequest = /** @class */ (function () {
    function KeystoneAssociateGroupWithProjectPermissionRequest(groupId, roleId) {
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    KeystoneAssociateGroupWithProjectPermissionRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneAssociateGroupWithProjectPermissionRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneAssociateGroupWithProjectPermissionRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(KeystoneAssociateGroupWithProjectPermissionRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneAssociateGroupWithProjectPermissionRequest;
}());
exports.KeystoneAssociateGroupWithProjectPermissionRequest = KeystoneAssociateGroupWithProjectPermissionRequest;


/***/ }),

/***/ 62708:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneAssociateGroupWithProjectPermissionResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneAssociateGroupWithProjectPermissionResponse = /** @class */ (function (_super) {
    __extends(KeystoneAssociateGroupWithProjectPermissionResponse, _super);
    function KeystoneAssociateGroupWithProjectPermissionResponse() {
        return _super.call(this) || this;
    }
    return KeystoneAssociateGroupWithProjectPermissionResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneAssociateGroupWithProjectPermissionResponse = KeystoneAssociateGroupWithProjectPermissionResponse;


/***/ }),

/***/ 34270:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCheckDomainPermissionForGroupRequest = void 0;
var KeystoneCheckDomainPermissionForGroupRequest = /** @class */ (function () {
    function KeystoneCheckDomainPermissionForGroupRequest(domainId, groupId, roleId) {
        this['domain_id'] = domainId;
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    KeystoneCheckDomainPermissionForGroupRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneCheckDomainPermissionForGroupRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCheckDomainPermissionForGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneCheckDomainPermissionForGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCheckDomainPermissionForGroupRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(KeystoneCheckDomainPermissionForGroupRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCheckDomainPermissionForGroupRequest;
}());
exports.KeystoneCheckDomainPermissionForGroupRequest = KeystoneCheckDomainPermissionForGroupRequest;


/***/ }),

/***/ 22360:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCheckDomainPermissionForGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCheckDomainPermissionForGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneCheckDomainPermissionForGroupResponse, _super);
    function KeystoneCheckDomainPermissionForGroupResponse() {
        return _super.call(this) || this;
    }
    return KeystoneCheckDomainPermissionForGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCheckDomainPermissionForGroupResponse = KeystoneCheckDomainPermissionForGroupResponse;


/***/ }),

/***/ 4861:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCheckProjectPermissionForGroupRequest = void 0;
var KeystoneCheckProjectPermissionForGroupRequest = /** @class */ (function () {
    function KeystoneCheckProjectPermissionForGroupRequest(groupId, roleId) {
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    KeystoneCheckProjectPermissionForGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneCheckProjectPermissionForGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCheckProjectPermissionForGroupRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(KeystoneCheckProjectPermissionForGroupRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCheckProjectPermissionForGroupRequest;
}());
exports.KeystoneCheckProjectPermissionForGroupRequest = KeystoneCheckProjectPermissionForGroupRequest;


/***/ }),

/***/ 81650:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCheckProjectPermissionForGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCheckProjectPermissionForGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneCheckProjectPermissionForGroupResponse, _super);
    function KeystoneCheckProjectPermissionForGroupResponse() {
        return _super.call(this) || this;
    }
    return KeystoneCheckProjectPermissionForGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCheckProjectPermissionForGroupResponse = KeystoneCheckProjectPermissionForGroupResponse;


/***/ }),

/***/ 25761:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCheckUserInGroupRequest = void 0;
var KeystoneCheckUserInGroupRequest = /** @class */ (function () {
    function KeystoneCheckUserInGroupRequest(groupId, userId) {
        this['group_id'] = groupId;
        this['user_id'] = userId;
    }
    KeystoneCheckUserInGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneCheckUserInGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCheckUserInGroupRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(KeystoneCheckUserInGroupRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCheckUserInGroupRequest;
}());
exports.KeystoneCheckUserInGroupRequest = KeystoneCheckUserInGroupRequest;


/***/ }),

/***/ 15659:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCheckUserInGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCheckUserInGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneCheckUserInGroupResponse, _super);
    function KeystoneCheckUserInGroupResponse() {
        return _super.call(this) || this;
    }
    return KeystoneCheckUserInGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCheckUserInGroupResponse = KeystoneCheckUserInGroupResponse;


/***/ }),

/***/ 65967:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCheckroleForGroupRequest = void 0;
var KeystoneCheckroleForGroupRequest = /** @class */ (function () {
    function KeystoneCheckroleForGroupRequest(domainId, groupId, roleId) {
        this['domain_id'] = domainId;
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    KeystoneCheckroleForGroupRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneCheckroleForGroupRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCheckroleForGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneCheckroleForGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCheckroleForGroupRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(KeystoneCheckroleForGroupRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCheckroleForGroupRequest;
}());
exports.KeystoneCheckroleForGroupRequest = KeystoneCheckroleForGroupRequest;


/***/ }),

/***/ 38821:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCheckroleForGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCheckroleForGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneCheckroleForGroupResponse, _super);
    function KeystoneCheckroleForGroupResponse() {
        return _super.call(this) || this;
    }
    return KeystoneCheckroleForGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCheckroleForGroupResponse = KeystoneCheckroleForGroupResponse;


/***/ }),

/***/ 84896:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateAgencyTokenRequest = void 0;
var KeystoneCreateAgencyTokenRequest = /** @class */ (function () {
    function KeystoneCreateAgencyTokenRequest() {
    }
    KeystoneCreateAgencyTokenRequest.prototype.withNocatalog = function (nocatalog) {
        this['nocatalog'] = nocatalog;
        return this;
    };
    KeystoneCreateAgencyTokenRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateAgencyTokenRequest;
}());
exports.KeystoneCreateAgencyTokenRequest = KeystoneCreateAgencyTokenRequest;


/***/ }),

/***/ 80441:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateAgencyTokenRequestBody = void 0;
var KeystoneCreateAgencyTokenRequestBody = /** @class */ (function () {
    function KeystoneCreateAgencyTokenRequestBody(auth) {
        this['auth'] = auth;
    }
    KeystoneCreateAgencyTokenRequestBody.prototype.withAuth = function (auth) {
        this['auth'] = auth;
        return this;
    };
    return KeystoneCreateAgencyTokenRequestBody;
}());
exports.KeystoneCreateAgencyTokenRequestBody = KeystoneCreateAgencyTokenRequestBody;


/***/ }),

/***/ 96775:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateAgencyTokenResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateAgencyTokenResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateAgencyTokenResponse, _super);
    function KeystoneCreateAgencyTokenResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateAgencyTokenResponse.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    KeystoneCreateAgencyTokenResponse.prototype.withXSubjectToken = function (xSubjectToken) {
        this['X-Subject-Token'] = xSubjectToken;
        return this;
    };
    Object.defineProperty(KeystoneCreateAgencyTokenResponse.prototype, "xSubjectToken", {
        get: function () {
            return this['X-Subject-Token'];
        },
        set: function (xSubjectToken) {
            this['X-Subject-Token'] = xSubjectToken;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCreateAgencyTokenResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateAgencyTokenResponse = KeystoneCreateAgencyTokenResponse;


/***/ }),

/***/ 15828:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateGroupOption = void 0;
var KeystoneCreateGroupOption = /** @class */ (function () {
    function KeystoneCreateGroupOption(name) {
        this['name'] = name;
    }
    KeystoneCreateGroupOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneCreateGroupOption.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneCreateGroupOption.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCreateGroupOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return KeystoneCreateGroupOption;
}());
exports.KeystoneCreateGroupOption = KeystoneCreateGroupOption;


/***/ }),

/***/ 66568:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateGroupRequest = void 0;
var KeystoneCreateGroupRequest = /** @class */ (function () {
    function KeystoneCreateGroupRequest() {
    }
    KeystoneCreateGroupRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateGroupRequest;
}());
exports.KeystoneCreateGroupRequest = KeystoneCreateGroupRequest;


/***/ }),

/***/ 64045:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateGroupRequestBody = void 0;
var KeystoneCreateGroupRequestBody = /** @class */ (function () {
    function KeystoneCreateGroupRequestBody(group) {
        this['group'] = group;
    }
    KeystoneCreateGroupRequestBody.prototype.withGroup = function (group) {
        this['group'] = group;
        return this;
    };
    return KeystoneCreateGroupRequestBody;
}());
exports.KeystoneCreateGroupRequestBody = KeystoneCreateGroupRequestBody;


/***/ }),

/***/ 1037:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateGroupResponse, _super);
    function KeystoneCreateGroupResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateGroupResponse.prototype.withGroup = function (group) {
        this['group'] = group;
        return this;
    };
    return KeystoneCreateGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateGroupResponse = KeystoneCreateGroupResponse;


/***/ }),

/***/ 86032:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateIdentityProviderRequest = void 0;
var KeystoneCreateIdentityProviderRequest = /** @class */ (function () {
    function KeystoneCreateIdentityProviderRequest(contentType, id) {
        this['Content-Type'] = contentType;
        this['id'] = id;
    }
    KeystoneCreateIdentityProviderRequest.prototype.withContentType = function (contentType) {
        this['Content-Type'] = contentType;
        return this;
    };
    Object.defineProperty(KeystoneCreateIdentityProviderRequest.prototype, "contentType", {
        get: function () {
            return this['Content-Type'];
        },
        set: function (contentType) {
            this['Content-Type'] = contentType;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCreateIdentityProviderRequest.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneCreateIdentityProviderRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateIdentityProviderRequest;
}());
exports.KeystoneCreateIdentityProviderRequest = KeystoneCreateIdentityProviderRequest;


/***/ }),

/***/ 49087:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateIdentityProviderRequestBody = void 0;
var KeystoneCreateIdentityProviderRequestBody = /** @class */ (function () {
    function KeystoneCreateIdentityProviderRequestBody(identityProvider) {
        this['identity_provider'] = identityProvider;
    }
    KeystoneCreateIdentityProviderRequestBody.prototype.withIdentityProvider = function (identityProvider) {
        this['identity_provider'] = identityProvider;
        return this;
    };
    Object.defineProperty(KeystoneCreateIdentityProviderRequestBody.prototype, "identityProvider", {
        get: function () {
            return this['identity_provider'];
        },
        set: function (identityProvider) {
            this['identity_provider'] = identityProvider;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCreateIdentityProviderRequestBody;
}());
exports.KeystoneCreateIdentityProviderRequestBody = KeystoneCreateIdentityProviderRequestBody;


/***/ }),

/***/ 92104:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateIdentityProviderResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateIdentityProviderResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateIdentityProviderResponse, _super);
    function KeystoneCreateIdentityProviderResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateIdentityProviderResponse.prototype.withIdentityProvider = function (identityProvider) {
        this['identity_provider'] = identityProvider;
        return this;
    };
    Object.defineProperty(KeystoneCreateIdentityProviderResponse.prototype, "identityProvider", {
        get: function () {
            return this['identity_provider'];
        },
        set: function (identityProvider) {
            this['identity_provider'] = identityProvider;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCreateIdentityProviderResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateIdentityProviderResponse = KeystoneCreateIdentityProviderResponse;


/***/ }),

/***/ 59376:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateMappingRequest = void 0;
var KeystoneCreateMappingRequest = /** @class */ (function () {
    function KeystoneCreateMappingRequest(id) {
        this['id'] = id;
    }
    KeystoneCreateMappingRequest.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneCreateMappingRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateMappingRequest;
}());
exports.KeystoneCreateMappingRequest = KeystoneCreateMappingRequest;


/***/ }),

/***/ 94741:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateMappingRequestBody = void 0;
var KeystoneCreateMappingRequestBody = /** @class */ (function () {
    function KeystoneCreateMappingRequestBody(mapping) {
        this['mapping'] = mapping;
    }
    KeystoneCreateMappingRequestBody.prototype.withMapping = function (mapping) {
        this['mapping'] = mapping;
        return this;
    };
    return KeystoneCreateMappingRequestBody;
}());
exports.KeystoneCreateMappingRequestBody = KeystoneCreateMappingRequestBody;


/***/ }),

/***/ 69442:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateMappingResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateMappingResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateMappingResponse, _super);
    function KeystoneCreateMappingResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateMappingResponse.prototype.withMapping = function (mapping) {
        this['mapping'] = mapping;
        return this;
    };
    return KeystoneCreateMappingResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateMappingResponse = KeystoneCreateMappingResponse;


/***/ }),

/***/ 59016:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateProjectOption = void 0;
var KeystoneCreateProjectOption = /** @class */ (function () {
    function KeystoneCreateProjectOption(name, parentId) {
        this['name'] = name;
        this['parent_id'] = parentId;
    }
    KeystoneCreateProjectOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneCreateProjectOption.prototype.withParentId = function (parentId) {
        this['parent_id'] = parentId;
        return this;
    };
    Object.defineProperty(KeystoneCreateProjectOption.prototype, "parentId", {
        get: function () {
            return this['parent_id'];
        },
        set: function (parentId) {
            this['parent_id'] = parentId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCreateProjectOption.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneCreateProjectOption.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCreateProjectOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return KeystoneCreateProjectOption;
}());
exports.KeystoneCreateProjectOption = KeystoneCreateProjectOption;


/***/ }),

/***/ 5507:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateProjectRequest = void 0;
var KeystoneCreateProjectRequest = /** @class */ (function () {
    function KeystoneCreateProjectRequest() {
    }
    KeystoneCreateProjectRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateProjectRequest;
}());
exports.KeystoneCreateProjectRequest = KeystoneCreateProjectRequest;


/***/ }),

/***/ 98222:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateProjectRequestBody = void 0;
var KeystoneCreateProjectRequestBody = /** @class */ (function () {
    function KeystoneCreateProjectRequestBody(project) {
        this['project'] = project;
    }
    KeystoneCreateProjectRequestBody.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return KeystoneCreateProjectRequestBody;
}());
exports.KeystoneCreateProjectRequestBody = KeystoneCreateProjectRequestBody;


/***/ }),

/***/ 91627:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateProjectResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateProjectResponse, _super);
    function KeystoneCreateProjectResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateProjectResponse.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return KeystoneCreateProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateProjectResponse = KeystoneCreateProjectResponse;


/***/ }),

/***/ 181:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateProtocolRequest = void 0;
var KeystoneCreateProtocolRequest = /** @class */ (function () {
    function KeystoneCreateProtocolRequest(idpId, protocolId) {
        this['idp_id'] = idpId;
        this['protocol_id'] = protocolId;
    }
    KeystoneCreateProtocolRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(KeystoneCreateProtocolRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCreateProtocolRequest.prototype.withProtocolId = function (protocolId) {
        this['protocol_id'] = protocolId;
        return this;
    };
    Object.defineProperty(KeystoneCreateProtocolRequest.prototype, "protocolId", {
        get: function () {
            return this['protocol_id'];
        },
        set: function (protocolId) {
            this['protocol_id'] = protocolId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCreateProtocolRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateProtocolRequest;
}());
exports.KeystoneCreateProtocolRequest = KeystoneCreateProtocolRequest;


/***/ }),

/***/ 54910:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateProtocolRequestBody = void 0;
var KeystoneCreateProtocolRequestBody = /** @class */ (function () {
    function KeystoneCreateProtocolRequestBody(protocol) {
        this['protocol'] = protocol;
    }
    KeystoneCreateProtocolRequestBody.prototype.withProtocol = function (protocol) {
        this['protocol'] = protocol;
        return this;
    };
    return KeystoneCreateProtocolRequestBody;
}());
exports.KeystoneCreateProtocolRequestBody = KeystoneCreateProtocolRequestBody;


/***/ }),

/***/ 97116:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateProtocolResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateProtocolResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateProtocolResponse, _super);
    function KeystoneCreateProtocolResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateProtocolResponse.prototype.withProtocol = function (protocol) {
        this['protocol'] = protocol;
        return this;
    };
    return KeystoneCreateProtocolResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateProtocolResponse = KeystoneCreateProtocolResponse;


/***/ }),

/***/ 19282:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateScopedTokenRequest = void 0;
var KeystoneCreateScopedTokenRequest = /** @class */ (function () {
    function KeystoneCreateScopedTokenRequest() {
    }
    KeystoneCreateScopedTokenRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateScopedTokenRequest;
}());
exports.KeystoneCreateScopedTokenRequest = KeystoneCreateScopedTokenRequest;


/***/ }),

/***/ 38074:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateScopedTokenRequestBody = void 0;
var KeystoneCreateScopedTokenRequestBody = /** @class */ (function () {
    function KeystoneCreateScopedTokenRequestBody(auth) {
        this['auth'] = auth;
    }
    KeystoneCreateScopedTokenRequestBody.prototype.withAuth = function (auth) {
        this['auth'] = auth;
        return this;
    };
    return KeystoneCreateScopedTokenRequestBody;
}());
exports.KeystoneCreateScopedTokenRequestBody = KeystoneCreateScopedTokenRequestBody;


/***/ }),

/***/ 54257:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateScopedTokenResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateScopedTokenResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateScopedTokenResponse, _super);
    function KeystoneCreateScopedTokenResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateScopedTokenResponse.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    KeystoneCreateScopedTokenResponse.prototype.withXSubjectToken = function (xSubjectToken) {
        this['X-Subject-Token'] = xSubjectToken;
        return this;
    };
    Object.defineProperty(KeystoneCreateScopedTokenResponse.prototype, "xSubjectToken", {
        get: function () {
            return this['X-Subject-Token'];
        },
        set: function (xSubjectToken) {
            this['X-Subject-Token'] = xSubjectToken;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCreateScopedTokenResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateScopedTokenResponse = KeystoneCreateScopedTokenResponse;


/***/ }),

/***/ 60870:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserOption = void 0;
var KeystoneCreateUserOption = /** @class */ (function () {
    function KeystoneCreateUserOption(name) {
        this['name'] = name;
    }
    KeystoneCreateUserOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneCreateUserOption.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneCreateUserOption.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCreateUserOption.prototype.withPassword = function (password) {
        this['password'] = password;
        return this;
    };
    KeystoneCreateUserOption.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    KeystoneCreateUserOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return KeystoneCreateUserOption;
}());
exports.KeystoneCreateUserOption = KeystoneCreateUserOption;


/***/ }),

/***/ 76868:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserRequest = void 0;
var KeystoneCreateUserRequest = /** @class */ (function () {
    function KeystoneCreateUserRequest() {
    }
    KeystoneCreateUserRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateUserRequest;
}());
exports.KeystoneCreateUserRequest = KeystoneCreateUserRequest;


/***/ }),

/***/ 48842:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserRequestBody = void 0;
var KeystoneCreateUserRequestBody = /** @class */ (function () {
    function KeystoneCreateUserRequestBody(user) {
        this['user'] = user;
    }
    KeystoneCreateUserRequestBody.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return KeystoneCreateUserRequestBody;
}());
exports.KeystoneCreateUserRequestBody = KeystoneCreateUserRequestBody;


/***/ }),

/***/ 20098:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateUserResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateUserResponse, _super);
    function KeystoneCreateUserResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateUserResponse.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return KeystoneCreateUserResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateUserResponse = KeystoneCreateUserResponse;


/***/ }),

/***/ 71777:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserResult = void 0;
var KeystoneCreateUserResult = /** @class */ (function () {
    function KeystoneCreateUserResult(domainId, name, passwordExpiresAt, links, id, enabled) {
        this['domain_id'] = domainId;
        this['name'] = name;
        this['password_expires_at'] = passwordExpiresAt;
        this['links'] = links;
        this['id'] = id;
        this['enabled'] = enabled;
    }
    KeystoneCreateUserResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneCreateUserResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCreateUserResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneCreateUserResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneCreateUserResult.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(KeystoneCreateUserResult.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneCreateUserResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneCreateUserResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneCreateUserResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    return KeystoneCreateUserResult;
}());
exports.KeystoneCreateUserResult = KeystoneCreateUserResult;


/***/ }),

/***/ 33670:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserTokenByPasswordAndMfaRequest = void 0;
var KeystoneCreateUserTokenByPasswordAndMfaRequest = /** @class */ (function () {
    function KeystoneCreateUserTokenByPasswordAndMfaRequest() {
    }
    KeystoneCreateUserTokenByPasswordAndMfaRequest.prototype.withNocatalog = function (nocatalog) {
        this['nocatalog'] = nocatalog;
        return this;
    };
    KeystoneCreateUserTokenByPasswordAndMfaRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateUserTokenByPasswordAndMfaRequest;
}());
exports.KeystoneCreateUserTokenByPasswordAndMfaRequest = KeystoneCreateUserTokenByPasswordAndMfaRequest;


/***/ }),

/***/ 12621:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserTokenByPasswordAndMfaRequestBody = void 0;
var KeystoneCreateUserTokenByPasswordAndMfaRequestBody = /** @class */ (function () {
    function KeystoneCreateUserTokenByPasswordAndMfaRequestBody(auth) {
        this['auth'] = auth;
    }
    KeystoneCreateUserTokenByPasswordAndMfaRequestBody.prototype.withAuth = function (auth) {
        this['auth'] = auth;
        return this;
    };
    return KeystoneCreateUserTokenByPasswordAndMfaRequestBody;
}());
exports.KeystoneCreateUserTokenByPasswordAndMfaRequestBody = KeystoneCreateUserTokenByPasswordAndMfaRequestBody;


/***/ }),

/***/ 50780:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserTokenByPasswordAndMfaResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateUserTokenByPasswordAndMfaResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateUserTokenByPasswordAndMfaResponse, _super);
    function KeystoneCreateUserTokenByPasswordAndMfaResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateUserTokenByPasswordAndMfaResponse.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    KeystoneCreateUserTokenByPasswordAndMfaResponse.prototype.withXSubjectToken = function (xSubjectToken) {
        this['X-Subject-Token'] = xSubjectToken;
        return this;
    };
    Object.defineProperty(KeystoneCreateUserTokenByPasswordAndMfaResponse.prototype, "xSubjectToken", {
        get: function () {
            return this['X-Subject-Token'];
        },
        set: function (xSubjectToken) {
            this['X-Subject-Token'] = xSubjectToken;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCreateUserTokenByPasswordAndMfaResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateUserTokenByPasswordAndMfaResponse = KeystoneCreateUserTokenByPasswordAndMfaResponse;


/***/ }),

/***/ 4892:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserTokenByPasswordRequest = void 0;
var KeystoneCreateUserTokenByPasswordRequest = /** @class */ (function () {
    function KeystoneCreateUserTokenByPasswordRequest() {
    }
    KeystoneCreateUserTokenByPasswordRequest.prototype.withNocatalog = function (nocatalog) {
        this['nocatalog'] = nocatalog;
        return this;
    };
    KeystoneCreateUserTokenByPasswordRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneCreateUserTokenByPasswordRequest;
}());
exports.KeystoneCreateUserTokenByPasswordRequest = KeystoneCreateUserTokenByPasswordRequest;


/***/ }),

/***/ 82482:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserTokenByPasswordRequestBody = void 0;
var KeystoneCreateUserTokenByPasswordRequestBody = /** @class */ (function () {
    function KeystoneCreateUserTokenByPasswordRequestBody(auth) {
        this['auth'] = auth;
    }
    KeystoneCreateUserTokenByPasswordRequestBody.prototype.withAuth = function (auth) {
        this['auth'] = auth;
        return this;
    };
    return KeystoneCreateUserTokenByPasswordRequestBody;
}());
exports.KeystoneCreateUserTokenByPasswordRequestBody = KeystoneCreateUserTokenByPasswordRequestBody;


/***/ }),

/***/ 77557:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneCreateUserTokenByPasswordResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneCreateUserTokenByPasswordResponse = /** @class */ (function (_super) {
    __extends(KeystoneCreateUserTokenByPasswordResponse, _super);
    function KeystoneCreateUserTokenByPasswordResponse() {
        return _super.call(this) || this;
    }
    KeystoneCreateUserTokenByPasswordResponse.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    KeystoneCreateUserTokenByPasswordResponse.prototype.withXSubjectToken = function (xSubjectToken) {
        this['X-Subject-Token'] = xSubjectToken;
        return this;
    };
    Object.defineProperty(KeystoneCreateUserTokenByPasswordResponse.prototype, "xSubjectToken", {
        get: function () {
            return this['X-Subject-Token'];
        },
        set: function (xSubjectToken) {
            this['X-Subject-Token'] = xSubjectToken;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneCreateUserTokenByPasswordResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneCreateUserTokenByPasswordResponse = KeystoneCreateUserTokenByPasswordResponse;


/***/ }),

/***/ 20274:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteGroupRequest = void 0;
var KeystoneDeleteGroupRequest = /** @class */ (function () {
    function KeystoneDeleteGroupRequest(groupId) {
        this['group_id'] = groupId;
    }
    KeystoneDeleteGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneDeleteGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneDeleteGroupRequest;
}());
exports.KeystoneDeleteGroupRequest = KeystoneDeleteGroupRequest;


/***/ }),

/***/ 41463:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneDeleteGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneDeleteGroupResponse, _super);
    function KeystoneDeleteGroupResponse() {
        return _super.call(this) || this;
    }
    return KeystoneDeleteGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneDeleteGroupResponse = KeystoneDeleteGroupResponse;


/***/ }),

/***/ 23611:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteIdentityProviderRequest = void 0;
var KeystoneDeleteIdentityProviderRequest = /** @class */ (function () {
    function KeystoneDeleteIdentityProviderRequest(id) {
        this['id'] = id;
    }
    KeystoneDeleteIdentityProviderRequest.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return KeystoneDeleteIdentityProviderRequest;
}());
exports.KeystoneDeleteIdentityProviderRequest = KeystoneDeleteIdentityProviderRequest;


/***/ }),

/***/ 15394:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteIdentityProviderResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneDeleteIdentityProviderResponse = /** @class */ (function (_super) {
    __extends(KeystoneDeleteIdentityProviderResponse, _super);
    function KeystoneDeleteIdentityProviderResponse() {
        return _super.call(this) || this;
    }
    return KeystoneDeleteIdentityProviderResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneDeleteIdentityProviderResponse = KeystoneDeleteIdentityProviderResponse;


/***/ }),

/***/ 21312:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteMappingRequest = void 0;
var KeystoneDeleteMappingRequest = /** @class */ (function () {
    function KeystoneDeleteMappingRequest(id) {
        this['id'] = id;
    }
    KeystoneDeleteMappingRequest.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return KeystoneDeleteMappingRequest;
}());
exports.KeystoneDeleteMappingRequest = KeystoneDeleteMappingRequest;


/***/ }),

/***/ 10960:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteMappingResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneDeleteMappingResponse = /** @class */ (function (_super) {
    __extends(KeystoneDeleteMappingResponse, _super);
    function KeystoneDeleteMappingResponse() {
        return _super.call(this) || this;
    }
    return KeystoneDeleteMappingResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneDeleteMappingResponse = KeystoneDeleteMappingResponse;


/***/ }),

/***/ 72368:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteProtocolRequest = void 0;
var KeystoneDeleteProtocolRequest = /** @class */ (function () {
    function KeystoneDeleteProtocolRequest(idpId, protocolId) {
        this['idp_id'] = idpId;
        this['protocol_id'] = protocolId;
    }
    KeystoneDeleteProtocolRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(KeystoneDeleteProtocolRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneDeleteProtocolRequest.prototype.withProtocolId = function (protocolId) {
        this['protocol_id'] = protocolId;
        return this;
    };
    Object.defineProperty(KeystoneDeleteProtocolRequest.prototype, "protocolId", {
        get: function () {
            return this['protocol_id'];
        },
        set: function (protocolId) {
            this['protocol_id'] = protocolId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneDeleteProtocolRequest;
}());
exports.KeystoneDeleteProtocolRequest = KeystoneDeleteProtocolRequest;


/***/ }),

/***/ 28973:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteProtocolResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneDeleteProtocolResponse = /** @class */ (function (_super) {
    __extends(KeystoneDeleteProtocolResponse, _super);
    function KeystoneDeleteProtocolResponse() {
        return _super.call(this) || this;
    }
    return KeystoneDeleteProtocolResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneDeleteProtocolResponse = KeystoneDeleteProtocolResponse;


/***/ }),

/***/ 66863:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteUserRequest = void 0;
var KeystoneDeleteUserRequest = /** @class */ (function () {
    function KeystoneDeleteUserRequest(userId) {
        this['user_id'] = userId;
    }
    KeystoneDeleteUserRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(KeystoneDeleteUserRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneDeleteUserRequest;
}());
exports.KeystoneDeleteUserRequest = KeystoneDeleteUserRequest;


/***/ }),

/***/ 58007:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneDeleteUserResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneDeleteUserResponse = /** @class */ (function (_super) {
    __extends(KeystoneDeleteUserResponse, _super);
    function KeystoneDeleteUserResponse() {
        return _super.call(this) || this;
    }
    return KeystoneDeleteUserResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneDeleteUserResponse = KeystoneDeleteUserResponse;


/***/ }),

/***/ 2412:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneGroupResult = void 0;
var KeystoneGroupResult = /** @class */ (function () {
    function KeystoneGroupResult(description, id, domainId, name, links, createTime) {
        this['description'] = description;
        this['id'] = id;
        this['domain_id'] = domainId;
        this['name'] = name;
        this['links'] = links;
        this['create_time'] = createTime;
    }
    KeystoneGroupResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneGroupResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneGroupResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneGroupResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneGroupResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneGroupResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneGroupResult.prototype.withCreateTime = function (createTime) {
        this['create_time'] = createTime;
        return this;
    };
    Object.defineProperty(KeystoneGroupResult.prototype, "createTime", {
        get: function () {
            return this['create_time'];
        },
        set: function (createTime) {
            this['create_time'] = createTime;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneGroupResult;
}());
exports.KeystoneGroupResult = KeystoneGroupResult;


/***/ }),

/***/ 51642:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneGroupResultWithLinksSelf = void 0;
var KeystoneGroupResultWithLinksSelf = /** @class */ (function () {
    function KeystoneGroupResultWithLinksSelf(description, id, domainId, name, links, createTime) {
        this['description'] = description;
        this['id'] = id;
        this['domain_id'] = domainId;
        this['name'] = name;
        this['links'] = links;
        this['create_time'] = createTime;
    }
    KeystoneGroupResultWithLinksSelf.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneGroupResultWithLinksSelf.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneGroupResultWithLinksSelf.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneGroupResultWithLinksSelf.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneGroupResultWithLinksSelf.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneGroupResultWithLinksSelf.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneGroupResultWithLinksSelf.prototype.withCreateTime = function (createTime) {
        this['create_time'] = createTime;
        return this;
    };
    Object.defineProperty(KeystoneGroupResultWithLinksSelf.prototype, "createTime", {
        get: function () {
            return this['create_time'];
        },
        set: function (createTime) {
            this['create_time'] = createTime;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneGroupResultWithLinksSelf;
}());
exports.KeystoneGroupResultWithLinksSelf = KeystoneGroupResultWithLinksSelf;


/***/ }),

/***/ 80740:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListAllProjectPermissionsForGroupRequest = void 0;
var KeystoneListAllProjectPermissionsForGroupRequest = /** @class */ (function () {
    function KeystoneListAllProjectPermissionsForGroupRequest(domainId, groupId) {
        this['domain_id'] = domainId;
        this['group_id'] = groupId;
    }
    KeystoneListAllProjectPermissionsForGroupRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneListAllProjectPermissionsForGroupRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListAllProjectPermissionsForGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneListAllProjectPermissionsForGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListAllProjectPermissionsForGroupRequest;
}());
exports.KeystoneListAllProjectPermissionsForGroupRequest = KeystoneListAllProjectPermissionsForGroupRequest;


/***/ }),

/***/ 28666:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListAllProjectPermissionsForGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListAllProjectPermissionsForGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneListAllProjectPermissionsForGroupResponse, _super);
    function KeystoneListAllProjectPermissionsForGroupResponse() {
        return _super.call(this) || this;
    }
    KeystoneListAllProjectPermissionsForGroupResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListAllProjectPermissionsForGroupResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    KeystoneListAllProjectPermissionsForGroupResponse.prototype.withTotalNumber = function (totalNumber) {
        this['total_number'] = totalNumber;
        return this;
    };
    Object.defineProperty(KeystoneListAllProjectPermissionsForGroupResponse.prototype, "totalNumber", {
        get: function () {
            return this['total_number'];
        },
        set: function (totalNumber) {
            this['total_number'] = totalNumber;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListAllProjectPermissionsForGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListAllProjectPermissionsForGroupResponse = KeystoneListAllProjectPermissionsForGroupResponse;


/***/ }),

/***/ 28740:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListAuthDomainsRequest = void 0;
var KeystoneListAuthDomainsRequest = /** @class */ (function () {
    function KeystoneListAuthDomainsRequest() {
    }
    return KeystoneListAuthDomainsRequest;
}());
exports.KeystoneListAuthDomainsRequest = KeystoneListAuthDomainsRequest;


/***/ }),

/***/ 20049:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListAuthDomainsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListAuthDomainsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListAuthDomainsResponse, _super);
    function KeystoneListAuthDomainsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListAuthDomainsResponse.prototype.withDomains = function (domains) {
        this['domains'] = domains;
        return this;
    };
    KeystoneListAuthDomainsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return KeystoneListAuthDomainsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListAuthDomainsResponse = KeystoneListAuthDomainsResponse;


/***/ }),

/***/ 96961:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListAuthProjectsRequest = void 0;
var KeystoneListAuthProjectsRequest = /** @class */ (function () {
    function KeystoneListAuthProjectsRequest() {
    }
    return KeystoneListAuthProjectsRequest;
}());
exports.KeystoneListAuthProjectsRequest = KeystoneListAuthProjectsRequest;


/***/ }),

/***/ 18719:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListAuthProjectsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListAuthProjectsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListAuthProjectsResponse, _super);
    function KeystoneListAuthProjectsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListAuthProjectsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListAuthProjectsResponse.prototype.withProjects = function (projects) {
        this['projects'] = projects;
        return this;
    };
    return KeystoneListAuthProjectsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListAuthProjectsResponse = KeystoneListAuthProjectsResponse;


/***/ }),

/***/ 95788:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListDomainPermissionsForGroupRequest = void 0;
var KeystoneListDomainPermissionsForGroupRequest = /** @class */ (function () {
    function KeystoneListDomainPermissionsForGroupRequest(domainId, groupId) {
        this['domain_id'] = domainId;
        this['group_id'] = groupId;
    }
    KeystoneListDomainPermissionsForGroupRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneListDomainPermissionsForGroupRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListDomainPermissionsForGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneListDomainPermissionsForGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListDomainPermissionsForGroupRequest;
}());
exports.KeystoneListDomainPermissionsForGroupRequest = KeystoneListDomainPermissionsForGroupRequest;


/***/ }),

/***/ 56932:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListDomainPermissionsForGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListDomainPermissionsForGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneListDomainPermissionsForGroupResponse, _super);
    function KeystoneListDomainPermissionsForGroupResponse() {
        return _super.call(this) || this;
    }
    KeystoneListDomainPermissionsForGroupResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListDomainPermissionsForGroupResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    return KeystoneListDomainPermissionsForGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListDomainPermissionsForGroupResponse = KeystoneListDomainPermissionsForGroupResponse;


/***/ }),

/***/ 37441:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListEndpointsRequestInterfaceEnum = exports.KeystoneListEndpointsRequest = void 0;
var KeystoneListEndpointsRequest = /** @class */ (function () {
    function KeystoneListEndpointsRequest() {
    }
    KeystoneListEndpointsRequest.prototype.withInterface = function (_interface) {
        this['interface'] = _interface;
        return this;
    };
    Object.defineProperty(KeystoneListEndpointsRequest.prototype, "_interface", {
        get: function () {
            return this['interface'];
        },
        set: function (_interface) {
            this['interface'] = _interface;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListEndpointsRequest.prototype.withServiceId = function (serviceId) {
        this['service_id'] = serviceId;
        return this;
    };
    Object.defineProperty(KeystoneListEndpointsRequest.prototype, "serviceId", {
        get: function () {
            return this['service_id'];
        },
        set: function (serviceId) {
            this['service_id'] = serviceId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListEndpointsRequest;
}());
exports.KeystoneListEndpointsRequest = KeystoneListEndpointsRequest;
/**
    * @export
    * @enum {string}
    */
var KeystoneListEndpointsRequestInterfaceEnum;
(function (KeystoneListEndpointsRequestInterfaceEnum) {
    KeystoneListEndpointsRequestInterfaceEnum["PUBLIC"] = "public";
    KeystoneListEndpointsRequestInterfaceEnum["INTERNAL"] = "internal";
    KeystoneListEndpointsRequestInterfaceEnum["ADMIN"] = "admin";
})(KeystoneListEndpointsRequestInterfaceEnum = exports.KeystoneListEndpointsRequestInterfaceEnum || (exports.KeystoneListEndpointsRequestInterfaceEnum = {}));


/***/ }),

/***/ 33922:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListEndpointsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListEndpointsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListEndpointsResponse, _super);
    function KeystoneListEndpointsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListEndpointsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListEndpointsResponse.prototype.withEndpoints = function (endpoints) {
        this['endpoints'] = endpoints;
        return this;
    };
    return KeystoneListEndpointsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListEndpointsResponse = KeystoneListEndpointsResponse;


/***/ }),

/***/ 52384:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListFederationDomainsRequest = void 0;
var KeystoneListFederationDomainsRequest = /** @class */ (function () {
    function KeystoneListFederationDomainsRequest() {
    }
    return KeystoneListFederationDomainsRequest;
}());
exports.KeystoneListFederationDomainsRequest = KeystoneListFederationDomainsRequest;


/***/ }),

/***/ 35649:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListFederationDomainsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListFederationDomainsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListFederationDomainsResponse, _super);
    function KeystoneListFederationDomainsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListFederationDomainsResponse.prototype.withDomains = function (domains) {
        this['domains'] = domains;
        return this;
    };
    KeystoneListFederationDomainsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return KeystoneListFederationDomainsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListFederationDomainsResponse = KeystoneListFederationDomainsResponse;


/***/ }),

/***/ 59213:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListGroupsForUserRequest = void 0;
var KeystoneListGroupsForUserRequest = /** @class */ (function () {
    function KeystoneListGroupsForUserRequest(userId) {
        this['user_id'] = userId;
    }
    KeystoneListGroupsForUserRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(KeystoneListGroupsForUserRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListGroupsForUserRequest;
}());
exports.KeystoneListGroupsForUserRequest = KeystoneListGroupsForUserRequest;


/***/ }),

/***/ 94579:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListGroupsForUserResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListGroupsForUserResponse = /** @class */ (function (_super) {
    __extends(KeystoneListGroupsForUserResponse, _super);
    function KeystoneListGroupsForUserResponse() {
        return _super.call(this) || this;
    }
    KeystoneListGroupsForUserResponse.prototype.withGroups = function (groups) {
        this['groups'] = groups;
        return this;
    };
    KeystoneListGroupsForUserResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return KeystoneListGroupsForUserResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListGroupsForUserResponse = KeystoneListGroupsForUserResponse;


/***/ }),

/***/ 63082:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListGroupsRequest = void 0;
var KeystoneListGroupsRequest = /** @class */ (function () {
    function KeystoneListGroupsRequest() {
    }
    KeystoneListGroupsRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneListGroupsRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListGroupsRequest.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return KeystoneListGroupsRequest;
}());
exports.KeystoneListGroupsRequest = KeystoneListGroupsRequest;


/***/ }),

/***/ 14094:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListGroupsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListGroupsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListGroupsResponse, _super);
    function KeystoneListGroupsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListGroupsResponse.prototype.withGroups = function (groups) {
        this['groups'] = groups;
        return this;
    };
    KeystoneListGroupsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return KeystoneListGroupsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListGroupsResponse = KeystoneListGroupsResponse;


/***/ }),

/***/ 83373:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListIdentityProvidersRequest = void 0;
var KeystoneListIdentityProvidersRequest = /** @class */ (function () {
    function KeystoneListIdentityProvidersRequest() {
    }
    return KeystoneListIdentityProvidersRequest;
}());
exports.KeystoneListIdentityProvidersRequest = KeystoneListIdentityProvidersRequest;


/***/ }),

/***/ 49631:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListIdentityProvidersResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListIdentityProvidersResponse = /** @class */ (function (_super) {
    __extends(KeystoneListIdentityProvidersResponse, _super);
    function KeystoneListIdentityProvidersResponse() {
        return _super.call(this) || this;
    }
    KeystoneListIdentityProvidersResponse.prototype.withIdentityProviders = function (identityProviders) {
        this['identity_providers'] = identityProviders;
        return this;
    };
    Object.defineProperty(KeystoneListIdentityProvidersResponse.prototype, "identityProviders", {
        get: function () {
            return this['identity_providers'];
        },
        set: function (identityProviders) {
            this['identity_providers'] = identityProviders;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListIdentityProvidersResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return KeystoneListIdentityProvidersResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListIdentityProvidersResponse = KeystoneListIdentityProvidersResponse;


/***/ }),

/***/ 26360:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListMappingsRequest = void 0;
var KeystoneListMappingsRequest = /** @class */ (function () {
    function KeystoneListMappingsRequest() {
    }
    return KeystoneListMappingsRequest;
}());
exports.KeystoneListMappingsRequest = KeystoneListMappingsRequest;


/***/ }),

/***/ 28586:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListMappingsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListMappingsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListMappingsResponse, _super);
    function KeystoneListMappingsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListMappingsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListMappingsResponse.prototype.withMappings = function (mappings) {
        this['mappings'] = mappings;
        return this;
    };
    return KeystoneListMappingsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListMappingsResponse = KeystoneListMappingsResponse;


/***/ }),

/***/ 25862:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListPermissionsRequest = void 0;
var KeystoneListPermissionsRequest = /** @class */ (function () {
    function KeystoneListPermissionsRequest() {
    }
    KeystoneListPermissionsRequest.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneListPermissionsRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneListPermissionsRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListPermissionsRequest.prototype.withPage = function (page) {
        this['page'] = page;
        return this;
    };
    KeystoneListPermissionsRequest.prototype.withPerPage = function (perPage) {
        this['per_page'] = perPage;
        return this;
    };
    Object.defineProperty(KeystoneListPermissionsRequest.prototype, "perPage", {
        get: function () {
            return this['per_page'];
        },
        set: function (perPage) {
            this['per_page'] = perPage;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListPermissionsRequest.prototype.withPermissionType = function (permissionType) {
        this['permission_type'] = permissionType;
        return this;
    };
    Object.defineProperty(KeystoneListPermissionsRequest.prototype, "permissionType", {
        get: function () {
            return this['permission_type'];
        },
        set: function (permissionType) {
            this['permission_type'] = permissionType;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListPermissionsRequest.prototype.withDisplayName = function (displayName) {
        this['display_name'] = displayName;
        return this;
    };
    Object.defineProperty(KeystoneListPermissionsRequest.prototype, "displayName", {
        get: function () {
            return this['display_name'];
        },
        set: function (displayName) {
            this['display_name'] = displayName;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListPermissionsRequest.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    KeystoneListPermissionsRequest.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    return KeystoneListPermissionsRequest;
}());
exports.KeystoneListPermissionsRequest = KeystoneListPermissionsRequest;


/***/ }),

/***/ 45466:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListPermissionsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListPermissionsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListPermissionsResponse, _super);
    function KeystoneListPermissionsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListPermissionsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListPermissionsResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    KeystoneListPermissionsResponse.prototype.withTotalNumber = function (totalNumber) {
        this['total_number'] = totalNumber;
        return this;
    };
    Object.defineProperty(KeystoneListPermissionsResponse.prototype, "totalNumber", {
        get: function () {
            return this['total_number'];
        },
        set: function (totalNumber) {
            this['total_number'] = totalNumber;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListPermissionsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListPermissionsResponse = KeystoneListPermissionsResponse;


/***/ }),

/***/ 96846:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListProjectPermissionsForGroupRequest = void 0;
var KeystoneListProjectPermissionsForGroupRequest = /** @class */ (function () {
    function KeystoneListProjectPermissionsForGroupRequest(groupId) {
        this['group_id'] = groupId;
    }
    KeystoneListProjectPermissionsForGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneListProjectPermissionsForGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListProjectPermissionsForGroupRequest;
}());
exports.KeystoneListProjectPermissionsForGroupRequest = KeystoneListProjectPermissionsForGroupRequest;


/***/ }),

/***/ 30118:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListProjectPermissionsForGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListProjectPermissionsForGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneListProjectPermissionsForGroupResponse, _super);
    function KeystoneListProjectPermissionsForGroupResponse() {
        return _super.call(this) || this;
    }
    KeystoneListProjectPermissionsForGroupResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListProjectPermissionsForGroupResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    return KeystoneListProjectPermissionsForGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListProjectPermissionsForGroupResponse = KeystoneListProjectPermissionsForGroupResponse;


/***/ }),

/***/ 98666:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListProjectsForUserRequest = void 0;
var KeystoneListProjectsForUserRequest = /** @class */ (function () {
    function KeystoneListProjectsForUserRequest(userId) {
        this['user_id'] = userId;
    }
    KeystoneListProjectsForUserRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(KeystoneListProjectsForUserRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListProjectsForUserRequest;
}());
exports.KeystoneListProjectsForUserRequest = KeystoneListProjectsForUserRequest;


/***/ }),

/***/ 14168:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListProjectsForUserResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListProjectsForUserResponse = /** @class */ (function (_super) {
    __extends(KeystoneListProjectsForUserResponse, _super);
    function KeystoneListProjectsForUserResponse() {
        return _super.call(this) || this;
    }
    KeystoneListProjectsForUserResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListProjectsForUserResponse.prototype.withProjects = function (projects) {
        this['projects'] = projects;
        return this;
    };
    return KeystoneListProjectsForUserResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListProjectsForUserResponse = KeystoneListProjectsForUserResponse;


/***/ }),

/***/ 35983:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListProjectsRequest = void 0;
var KeystoneListProjectsRequest = /** @class */ (function () {
    function KeystoneListProjectsRequest() {
    }
    KeystoneListProjectsRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneListProjectsRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListProjectsRequest.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneListProjectsRequest.prototype.withParentId = function (parentId) {
        this['parent_id'] = parentId;
        return this;
    };
    Object.defineProperty(KeystoneListProjectsRequest.prototype, "parentId", {
        get: function () {
            return this['parent_id'];
        },
        set: function (parentId) {
            this['parent_id'] = parentId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListProjectsRequest.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    KeystoneListProjectsRequest.prototype.withIsDomain = function (isDomain) {
        this['is_domain'] = isDomain;
        return this;
    };
    Object.defineProperty(KeystoneListProjectsRequest.prototype, "isDomain", {
        get: function () {
            return this['is_domain'];
        },
        set: function (isDomain) {
            this['is_domain'] = isDomain;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListProjectsRequest.prototype.withPage = function (page) {
        this['page'] = page;
        return this;
    };
    KeystoneListProjectsRequest.prototype.withPerPage = function (perPage) {
        this['per_page'] = perPage;
        return this;
    };
    Object.defineProperty(KeystoneListProjectsRequest.prototype, "perPage", {
        get: function () {
            return this['per_page'];
        },
        set: function (perPage) {
            this['per_page'] = perPage;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListProjectsRequest;
}());
exports.KeystoneListProjectsRequest = KeystoneListProjectsRequest;


/***/ }),

/***/ 45521:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListProjectsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListProjectsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListProjectsResponse, _super);
    function KeystoneListProjectsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListProjectsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListProjectsResponse.prototype.withProjects = function (projects) {
        this['projects'] = projects;
        return this;
    };
    return KeystoneListProjectsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListProjectsResponse = KeystoneListProjectsResponse;


/***/ }),

/***/ 35254:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListProtocolsRequest = void 0;
var KeystoneListProtocolsRequest = /** @class */ (function () {
    function KeystoneListProtocolsRequest(idpId) {
        this['idp_id'] = idpId;
    }
    KeystoneListProtocolsRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(KeystoneListProtocolsRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListProtocolsRequest;
}());
exports.KeystoneListProtocolsRequest = KeystoneListProtocolsRequest;


/***/ }),

/***/ 20015:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListProtocolsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListProtocolsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListProtocolsResponse, _super);
    function KeystoneListProtocolsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListProtocolsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListProtocolsResponse.prototype.withProtocols = function (protocols) {
        this['protocols'] = protocols;
        return this;
    };
    return KeystoneListProtocolsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListProtocolsResponse = KeystoneListProtocolsResponse;


/***/ }),

/***/ 90241:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListRegionsRequest = void 0;
var KeystoneListRegionsRequest = /** @class */ (function () {
    function KeystoneListRegionsRequest() {
    }
    return KeystoneListRegionsRequest;
}());
exports.KeystoneListRegionsRequest = KeystoneListRegionsRequest;


/***/ }),

/***/ 31261:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListRegionsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListRegionsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListRegionsResponse, _super);
    function KeystoneListRegionsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListRegionsResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListRegionsResponse.prototype.withRegions = function (regions) {
        this['regions'] = regions;
        return this;
    };
    return KeystoneListRegionsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListRegionsResponse = KeystoneListRegionsResponse;


/***/ }),

/***/ 46641:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListServicesRequest = void 0;
var KeystoneListServicesRequest = /** @class */ (function () {
    function KeystoneListServicesRequest() {
    }
    KeystoneListServicesRequest.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    return KeystoneListServicesRequest;
}());
exports.KeystoneListServicesRequest = KeystoneListServicesRequest;


/***/ }),

/***/ 59053:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListServicesResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListServicesResponse = /** @class */ (function (_super) {
    __extends(KeystoneListServicesResponse, _super);
    function KeystoneListServicesResponse() {
        return _super.call(this) || this;
    }
    KeystoneListServicesResponse.prototype.withServices = function (services) {
        this['services'] = services;
        return this;
    };
    KeystoneListServicesResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return KeystoneListServicesResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListServicesResponse = KeystoneListServicesResponse;


/***/ }),

/***/ 73138:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListUsersForGroupByAdminRequest = void 0;
var KeystoneListUsersForGroupByAdminRequest = /** @class */ (function () {
    function KeystoneListUsersForGroupByAdminRequest(groupId) {
        this['group_id'] = groupId;
    }
    KeystoneListUsersForGroupByAdminRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneListUsersForGroupByAdminRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListUsersForGroupByAdminRequest;
}());
exports.KeystoneListUsersForGroupByAdminRequest = KeystoneListUsersForGroupByAdminRequest;


/***/ }),

/***/ 82195:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListUsersForGroupByAdminResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListUsersForGroupByAdminResponse = /** @class */ (function (_super) {
    __extends(KeystoneListUsersForGroupByAdminResponse, _super);
    function KeystoneListUsersForGroupByAdminResponse() {
        return _super.call(this) || this;
    }
    KeystoneListUsersForGroupByAdminResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListUsersForGroupByAdminResponse.prototype.withUsers = function (users) {
        this['users'] = users;
        return this;
    };
    return KeystoneListUsersForGroupByAdminResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListUsersForGroupByAdminResponse = KeystoneListUsersForGroupByAdminResponse;


/***/ }),

/***/ 6340:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListUsersRequest = void 0;
var KeystoneListUsersRequest = /** @class */ (function () {
    function KeystoneListUsersRequest() {
    }
    KeystoneListUsersRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneListUsersRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListUsersRequest.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    KeystoneListUsersRequest.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneListUsersRequest.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(KeystoneListUsersRequest.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListUsersRequest;
}());
exports.KeystoneListUsersRequest = KeystoneListUsersRequest;


/***/ }),

/***/ 89853:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListUsersResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListUsersResponse = /** @class */ (function (_super) {
    __extends(KeystoneListUsersResponse, _super);
    function KeystoneListUsersResponse() {
        return _super.call(this) || this;
    }
    KeystoneListUsersResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListUsersResponse.prototype.withUsers = function (users) {
        this['users'] = users;
        return this;
    };
    return KeystoneListUsersResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListUsersResponse = KeystoneListUsersResponse;


/***/ }),

/***/ 74329:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListUsersResult = void 0;
var KeystoneListUsersResult = /** @class */ (function () {
    function KeystoneListUsersResult(domainId, name, passwordExpiresAt, links, id, enabled) {
        this['domain_id'] = domainId;
        this['name'] = name;
        this['password_expires_at'] = passwordExpiresAt;
        this['links'] = links;
        this['id'] = id;
        this['enabled'] = enabled;
    }
    KeystoneListUsersResult.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(KeystoneListUsersResult.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListUsersResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneListUsersResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListUsersResult.prototype.withLastProjectId = function (lastProjectId) {
        this['last_project_id'] = lastProjectId;
        return this;
    };
    Object.defineProperty(KeystoneListUsersResult.prototype, "lastProjectId", {
        get: function () {
            return this['last_project_id'];
        },
        set: function (lastProjectId) {
            this['last_project_id'] = lastProjectId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListUsersResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneListUsersResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneListUsersResult.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(KeystoneListUsersResult.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneListUsersResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneListUsersResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneListUsersResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    KeystoneListUsersResult.prototype.withPwdStrength = function (pwdStrength) {
        this['pwd_strength'] = pwdStrength;
        return this;
    };
    Object.defineProperty(KeystoneListUsersResult.prototype, "pwdStrength", {
        get: function () {
            return this['pwd_strength'];
        },
        set: function (pwdStrength) {
            this['pwd_strength'] = pwdStrength;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneListUsersResult;
}());
exports.KeystoneListUsersResult = KeystoneListUsersResult;


/***/ }),

/***/ 97520:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListVersionsRequest = void 0;
var KeystoneListVersionsRequest = /** @class */ (function () {
    function KeystoneListVersionsRequest() {
    }
    return KeystoneListVersionsRequest;
}());
exports.KeystoneListVersionsRequest = KeystoneListVersionsRequest;


/***/ }),

/***/ 1846:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneListVersionsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneListVersionsResponse = /** @class */ (function (_super) {
    __extends(KeystoneListVersionsResponse, _super);
    function KeystoneListVersionsResponse() {
        return _super.call(this) || this;
    }
    KeystoneListVersionsResponse.prototype.withVersions = function (versions) {
        this['versions'] = versions;
        return this;
    };
    return KeystoneListVersionsResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneListVersionsResponse = KeystoneListVersionsResponse;


/***/ }),

/***/ 94488:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneRemoveDomainPermissionFromGroupRequest = void 0;
var KeystoneRemoveDomainPermissionFromGroupRequest = /** @class */ (function () {
    function KeystoneRemoveDomainPermissionFromGroupRequest(domainId, groupId, roleId) {
        this['domain_id'] = domainId;
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    KeystoneRemoveDomainPermissionFromGroupRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneRemoveDomainPermissionFromGroupRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneRemoveDomainPermissionFromGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneRemoveDomainPermissionFromGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneRemoveDomainPermissionFromGroupRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(KeystoneRemoveDomainPermissionFromGroupRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneRemoveDomainPermissionFromGroupRequest;
}());
exports.KeystoneRemoveDomainPermissionFromGroupRequest = KeystoneRemoveDomainPermissionFromGroupRequest;


/***/ }),

/***/ 73711:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneRemoveDomainPermissionFromGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneRemoveDomainPermissionFromGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneRemoveDomainPermissionFromGroupResponse, _super);
    function KeystoneRemoveDomainPermissionFromGroupResponse() {
        return _super.call(this) || this;
    }
    return KeystoneRemoveDomainPermissionFromGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneRemoveDomainPermissionFromGroupResponse = KeystoneRemoveDomainPermissionFromGroupResponse;


/***/ }),

/***/ 7559:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneRemoveProjectPermissionFromGroupRequest = void 0;
var KeystoneRemoveProjectPermissionFromGroupRequest = /** @class */ (function () {
    function KeystoneRemoveProjectPermissionFromGroupRequest(groupId, roleId) {
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    KeystoneRemoveProjectPermissionFromGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneRemoveProjectPermissionFromGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneRemoveProjectPermissionFromGroupRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(KeystoneRemoveProjectPermissionFromGroupRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneRemoveProjectPermissionFromGroupRequest;
}());
exports.KeystoneRemoveProjectPermissionFromGroupRequest = KeystoneRemoveProjectPermissionFromGroupRequest;


/***/ }),

/***/ 36141:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneRemoveProjectPermissionFromGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneRemoveProjectPermissionFromGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneRemoveProjectPermissionFromGroupResponse, _super);
    function KeystoneRemoveProjectPermissionFromGroupResponse() {
        return _super.call(this) || this;
    }
    return KeystoneRemoveProjectPermissionFromGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneRemoveProjectPermissionFromGroupResponse = KeystoneRemoveProjectPermissionFromGroupResponse;


/***/ }),

/***/ 36191:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneRemoveUserFromGroupRequest = void 0;
var KeystoneRemoveUserFromGroupRequest = /** @class */ (function () {
    function KeystoneRemoveUserFromGroupRequest(groupId, userId) {
        this['group_id'] = groupId;
        this['user_id'] = userId;
    }
    KeystoneRemoveUserFromGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneRemoveUserFromGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneRemoveUserFromGroupRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(KeystoneRemoveUserFromGroupRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneRemoveUserFromGroupRequest;
}());
exports.KeystoneRemoveUserFromGroupRequest = KeystoneRemoveUserFromGroupRequest;


/***/ }),

/***/ 51764:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneRemoveUserFromGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneRemoveUserFromGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneRemoveUserFromGroupResponse, _super);
    function KeystoneRemoveUserFromGroupResponse() {
        return _super.call(this) || this;
    }
    return KeystoneRemoveUserFromGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneRemoveUserFromGroupResponse = KeystoneRemoveUserFromGroupResponse;


/***/ }),

/***/ 6360:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowCatalogRequest = void 0;
var KeystoneShowCatalogRequest = /** @class */ (function () {
    function KeystoneShowCatalogRequest() {
    }
    return KeystoneShowCatalogRequest;
}());
exports.KeystoneShowCatalogRequest = KeystoneShowCatalogRequest;


/***/ }),

/***/ 16915:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowCatalogResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowCatalogResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowCatalogResponse, _super);
    function KeystoneShowCatalogResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowCatalogResponse.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    KeystoneShowCatalogResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return KeystoneShowCatalogResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowCatalogResponse = KeystoneShowCatalogResponse;


/***/ }),

/***/ 331:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowEndpointRequest = void 0;
var KeystoneShowEndpointRequest = /** @class */ (function () {
    function KeystoneShowEndpointRequest(endpointId) {
        this['endpoint_id'] = endpointId;
    }
    KeystoneShowEndpointRequest.prototype.withEndpointId = function (endpointId) {
        this['endpoint_id'] = endpointId;
        return this;
    };
    Object.defineProperty(KeystoneShowEndpointRequest.prototype, "endpointId", {
        get: function () {
            return this['endpoint_id'];
        },
        set: function (endpointId) {
            this['endpoint_id'] = endpointId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneShowEndpointRequest;
}());
exports.KeystoneShowEndpointRequest = KeystoneShowEndpointRequest;


/***/ }),

/***/ 61368:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowEndpointResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowEndpointResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowEndpointResponse, _super);
    function KeystoneShowEndpointResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowEndpointResponse.prototype.withEndpoint = function (endpoint) {
        this['endpoint'] = endpoint;
        return this;
    };
    return KeystoneShowEndpointResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowEndpointResponse = KeystoneShowEndpointResponse;


/***/ }),

/***/ 761:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowGroupRequest = void 0;
var KeystoneShowGroupRequest = /** @class */ (function () {
    function KeystoneShowGroupRequest(groupId) {
        this['group_id'] = groupId;
    }
    KeystoneShowGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneShowGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneShowGroupRequest;
}());
exports.KeystoneShowGroupRequest = KeystoneShowGroupRequest;


/***/ }),

/***/ 25199:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowGroupResponse, _super);
    function KeystoneShowGroupResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowGroupResponse.prototype.withGroup = function (group) {
        this['group'] = group;
        return this;
    };
    return KeystoneShowGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowGroupResponse = KeystoneShowGroupResponse;


/***/ }),

/***/ 54400:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowIdentityProviderRequest = void 0;
var KeystoneShowIdentityProviderRequest = /** @class */ (function () {
    function KeystoneShowIdentityProviderRequest(id) {
        this['id'] = id;
    }
    KeystoneShowIdentityProviderRequest.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return KeystoneShowIdentityProviderRequest;
}());
exports.KeystoneShowIdentityProviderRequest = KeystoneShowIdentityProviderRequest;


/***/ }),

/***/ 30744:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowIdentityProviderResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowIdentityProviderResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowIdentityProviderResponse, _super);
    function KeystoneShowIdentityProviderResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowIdentityProviderResponse.prototype.withIdentityProvider = function (identityProvider) {
        this['identity_provider'] = identityProvider;
        return this;
    };
    Object.defineProperty(KeystoneShowIdentityProviderResponse.prototype, "identityProvider", {
        get: function () {
            return this['identity_provider'];
        },
        set: function (identityProvider) {
            this['identity_provider'] = identityProvider;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneShowIdentityProviderResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowIdentityProviderResponse = KeystoneShowIdentityProviderResponse;


/***/ }),

/***/ 61434:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowMappingRequest = void 0;
var KeystoneShowMappingRequest = /** @class */ (function () {
    function KeystoneShowMappingRequest(id) {
        this['id'] = id;
    }
    KeystoneShowMappingRequest.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return KeystoneShowMappingRequest;
}());
exports.KeystoneShowMappingRequest = KeystoneShowMappingRequest;


/***/ }),

/***/ 74867:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowMappingResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowMappingResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowMappingResponse, _super);
    function KeystoneShowMappingResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowMappingResponse.prototype.withMapping = function (mapping) {
        this['mapping'] = mapping;
        return this;
    };
    return KeystoneShowMappingResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowMappingResponse = KeystoneShowMappingResponse;


/***/ }),

/***/ 81407:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowPermissionRequest = void 0;
var KeystoneShowPermissionRequest = /** @class */ (function () {
    function KeystoneShowPermissionRequest(roleId) {
        this['role_id'] = roleId;
    }
    KeystoneShowPermissionRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(KeystoneShowPermissionRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneShowPermissionRequest;
}());
exports.KeystoneShowPermissionRequest = KeystoneShowPermissionRequest;


/***/ }),

/***/ 32502:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowPermissionResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowPermissionResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowPermissionResponse, _super);
    function KeystoneShowPermissionResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowPermissionResponse.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return KeystoneShowPermissionResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowPermissionResponse = KeystoneShowPermissionResponse;


/***/ }),

/***/ 44390:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowProjectRequest = void 0;
var KeystoneShowProjectRequest = /** @class */ (function () {
    function KeystoneShowProjectRequest() {
    }
    return KeystoneShowProjectRequest;
}());
exports.KeystoneShowProjectRequest = KeystoneShowProjectRequest;


/***/ }),

/***/ 87422:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowProjectResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowProjectResponse, _super);
    function KeystoneShowProjectResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowProjectResponse.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return KeystoneShowProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowProjectResponse = KeystoneShowProjectResponse;


/***/ }),

/***/ 31544:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowProtocolRequest = void 0;
var KeystoneShowProtocolRequest = /** @class */ (function () {
    function KeystoneShowProtocolRequest(idpId, protocolId) {
        this['idp_id'] = idpId;
        this['protocol_id'] = protocolId;
    }
    KeystoneShowProtocolRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(KeystoneShowProtocolRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneShowProtocolRequest.prototype.withProtocolId = function (protocolId) {
        this['protocol_id'] = protocolId;
        return this;
    };
    Object.defineProperty(KeystoneShowProtocolRequest.prototype, "protocolId", {
        get: function () {
            return this['protocol_id'];
        },
        set: function (protocolId) {
            this['protocol_id'] = protocolId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneShowProtocolRequest;
}());
exports.KeystoneShowProtocolRequest = KeystoneShowProtocolRequest;


/***/ }),

/***/ 91747:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowProtocolResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowProtocolResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowProtocolResponse, _super);
    function KeystoneShowProtocolResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowProtocolResponse.prototype.withProtocol = function (protocol) {
        this['protocol'] = protocol;
        return this;
    };
    return KeystoneShowProtocolResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowProtocolResponse = KeystoneShowProtocolResponse;


/***/ }),

/***/ 85521:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowRegionRequest = void 0;
var KeystoneShowRegionRequest = /** @class */ (function () {
    function KeystoneShowRegionRequest(regionId) {
        this['region_id'] = regionId;
    }
    KeystoneShowRegionRequest.prototype.withRegionId = function (regionId) {
        this['region_id'] = regionId;
        return this;
    };
    Object.defineProperty(KeystoneShowRegionRequest.prototype, "regionId", {
        get: function () {
            return this['region_id'];
        },
        set: function (regionId) {
            this['region_id'] = regionId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneShowRegionRequest;
}());
exports.KeystoneShowRegionRequest = KeystoneShowRegionRequest;


/***/ }),

/***/ 70160:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowRegionResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowRegionResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowRegionResponse, _super);
    function KeystoneShowRegionResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowRegionResponse.prototype.withRegion = function (region) {
        this['region'] = region;
        return this;
    };
    return KeystoneShowRegionResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowRegionResponse = KeystoneShowRegionResponse;


/***/ }),

/***/ 82384:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowSecurityComplianceByOptionRequestOptionEnum = exports.KeystoneShowSecurityComplianceByOptionRequest = void 0;
var KeystoneShowSecurityComplianceByOptionRequest = /** @class */ (function () {
    function KeystoneShowSecurityComplianceByOptionRequest(domainId, option) {
        this['domain_id'] = domainId;
        this['option'] = option;
    }
    KeystoneShowSecurityComplianceByOptionRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneShowSecurityComplianceByOptionRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneShowSecurityComplianceByOptionRequest.prototype.withOption = function (option) {
        this['option'] = option;
        return this;
    };
    return KeystoneShowSecurityComplianceByOptionRequest;
}());
exports.KeystoneShowSecurityComplianceByOptionRequest = KeystoneShowSecurityComplianceByOptionRequest;
/**
    * @export
    * @enum {string}
    */
var KeystoneShowSecurityComplianceByOptionRequestOptionEnum;
(function (KeystoneShowSecurityComplianceByOptionRequestOptionEnum) {
    KeystoneShowSecurityComplianceByOptionRequestOptionEnum["PASSWORD_REGEX"] = "password_regex";
    KeystoneShowSecurityComplianceByOptionRequestOptionEnum["PASSWORD_REGEX_DESCRIPTION"] = "password_regex_description";
})(KeystoneShowSecurityComplianceByOptionRequestOptionEnum = exports.KeystoneShowSecurityComplianceByOptionRequestOptionEnum || (exports.KeystoneShowSecurityComplianceByOptionRequestOptionEnum = {}));


/***/ }),

/***/ 62088:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowSecurityComplianceByOptionResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowSecurityComplianceByOptionResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowSecurityComplianceByOptionResponse, _super);
    function KeystoneShowSecurityComplianceByOptionResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowSecurityComplianceByOptionResponse.prototype.withConfig = function (config) {
        this['config'] = config;
        return this;
    };
    return KeystoneShowSecurityComplianceByOptionResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowSecurityComplianceByOptionResponse = KeystoneShowSecurityComplianceByOptionResponse;


/***/ }),

/***/ 96842:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowSecurityComplianceRequest = void 0;
var KeystoneShowSecurityComplianceRequest = /** @class */ (function () {
    function KeystoneShowSecurityComplianceRequest(domainId) {
        this['domain_id'] = domainId;
    }
    KeystoneShowSecurityComplianceRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneShowSecurityComplianceRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneShowSecurityComplianceRequest;
}());
exports.KeystoneShowSecurityComplianceRequest = KeystoneShowSecurityComplianceRequest;


/***/ }),

/***/ 40297:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowSecurityComplianceResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowSecurityComplianceResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowSecurityComplianceResponse, _super);
    function KeystoneShowSecurityComplianceResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowSecurityComplianceResponse.prototype.withConfig = function (config) {
        this['config'] = config;
        return this;
    };
    return KeystoneShowSecurityComplianceResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowSecurityComplianceResponse = KeystoneShowSecurityComplianceResponse;


/***/ }),

/***/ 55241:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowServiceRequest = void 0;
var KeystoneShowServiceRequest = /** @class */ (function () {
    function KeystoneShowServiceRequest(serviceId) {
        this['service_id'] = serviceId;
    }
    KeystoneShowServiceRequest.prototype.withServiceId = function (serviceId) {
        this['service_id'] = serviceId;
        return this;
    };
    Object.defineProperty(KeystoneShowServiceRequest.prototype, "serviceId", {
        get: function () {
            return this['service_id'];
        },
        set: function (serviceId) {
            this['service_id'] = serviceId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneShowServiceRequest;
}());
exports.KeystoneShowServiceRequest = KeystoneShowServiceRequest;


/***/ }),

/***/ 71035:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowServiceResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowServiceResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowServiceResponse, _super);
    function KeystoneShowServiceResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowServiceResponse.prototype.withService = function (service) {
        this['service'] = service;
        return this;
    };
    return KeystoneShowServiceResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowServiceResponse = KeystoneShowServiceResponse;


/***/ }),

/***/ 98240:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowUserRequest = void 0;
var KeystoneShowUserRequest = /** @class */ (function () {
    function KeystoneShowUserRequest(userId) {
        this['user_id'] = userId;
    }
    KeystoneShowUserRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(KeystoneShowUserRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneShowUserRequest;
}());
exports.KeystoneShowUserRequest = KeystoneShowUserRequest;


/***/ }),

/***/ 61135:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowUserResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowUserResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowUserResponse, _super);
    function KeystoneShowUserResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowUserResponse.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return KeystoneShowUserResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowUserResponse = KeystoneShowUserResponse;


/***/ }),

/***/ 61827:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowUserResult = void 0;
var KeystoneShowUserResult = /** @class */ (function () {
    function KeystoneShowUserResult(domainId, name, passwordExpiresAt, links, id, enabled) {
        this['domain_id'] = domainId;
        this['name'] = name;
        this['password_expires_at'] = passwordExpiresAt;
        this['links'] = links;
        this['id'] = id;
        this['enabled'] = enabled;
    }
    KeystoneShowUserResult.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(KeystoneShowUserResult.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneShowUserResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneShowUserResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneShowUserResult.prototype.withLastProjectId = function (lastProjectId) {
        this['last_project_id'] = lastProjectId;
        return this;
    };
    Object.defineProperty(KeystoneShowUserResult.prototype, "lastProjectId", {
        get: function () {
            return this['last_project_id'];
        },
        set: function (lastProjectId) {
            this['last_project_id'] = lastProjectId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneShowUserResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneShowUserResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneShowUserResult.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(KeystoneShowUserResult.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneShowUserResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneShowUserResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneShowUserResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    return KeystoneShowUserResult;
}());
exports.KeystoneShowUserResult = KeystoneShowUserResult;


/***/ }),

/***/ 26314:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowVersionRequest = void 0;
var KeystoneShowVersionRequest = /** @class */ (function () {
    function KeystoneShowVersionRequest() {
    }
    return KeystoneShowVersionRequest;
}());
exports.KeystoneShowVersionRequest = KeystoneShowVersionRequest;


/***/ }),

/***/ 74942:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneShowVersionResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneShowVersionResponse = /** @class */ (function (_super) {
    __extends(KeystoneShowVersionResponse, _super);
    function KeystoneShowVersionResponse() {
        return _super.call(this) || this;
    }
    KeystoneShowVersionResponse.prototype.withVersion = function (version) {
        this['version'] = version;
        return this;
    };
    return KeystoneShowVersionResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneShowVersionResponse = KeystoneShowVersionResponse;


/***/ }),

/***/ 33083:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateGroupOption = void 0;
var KeystoneUpdateGroupOption = /** @class */ (function () {
    function KeystoneUpdateGroupOption() {
    }
    KeystoneUpdateGroupOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneUpdateGroupOption.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateGroupOption.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateGroupOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return KeystoneUpdateGroupOption;
}());
exports.KeystoneUpdateGroupOption = KeystoneUpdateGroupOption;


/***/ }),

/***/ 41894:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateGroupRequest = void 0;
var KeystoneUpdateGroupRequest = /** @class */ (function () {
    function KeystoneUpdateGroupRequest(groupId) {
        this['group_id'] = groupId;
    }
    KeystoneUpdateGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateGroupRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneUpdateGroupRequest;
}());
exports.KeystoneUpdateGroupRequest = KeystoneUpdateGroupRequest;


/***/ }),

/***/ 54468:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateGroupRequestBody = void 0;
var KeystoneUpdateGroupRequestBody = /** @class */ (function () {
    function KeystoneUpdateGroupRequestBody(group) {
        this['group'] = group;
    }
    KeystoneUpdateGroupRequestBody.prototype.withGroup = function (group) {
        this['group'] = group;
        return this;
    };
    return KeystoneUpdateGroupRequestBody;
}());
exports.KeystoneUpdateGroupRequestBody = KeystoneUpdateGroupRequestBody;


/***/ }),

/***/ 14849:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneUpdateGroupResponse = /** @class */ (function (_super) {
    __extends(KeystoneUpdateGroupResponse, _super);
    function KeystoneUpdateGroupResponse() {
        return _super.call(this) || this;
    }
    KeystoneUpdateGroupResponse.prototype.withGroup = function (group) {
        this['group'] = group;
        return this;
    };
    return KeystoneUpdateGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneUpdateGroupResponse = KeystoneUpdateGroupResponse;


/***/ }),

/***/ 38572:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateIdentityProviderRequest = void 0;
var KeystoneUpdateIdentityProviderRequest = /** @class */ (function () {
    function KeystoneUpdateIdentityProviderRequest(id) {
        this['id'] = id;
    }
    KeystoneUpdateIdentityProviderRequest.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneUpdateIdentityProviderRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneUpdateIdentityProviderRequest;
}());
exports.KeystoneUpdateIdentityProviderRequest = KeystoneUpdateIdentityProviderRequest;


/***/ }),

/***/ 28896:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateIdentityProviderRequestBody = void 0;
var KeystoneUpdateIdentityProviderRequestBody = /** @class */ (function () {
    function KeystoneUpdateIdentityProviderRequestBody(identityProvider) {
        this['identity_provider'] = identityProvider;
    }
    KeystoneUpdateIdentityProviderRequestBody.prototype.withIdentityProvider = function (identityProvider) {
        this['identity_provider'] = identityProvider;
        return this;
    };
    Object.defineProperty(KeystoneUpdateIdentityProviderRequestBody.prototype, "identityProvider", {
        get: function () {
            return this['identity_provider'];
        },
        set: function (identityProvider) {
            this['identity_provider'] = identityProvider;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneUpdateIdentityProviderRequestBody;
}());
exports.KeystoneUpdateIdentityProviderRequestBody = KeystoneUpdateIdentityProviderRequestBody;


/***/ }),

/***/ 47474:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateIdentityProviderResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneUpdateIdentityProviderResponse = /** @class */ (function (_super) {
    __extends(KeystoneUpdateIdentityProviderResponse, _super);
    function KeystoneUpdateIdentityProviderResponse() {
        return _super.call(this) || this;
    }
    KeystoneUpdateIdentityProviderResponse.prototype.withIdentityProvider = function (identityProvider) {
        this['identity_provider'] = identityProvider;
        return this;
    };
    Object.defineProperty(KeystoneUpdateIdentityProviderResponse.prototype, "identityProvider", {
        get: function () {
            return this['identity_provider'];
        },
        set: function (identityProvider) {
            this['identity_provider'] = identityProvider;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneUpdateIdentityProviderResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneUpdateIdentityProviderResponse = KeystoneUpdateIdentityProviderResponse;


/***/ }),

/***/ 74666:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateMappingRequest = void 0;
var KeystoneUpdateMappingRequest = /** @class */ (function () {
    function KeystoneUpdateMappingRequest(id) {
        this['id'] = id;
    }
    KeystoneUpdateMappingRequest.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneUpdateMappingRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneUpdateMappingRequest;
}());
exports.KeystoneUpdateMappingRequest = KeystoneUpdateMappingRequest;


/***/ }),

/***/ 6435:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateMappingRequestBody = void 0;
var KeystoneUpdateMappingRequestBody = /** @class */ (function () {
    function KeystoneUpdateMappingRequestBody(mapping) {
        this['mapping'] = mapping;
    }
    KeystoneUpdateMappingRequestBody.prototype.withMapping = function (mapping) {
        this['mapping'] = mapping;
        return this;
    };
    return KeystoneUpdateMappingRequestBody;
}());
exports.KeystoneUpdateMappingRequestBody = KeystoneUpdateMappingRequestBody;


/***/ }),

/***/ 21529:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateMappingResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneUpdateMappingResponse = /** @class */ (function (_super) {
    __extends(KeystoneUpdateMappingResponse, _super);
    function KeystoneUpdateMappingResponse() {
        return _super.call(this) || this;
    }
    KeystoneUpdateMappingResponse.prototype.withMapping = function (mapping) {
        this['mapping'] = mapping;
        return this;
    };
    return KeystoneUpdateMappingResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneUpdateMappingResponse = KeystoneUpdateMappingResponse;


/***/ }),

/***/ 2584:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdatePasswordOption = void 0;
var KeystoneUpdatePasswordOption = /** @class */ (function () {
    function KeystoneUpdatePasswordOption(password, originalPassword) {
        this['password'] = password;
        this['original_password'] = originalPassword;
    }
    KeystoneUpdatePasswordOption.prototype.withPassword = function (password) {
        this['password'] = password;
        return this;
    };
    KeystoneUpdatePasswordOption.prototype.withOriginalPassword = function (originalPassword) {
        this['original_password'] = originalPassword;
        return this;
    };
    Object.defineProperty(KeystoneUpdatePasswordOption.prototype, "originalPassword", {
        get: function () {
            return this['original_password'];
        },
        set: function (originalPassword) {
            this['original_password'] = originalPassword;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneUpdatePasswordOption;
}());
exports.KeystoneUpdatePasswordOption = KeystoneUpdatePasswordOption;


/***/ }),

/***/ 68252:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateProjectOption = void 0;
var KeystoneUpdateProjectOption = /** @class */ (function () {
    function KeystoneUpdateProjectOption() {
    }
    KeystoneUpdateProjectOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneUpdateProjectOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return KeystoneUpdateProjectOption;
}());
exports.KeystoneUpdateProjectOption = KeystoneUpdateProjectOption;


/***/ }),

/***/ 56524:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateProjectRequest = void 0;
var KeystoneUpdateProjectRequest = /** @class */ (function () {
    function KeystoneUpdateProjectRequest() {
    }
    KeystoneUpdateProjectRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneUpdateProjectRequest;
}());
exports.KeystoneUpdateProjectRequest = KeystoneUpdateProjectRequest;


/***/ }),

/***/ 47584:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateProjectRequestBody = void 0;
var KeystoneUpdateProjectRequestBody = /** @class */ (function () {
    function KeystoneUpdateProjectRequestBody(project) {
        this['project'] = project;
    }
    KeystoneUpdateProjectRequestBody.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return KeystoneUpdateProjectRequestBody;
}());
exports.KeystoneUpdateProjectRequestBody = KeystoneUpdateProjectRequestBody;


/***/ }),

/***/ 44254:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneUpdateProjectResponse = /** @class */ (function (_super) {
    __extends(KeystoneUpdateProjectResponse, _super);
    function KeystoneUpdateProjectResponse() {
        return _super.call(this) || this;
    }
    KeystoneUpdateProjectResponse.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return KeystoneUpdateProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneUpdateProjectResponse = KeystoneUpdateProjectResponse;


/***/ }),

/***/ 73920:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateProjectResult = void 0;
var KeystoneUpdateProjectResult = /** @class */ (function () {
    function KeystoneUpdateProjectResult(isDomain, description, links, enabled, id, parentId, domainId, name) {
        this['is_domain'] = isDomain;
        this['description'] = description;
        this['links'] = links;
        this['enabled'] = enabled;
        this['id'] = id;
        this['parent_id'] = parentId;
        this['domain_id'] = domainId;
        this['name'] = name;
    }
    KeystoneUpdateProjectResult.prototype.withIsDomain = function (isDomain) {
        this['is_domain'] = isDomain;
        return this;
    };
    Object.defineProperty(KeystoneUpdateProjectResult.prototype, "isDomain", {
        get: function () {
            return this['is_domain'];
        },
        set: function (isDomain) {
            this['is_domain'] = isDomain;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateProjectResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneUpdateProjectResult.prototype.withExtra = function (extra) {
        this['extra'] = extra;
        return this;
    };
    KeystoneUpdateProjectResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneUpdateProjectResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    KeystoneUpdateProjectResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneUpdateProjectResult.prototype.withParentId = function (parentId) {
        this['parent_id'] = parentId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateProjectResult.prototype, "parentId", {
        get: function () {
            return this['parent_id'];
        },
        set: function (parentId) {
            this['parent_id'] = parentId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateProjectResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateProjectResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateProjectResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return KeystoneUpdateProjectResult;
}());
exports.KeystoneUpdateProjectResult = KeystoneUpdateProjectResult;


/***/ }),

/***/ 9367:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateProtocolRequest = void 0;
var KeystoneUpdateProtocolRequest = /** @class */ (function () {
    function KeystoneUpdateProtocolRequest(idpId, protocolId) {
        this['idp_id'] = idpId;
        this['protocol_id'] = protocolId;
    }
    KeystoneUpdateProtocolRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateProtocolRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateProtocolRequest.prototype.withProtocolId = function (protocolId) {
        this['protocol_id'] = protocolId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateProtocolRequest.prototype, "protocolId", {
        get: function () {
            return this['protocol_id'];
        },
        set: function (protocolId) {
            this['protocol_id'] = protocolId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateProtocolRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneUpdateProtocolRequest;
}());
exports.KeystoneUpdateProtocolRequest = KeystoneUpdateProtocolRequest;


/***/ }),

/***/ 59266:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateProtocolRequestBody = void 0;
var KeystoneUpdateProtocolRequestBody = /** @class */ (function () {
    function KeystoneUpdateProtocolRequestBody(protocol) {
        this['protocol'] = protocol;
    }
    KeystoneUpdateProtocolRequestBody.prototype.withProtocol = function (protocol) {
        this['protocol'] = protocol;
        return this;
    };
    return KeystoneUpdateProtocolRequestBody;
}());
exports.KeystoneUpdateProtocolRequestBody = KeystoneUpdateProtocolRequestBody;


/***/ }),

/***/ 19278:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateProtocolResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneUpdateProtocolResponse = /** @class */ (function (_super) {
    __extends(KeystoneUpdateProtocolResponse, _super);
    function KeystoneUpdateProtocolResponse() {
        return _super.call(this) || this;
    }
    KeystoneUpdateProtocolResponse.prototype.withProtocol = function (protocol) {
        this['protocol'] = protocol;
        return this;
    };
    return KeystoneUpdateProtocolResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneUpdateProtocolResponse = KeystoneUpdateProtocolResponse;


/***/ }),

/***/ 74965:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateUserByAdminRequest = void 0;
var KeystoneUpdateUserByAdminRequest = /** @class */ (function () {
    function KeystoneUpdateUserByAdminRequest(userId) {
        this['user_id'] = userId;
    }
    KeystoneUpdateUserByAdminRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateUserByAdminRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateUserByAdminRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneUpdateUserByAdminRequest;
}());
exports.KeystoneUpdateUserByAdminRequest = KeystoneUpdateUserByAdminRequest;


/***/ }),

/***/ 7908:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateUserByAdminRequestBody = void 0;
var KeystoneUpdateUserByAdminRequestBody = /** @class */ (function () {
    function KeystoneUpdateUserByAdminRequestBody(user) {
        this['user'] = user;
    }
    KeystoneUpdateUserByAdminRequestBody.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return KeystoneUpdateUserByAdminRequestBody;
}());
exports.KeystoneUpdateUserByAdminRequestBody = KeystoneUpdateUserByAdminRequestBody;


/***/ }),

/***/ 75536:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateUserByAdminResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneUpdateUserByAdminResponse = /** @class */ (function (_super) {
    __extends(KeystoneUpdateUserByAdminResponse, _super);
    function KeystoneUpdateUserByAdminResponse() {
        return _super.call(this) || this;
    }
    KeystoneUpdateUserByAdminResponse.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return KeystoneUpdateUserByAdminResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneUpdateUserByAdminResponse = KeystoneUpdateUserByAdminResponse;


/***/ }),

/***/ 39523:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateUserByAdminResult = void 0;
var KeystoneUpdateUserByAdminResult = /** @class */ (function () {
    function KeystoneUpdateUserByAdminResult(domainId, name, passwordExpiresAt, links, id, enabled) {
        this['domain_id'] = domainId;
        this['name'] = name;
        this['password_expires_at'] = passwordExpiresAt;
        this['links'] = links;
        this['id'] = id;
        this['enabled'] = enabled;
    }
    KeystoneUpdateUserByAdminResult.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(KeystoneUpdateUserByAdminResult.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateUserByAdminResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateUserByAdminResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateUserByAdminResult.prototype.withLastProjectId = function (lastProjectId) {
        this['last_project_id'] = lastProjectId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateUserByAdminResult.prototype, "lastProjectId", {
        get: function () {
            return this['last_project_id'];
        },
        set: function (lastProjectId) {
            this['last_project_id'] = lastProjectId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateUserByAdminResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneUpdateUserByAdminResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneUpdateUserByAdminResult.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(KeystoneUpdateUserByAdminResult.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateUserByAdminResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneUpdateUserByAdminResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneUpdateUserByAdminResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    KeystoneUpdateUserByAdminResult.prototype.withExtra = function (extra) {
        this['extra'] = extra;
        return this;
    };
    return KeystoneUpdateUserByAdminResult;
}());
exports.KeystoneUpdateUserByAdminResult = KeystoneUpdateUserByAdminResult;


/***/ }),

/***/ 67572:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateUserOption = void 0;
var KeystoneUpdateUserOption = /** @class */ (function () {
    function KeystoneUpdateUserOption() {
    }
    KeystoneUpdateUserOption.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateUserOption.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateUserOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneUpdateUserOption.prototype.withPassword = function (password) {
        this['password'] = password;
        return this;
    };
    KeystoneUpdateUserOption.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    KeystoneUpdateUserOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneUpdateUserOption.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(KeystoneUpdateUserOption.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneUpdateUserOption;
}());
exports.KeystoneUpdateUserOption = KeystoneUpdateUserOption;


/***/ }),

/***/ 63253:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateUserPasswordRequest = void 0;
var KeystoneUpdateUserPasswordRequest = /** @class */ (function () {
    function KeystoneUpdateUserPasswordRequest(userId) {
        this['user_id'] = userId;
    }
    KeystoneUpdateUserPasswordRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(KeystoneUpdateUserPasswordRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUpdateUserPasswordRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return KeystoneUpdateUserPasswordRequest;
}());
exports.KeystoneUpdateUserPasswordRequest = KeystoneUpdateUserPasswordRequest;


/***/ }),

/***/ 41699:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateUserPasswordRequestBody = void 0;
var KeystoneUpdateUserPasswordRequestBody = /** @class */ (function () {
    function KeystoneUpdateUserPasswordRequestBody(user) {
        this['user'] = user;
    }
    KeystoneUpdateUserPasswordRequestBody.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return KeystoneUpdateUserPasswordRequestBody;
}());
exports.KeystoneUpdateUserPasswordRequestBody = KeystoneUpdateUserPasswordRequestBody;


/***/ }),

/***/ 81408:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUpdateUserPasswordResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneUpdateUserPasswordResponse = /** @class */ (function (_super) {
    __extends(KeystoneUpdateUserPasswordResponse, _super);
    function KeystoneUpdateUserPasswordResponse() {
        return _super.call(this) || this;
    }
    return KeystoneUpdateUserPasswordResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneUpdateUserPasswordResponse = KeystoneUpdateUserPasswordResponse;


/***/ }),

/***/ 91077:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUserResult = void 0;
var KeystoneUserResult = /** @class */ (function () {
    function KeystoneUserResult(domainId, name, passwordExpiresAt, links, id, enabled) {
        this['domain_id'] = domainId;
        this['name'] = name;
        this['password_expires_at'] = passwordExpiresAt;
        this['links'] = links;
        this['id'] = id;
        this['enabled'] = enabled;
    }
    KeystoneUserResult.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(KeystoneUserResult.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUserResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(KeystoneUserResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUserResult.prototype.withLastProjectId = function (lastProjectId) {
        this['last_project_id'] = lastProjectId;
        return this;
    };
    Object.defineProperty(KeystoneUserResult.prototype, "lastProjectId", {
        get: function () {
            return this['last_project_id'];
        },
        set: function (lastProjectId) {
            this['last_project_id'] = lastProjectId;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUserResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    KeystoneUserResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneUserResult.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(KeystoneUserResult.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUserResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    KeystoneUserResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    KeystoneUserResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    KeystoneUserResult.prototype.withPwdStrength = function (pwdStrength) {
        this['pwd_strength'] = pwdStrength;
        return this;
    };
    Object.defineProperty(KeystoneUserResult.prototype, "pwdStrength", {
        get: function () {
            return this['pwd_strength'];
        },
        set: function (pwdStrength) {
            this['pwd_strength'] = pwdStrength;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUserResult.prototype.withExtra = function (extra) {
        this['extra'] = extra;
        return this;
    };
    return KeystoneUserResult;
}());
exports.KeystoneUserResult = KeystoneUserResult;


/***/ }),

/***/ 15881:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneUserResultExtra = void 0;
var KeystoneUserResultExtra = /** @class */ (function () {
    function KeystoneUserResultExtra() {
    }
    KeystoneUserResultExtra.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    KeystoneUserResultExtra.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(KeystoneUserResultExtra.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneUserResultExtra.prototype.withLastProjectId = function (lastProjectId) {
        this['last_project_id'] = lastProjectId;
        return this;
    };
    Object.defineProperty(KeystoneUserResultExtra.prototype, "lastProjectId", {
        get: function () {
            return this['last_project_id'];
        },
        set: function (lastProjectId) {
            this['last_project_id'] = lastProjectId;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneUserResultExtra;
}());
exports.KeystoneUserResultExtra = KeystoneUserResultExtra;


/***/ }),

/***/ 62201:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneValidateTokenRequest = void 0;
var KeystoneValidateTokenRequest = /** @class */ (function () {
    function KeystoneValidateTokenRequest(xSubjectToken) {
        this['X-Subject-Token'] = xSubjectToken;
    }
    KeystoneValidateTokenRequest.prototype.withXSubjectToken = function (xSubjectToken) {
        this['X-Subject-Token'] = xSubjectToken;
        return this;
    };
    Object.defineProperty(KeystoneValidateTokenRequest.prototype, "xSubjectToken", {
        get: function () {
            return this['X-Subject-Token'];
        },
        set: function (xSubjectToken) {
            this['X-Subject-Token'] = xSubjectToken;
        },
        enumerable: false,
        configurable: true
    });
    KeystoneValidateTokenRequest.prototype.withNocatalog = function (nocatalog) {
        this['nocatalog'] = nocatalog;
        return this;
    };
    return KeystoneValidateTokenRequest;
}());
exports.KeystoneValidateTokenRequest = KeystoneValidateTokenRequest;


/***/ }),

/***/ 81110:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeystoneValidateTokenResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var KeystoneValidateTokenResponse = /** @class */ (function (_super) {
    __extends(KeystoneValidateTokenResponse, _super);
    function KeystoneValidateTokenResponse() {
        return _super.call(this) || this;
    }
    KeystoneValidateTokenResponse.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    KeystoneValidateTokenResponse.prototype.withXSubjectToken = function (xSubjectToken) {
        this['X-Subject-Token'] = xSubjectToken;
        return this;
    };
    Object.defineProperty(KeystoneValidateTokenResponse.prototype, "xSubjectToken", {
        get: function () {
            return this['X-Subject-Token'];
        },
        set: function (xSubjectToken) {
            this['X-Subject-Token'] = xSubjectToken;
        },
        enumerable: false,
        configurable: true
    });
    return KeystoneValidateTokenResponse;
}(SdkResponse_1.SdkResponse));
exports.KeystoneValidateTokenResponse = KeystoneValidateTokenResponse;


/***/ }),

/***/ 76501:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Links = void 0;
var Links = /** @class */ (function () {
    function Links(self, previous, next) {
        this['self'] = self;
        this['previous'] = previous;
        this['next'] = next;
    }
    Links.prototype.withSelf = function (self) {
        this['self'] = self;
        return this;
    };
    Links.prototype.withPrevious = function (previous) {
        this['previous'] = previous;
        return this;
    };
    Links.prototype.withNext = function (next) {
        this['next'] = next;
        return this;
    };
    return Links;
}());
exports.Links = Links;


/***/ }),

/***/ 72380:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LinksSelf = void 0;
var LinksSelf = /** @class */ (function () {
    function LinksSelf(self) {
        this['self'] = self;
    }
    LinksSelf.prototype.withSelf = function (self) {
        this['self'] = self;
        return this;
    };
    return LinksSelf;
}());
exports.LinksSelf = LinksSelf;


/***/ }),

/***/ 78897:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListAgenciesRequest = void 0;
var ListAgenciesRequest = /** @class */ (function () {
    function ListAgenciesRequest(domainId) {
        this['domain_id'] = domainId;
    }
    ListAgenciesRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ListAgenciesRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ListAgenciesRequest.prototype.withTrustDomainId = function (trustDomainId) {
        this['trust_domain_id'] = trustDomainId;
        return this;
    };
    Object.defineProperty(ListAgenciesRequest.prototype, "trustDomainId", {
        get: function () {
            return this['trust_domain_id'];
        },
        set: function (trustDomainId) {
            this['trust_domain_id'] = trustDomainId;
        },
        enumerable: false,
        configurable: true
    });
    ListAgenciesRequest.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return ListAgenciesRequest;
}());
exports.ListAgenciesRequest = ListAgenciesRequest;


/***/ }),

/***/ 94427:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListAgenciesResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListAgenciesResponse = /** @class */ (function (_super) {
    __extends(ListAgenciesResponse, _super);
    function ListAgenciesResponse() {
        return _super.call(this) || this;
    }
    ListAgenciesResponse.prototype.withAgencies = function (agencies) {
        this['agencies'] = agencies;
        return this;
    };
    return ListAgenciesResponse;
}(SdkResponse_1.SdkResponse));
exports.ListAgenciesResponse = ListAgenciesResponse;


/***/ }),

/***/ 87083:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListAllProjectsPermissionsForAgencyRequest = void 0;
var ListAllProjectsPermissionsForAgencyRequest = /** @class */ (function () {
    function ListAllProjectsPermissionsForAgencyRequest(agencyId, domainId) {
        this['agency_id'] = agencyId;
        this['domain_id'] = domainId;
    }
    ListAllProjectsPermissionsForAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(ListAllProjectsPermissionsForAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    ListAllProjectsPermissionsForAgencyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ListAllProjectsPermissionsForAgencyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    return ListAllProjectsPermissionsForAgencyRequest;
}());
exports.ListAllProjectsPermissionsForAgencyRequest = ListAllProjectsPermissionsForAgencyRequest;


/***/ }),

/***/ 79217:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListAllProjectsPermissionsForAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListAllProjectsPermissionsForAgencyResponse = /** @class */ (function (_super) {
    __extends(ListAllProjectsPermissionsForAgencyResponse, _super);
    function ListAllProjectsPermissionsForAgencyResponse() {
        return _super.call(this) || this;
    }
    ListAllProjectsPermissionsForAgencyResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    ListAllProjectsPermissionsForAgencyResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return ListAllProjectsPermissionsForAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.ListAllProjectsPermissionsForAgencyResponse = ListAllProjectsPermissionsForAgencyResponse;


/***/ }),

/***/ 4131:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListCustomPoliciesRequest = void 0;
var ListCustomPoliciesRequest = /** @class */ (function () {
    function ListCustomPoliciesRequest() {
    }
    ListCustomPoliciesRequest.prototype.withPage = function (page) {
        this['page'] = page;
        return this;
    };
    ListCustomPoliciesRequest.prototype.withPerPage = function (perPage) {
        this['per_page'] = perPage;
        return this;
    };
    Object.defineProperty(ListCustomPoliciesRequest.prototype, "perPage", {
        get: function () {
            return this['per_page'];
        },
        set: function (perPage) {
            this['per_page'] = perPage;
        },
        enumerable: false,
        configurable: true
    });
    return ListCustomPoliciesRequest;
}());
exports.ListCustomPoliciesRequest = ListCustomPoliciesRequest;


/***/ }),

/***/ 60101:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListCustomPoliciesResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListCustomPoliciesResponse = /** @class */ (function (_super) {
    __extends(ListCustomPoliciesResponse, _super);
    function ListCustomPoliciesResponse() {
        return _super.call(this) || this;
    }
    ListCustomPoliciesResponse.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    ListCustomPoliciesResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    ListCustomPoliciesResponse.prototype.withTotalNumber = function (totalNumber) {
        this['total_number'] = totalNumber;
        return this;
    };
    Object.defineProperty(ListCustomPoliciesResponse.prototype, "totalNumber", {
        get: function () {
            return this['total_number'];
        },
        set: function (totalNumber) {
            this['total_number'] = totalNumber;
        },
        enumerable: false,
        configurable: true
    });
    return ListCustomPoliciesResponse;
}(SdkResponse_1.SdkResponse));
exports.ListCustomPoliciesResponse = ListCustomPoliciesResponse;


/***/ }),

/***/ 92966:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListDomainPermissionsForAgencyRequest = void 0;
var ListDomainPermissionsForAgencyRequest = /** @class */ (function () {
    function ListDomainPermissionsForAgencyRequest(domainId, agencyId) {
        this['domain_id'] = domainId;
        this['agency_id'] = agencyId;
    }
    ListDomainPermissionsForAgencyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ListDomainPermissionsForAgencyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ListDomainPermissionsForAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(ListDomainPermissionsForAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    return ListDomainPermissionsForAgencyRequest;
}());
exports.ListDomainPermissionsForAgencyRequest = ListDomainPermissionsForAgencyRequest;


/***/ }),

/***/ 54117:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListDomainPermissionsForAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListDomainPermissionsForAgencyResponse = /** @class */ (function (_super) {
    __extends(ListDomainPermissionsForAgencyResponse, _super);
    function ListDomainPermissionsForAgencyResponse() {
        return _super.call(this) || this;
    }
    ListDomainPermissionsForAgencyResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    return ListDomainPermissionsForAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.ListDomainPermissionsForAgencyResponse = ListDomainPermissionsForAgencyResponse;


/***/ }),

/***/ 15781:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListEnterpriseProjectsForGroupRequest = void 0;
var ListEnterpriseProjectsForGroupRequest = /** @class */ (function () {
    function ListEnterpriseProjectsForGroupRequest(groupId) {
        this['group_id'] = groupId;
    }
    ListEnterpriseProjectsForGroupRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(ListEnterpriseProjectsForGroupRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    return ListEnterpriseProjectsForGroupRequest;
}());
exports.ListEnterpriseProjectsForGroupRequest = ListEnterpriseProjectsForGroupRequest;


/***/ }),

/***/ 26303:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListEnterpriseProjectsForGroupResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListEnterpriseProjectsForGroupResponse = /** @class */ (function (_super) {
    __extends(ListEnterpriseProjectsForGroupResponse, _super);
    function ListEnterpriseProjectsForGroupResponse() {
        return _super.call(this) || this;
    }
    ListEnterpriseProjectsForGroupResponse.prototype.withEnterpriseProjects = function (enterpriseProjects) {
        this['enterprise-projects'] = enterpriseProjects;
        return this;
    };
    Object.defineProperty(ListEnterpriseProjectsForGroupResponse.prototype, "enterpriseProjects", {
        get: function () {
            return this['enterprise-projects'];
        },
        set: function (enterpriseProjects) {
            this['enterprise-projects'] = enterpriseProjects;
        },
        enumerable: false,
        configurable: true
    });
    return ListEnterpriseProjectsForGroupResponse;
}(SdkResponse_1.SdkResponse));
exports.ListEnterpriseProjectsForGroupResponse = ListEnterpriseProjectsForGroupResponse;


/***/ }),

/***/ 1742:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListEnterpriseProjectsForUserRequest = void 0;
var ListEnterpriseProjectsForUserRequest = /** @class */ (function () {
    function ListEnterpriseProjectsForUserRequest(userId) {
        this['user_id'] = userId;
    }
    ListEnterpriseProjectsForUserRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(ListEnterpriseProjectsForUserRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return ListEnterpriseProjectsForUserRequest;
}());
exports.ListEnterpriseProjectsForUserRequest = ListEnterpriseProjectsForUserRequest;


/***/ }),

/***/ 77725:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListEnterpriseProjectsForUserResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListEnterpriseProjectsForUserResponse = /** @class */ (function (_super) {
    __extends(ListEnterpriseProjectsForUserResponse, _super);
    function ListEnterpriseProjectsForUserResponse() {
        return _super.call(this) || this;
    }
    ListEnterpriseProjectsForUserResponse.prototype.withEnterpriseProjects = function (enterpriseProjects) {
        this['enterprise-projects'] = enterpriseProjects;
        return this;
    };
    Object.defineProperty(ListEnterpriseProjectsForUserResponse.prototype, "enterpriseProjects", {
        get: function () {
            return this['enterprise-projects'];
        },
        set: function (enterpriseProjects) {
            this['enterprise-projects'] = enterpriseProjects;
        },
        enumerable: false,
        configurable: true
    });
    return ListEnterpriseProjectsForUserResponse;
}(SdkResponse_1.SdkResponse));
exports.ListEnterpriseProjectsForUserResponse = ListEnterpriseProjectsForUserResponse;


/***/ }),

/***/ 19762:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListEnterpriseProjectsResDetail = void 0;
var ListEnterpriseProjectsResDetail = /** @class */ (function () {
    function ListEnterpriseProjectsResDetail(projectId) {
        this['projectId'] = projectId;
    }
    ListEnterpriseProjectsResDetail.prototype.withProjectId = function (projectId) {
        this['projectId'] = projectId;
        return this;
    };
    return ListEnterpriseProjectsResDetail;
}());
exports.ListEnterpriseProjectsResDetail = ListEnterpriseProjectsResDetail;


/***/ }),

/***/ 65873:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListGroupsForEnterpriseProjectRequest = void 0;
var ListGroupsForEnterpriseProjectRequest = /** @class */ (function () {
    function ListGroupsForEnterpriseProjectRequest(enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
    }
    ListGroupsForEnterpriseProjectRequest.prototype.withEnterpriseProjectId = function (enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        return this;
    };
    Object.defineProperty(ListGroupsForEnterpriseProjectRequest.prototype, "enterpriseProjectId", {
        get: function () {
            return this['enterprise_project_id'];
        },
        set: function (enterpriseProjectId) {
            this['enterprise_project_id'] = enterpriseProjectId;
        },
        enumerable: false,
        configurable: true
    });
    return ListGroupsForEnterpriseProjectRequest;
}());
exports.ListGroupsForEnterpriseProjectRequest = ListGroupsForEnterpriseProjectRequest;


/***/ }),

/***/ 82600:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListGroupsForEnterpriseProjectResDetail = void 0;
var ListGroupsForEnterpriseProjectResDetail = /** @class */ (function () {
    function ListGroupsForEnterpriseProjectResDetail(createTime, description, domainId, id, name) {
        this['createTime'] = createTime;
        this['description'] = description;
        this['domainId'] = domainId;
        this['id'] = id;
        this['name'] = name;
    }
    ListGroupsForEnterpriseProjectResDetail.prototype.withCreateTime = function (createTime) {
        this['createTime'] = createTime;
        return this;
    };
    ListGroupsForEnterpriseProjectResDetail.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    ListGroupsForEnterpriseProjectResDetail.prototype.withDomainId = function (domainId) {
        this['domainId'] = domainId;
        return this;
    };
    ListGroupsForEnterpriseProjectResDetail.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ListGroupsForEnterpriseProjectResDetail.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return ListGroupsForEnterpriseProjectResDetail;
}());
exports.ListGroupsForEnterpriseProjectResDetail = ListGroupsForEnterpriseProjectResDetail;


/***/ }),

/***/ 2179:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListGroupsForEnterpriseProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListGroupsForEnterpriseProjectResponse = /** @class */ (function (_super) {
    __extends(ListGroupsForEnterpriseProjectResponse, _super);
    function ListGroupsForEnterpriseProjectResponse() {
        return _super.call(this) || this;
    }
    ListGroupsForEnterpriseProjectResponse.prototype.withGroups = function (groups) {
        this['groups'] = groups;
        return this;
    };
    return ListGroupsForEnterpriseProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.ListGroupsForEnterpriseProjectResponse = ListGroupsForEnterpriseProjectResponse;


/***/ }),

/***/ 20338:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListPermanentAccessKeysRequest = void 0;
var ListPermanentAccessKeysRequest = /** @class */ (function () {
    function ListPermanentAccessKeysRequest() {
    }
    ListPermanentAccessKeysRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(ListPermanentAccessKeysRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return ListPermanentAccessKeysRequest;
}());
exports.ListPermanentAccessKeysRequest = ListPermanentAccessKeysRequest;


/***/ }),

/***/ 85958:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListPermanentAccessKeysResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListPermanentAccessKeysResponse = /** @class */ (function (_super) {
    __extends(ListPermanentAccessKeysResponse, _super);
    function ListPermanentAccessKeysResponse() {
        return _super.call(this) || this;
    }
    ListPermanentAccessKeysResponse.prototype.withCredentials = function (credentials) {
        this['credentials'] = credentials;
        return this;
    };
    return ListPermanentAccessKeysResponse;
}(SdkResponse_1.SdkResponse));
exports.ListPermanentAccessKeysResponse = ListPermanentAccessKeysResponse;


/***/ }),

/***/ 56827:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListProjectPermissionsForAgencyRequest = void 0;
var ListProjectPermissionsForAgencyRequest = /** @class */ (function () {
    function ListProjectPermissionsForAgencyRequest(agencyId) {
        this['agency_id'] = agencyId;
    }
    ListProjectPermissionsForAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(ListProjectPermissionsForAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    return ListProjectPermissionsForAgencyRequest;
}());
exports.ListProjectPermissionsForAgencyRequest = ListProjectPermissionsForAgencyRequest;


/***/ }),

/***/ 20416:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListProjectPermissionsForAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListProjectPermissionsForAgencyResponse = /** @class */ (function (_super) {
    __extends(ListProjectPermissionsForAgencyResponse, _super);
    function ListProjectPermissionsForAgencyResponse() {
        return _super.call(this) || this;
    }
    ListProjectPermissionsForAgencyResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    return ListProjectPermissionsForAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.ListProjectPermissionsForAgencyResponse = ListProjectPermissionsForAgencyResponse;


/***/ }),

/***/ 28728:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListRolesForGroupOnEnterpriseProjectRequest = void 0;
var ListRolesForGroupOnEnterpriseProjectRequest = /** @class */ (function () {
    function ListRolesForGroupOnEnterpriseProjectRequest(enterpriseProjectId, groupId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        this['group_id'] = groupId;
    }
    ListRolesForGroupOnEnterpriseProjectRequest.prototype.withEnterpriseProjectId = function (enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        return this;
    };
    Object.defineProperty(ListRolesForGroupOnEnterpriseProjectRequest.prototype, "enterpriseProjectId", {
        get: function () {
            return this['enterprise_project_id'];
        },
        set: function (enterpriseProjectId) {
            this['enterprise_project_id'] = enterpriseProjectId;
        },
        enumerable: false,
        configurable: true
    });
    ListRolesForGroupOnEnterpriseProjectRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(ListRolesForGroupOnEnterpriseProjectRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    return ListRolesForGroupOnEnterpriseProjectRequest;
}());
exports.ListRolesForGroupOnEnterpriseProjectRequest = ListRolesForGroupOnEnterpriseProjectRequest;


/***/ }),

/***/ 78312:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListRolesForGroupOnEnterpriseProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListRolesForGroupOnEnterpriseProjectResponse = /** @class */ (function (_super) {
    __extends(ListRolesForGroupOnEnterpriseProjectResponse, _super);
    function ListRolesForGroupOnEnterpriseProjectResponse() {
        return _super.call(this) || this;
    }
    ListRolesForGroupOnEnterpriseProjectResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    return ListRolesForGroupOnEnterpriseProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.ListRolesForGroupOnEnterpriseProjectResponse = ListRolesForGroupOnEnterpriseProjectResponse;


/***/ }),

/***/ 42822:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListRolesForUserOnEnterpriseProjectRequest = void 0;
var ListRolesForUserOnEnterpriseProjectRequest = /** @class */ (function () {
    function ListRolesForUserOnEnterpriseProjectRequest(enterpriseProjectId, userId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        this['user_id'] = userId;
    }
    ListRolesForUserOnEnterpriseProjectRequest.prototype.withEnterpriseProjectId = function (enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        return this;
    };
    Object.defineProperty(ListRolesForUserOnEnterpriseProjectRequest.prototype, "enterpriseProjectId", {
        get: function () {
            return this['enterprise_project_id'];
        },
        set: function (enterpriseProjectId) {
            this['enterprise_project_id'] = enterpriseProjectId;
        },
        enumerable: false,
        configurable: true
    });
    ListRolesForUserOnEnterpriseProjectRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(ListRolesForUserOnEnterpriseProjectRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return ListRolesForUserOnEnterpriseProjectRequest;
}());
exports.ListRolesForUserOnEnterpriseProjectRequest = ListRolesForUserOnEnterpriseProjectRequest;


/***/ }),

/***/ 21321:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListRolesForUserOnEnterpriseProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListRolesForUserOnEnterpriseProjectResponse = /** @class */ (function (_super) {
    __extends(ListRolesForUserOnEnterpriseProjectResponse, _super);
    function ListRolesForUserOnEnterpriseProjectResponse() {
        return _super.call(this) || this;
    }
    ListRolesForUserOnEnterpriseProjectResponse.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    return ListRolesForUserOnEnterpriseProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.ListRolesForUserOnEnterpriseProjectResponse = ListRolesForUserOnEnterpriseProjectResponse;


/***/ }),

/***/ 59847:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListUserLoginProtectsRequest = void 0;
var ListUserLoginProtectsRequest = /** @class */ (function () {
    function ListUserLoginProtectsRequest() {
    }
    return ListUserLoginProtectsRequest;
}());
exports.ListUserLoginProtectsRequest = ListUserLoginProtectsRequest;


/***/ }),

/***/ 24871:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListUserLoginProtectsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListUserLoginProtectsResponse = /** @class */ (function (_super) {
    __extends(ListUserLoginProtectsResponse, _super);
    function ListUserLoginProtectsResponse() {
        return _super.call(this) || this;
    }
    ListUserLoginProtectsResponse.prototype.withLoginProtects = function (loginProtects) {
        this['login_protects'] = loginProtects;
        return this;
    };
    Object.defineProperty(ListUserLoginProtectsResponse.prototype, "loginProtects", {
        get: function () {
            return this['login_protects'];
        },
        set: function (loginProtects) {
            this['login_protects'] = loginProtects;
        },
        enumerable: false,
        configurable: true
    });
    return ListUserLoginProtectsResponse;
}(SdkResponse_1.SdkResponse));
exports.ListUserLoginProtectsResponse = ListUserLoginProtectsResponse;


/***/ }),

/***/ 4241:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListUserMfaDevicesRequest = void 0;
var ListUserMfaDevicesRequest = /** @class */ (function () {
    function ListUserMfaDevicesRequest() {
    }
    return ListUserMfaDevicesRequest;
}());
exports.ListUserMfaDevicesRequest = ListUserMfaDevicesRequest;


/***/ }),

/***/ 99726:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListUserMfaDevicesResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListUserMfaDevicesResponse = /** @class */ (function (_super) {
    __extends(ListUserMfaDevicesResponse, _super);
    function ListUserMfaDevicesResponse() {
        return _super.call(this) || this;
    }
    ListUserMfaDevicesResponse.prototype.withVirtualMfaDevices = function (virtualMfaDevices) {
        this['virtual_mfa_devices'] = virtualMfaDevices;
        return this;
    };
    Object.defineProperty(ListUserMfaDevicesResponse.prototype, "virtualMfaDevices", {
        get: function () {
            return this['virtual_mfa_devices'];
        },
        set: function (virtualMfaDevices) {
            this['virtual_mfa_devices'] = virtualMfaDevices;
        },
        enumerable: false,
        configurable: true
    });
    return ListUserMfaDevicesResponse;
}(SdkResponse_1.SdkResponse));
exports.ListUserMfaDevicesResponse = ListUserMfaDevicesResponse;


/***/ }),

/***/ 52849:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListUsersForEnterpriseProjectRequest = void 0;
var ListUsersForEnterpriseProjectRequest = /** @class */ (function () {
    function ListUsersForEnterpriseProjectRequest(enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
    }
    ListUsersForEnterpriseProjectRequest.prototype.withEnterpriseProjectId = function (enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        return this;
    };
    Object.defineProperty(ListUsersForEnterpriseProjectRequest.prototype, "enterpriseProjectId", {
        get: function () {
            return this['enterprise_project_id'];
        },
        set: function (enterpriseProjectId) {
            this['enterprise_project_id'] = enterpriseProjectId;
        },
        enumerable: false,
        configurable: true
    });
    return ListUsersForEnterpriseProjectRequest;
}());
exports.ListUsersForEnterpriseProjectRequest = ListUsersForEnterpriseProjectRequest;


/***/ }),

/***/ 56448:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListUsersForEnterpriseProjectResUsers = void 0;
var ListUsersForEnterpriseProjectResUsers = /** @class */ (function () {
    function ListUsersForEnterpriseProjectResUsers(domainId, id, name, enabled, description, policyNum, lastestPolicyTime) {
        this['domain_id'] = domainId;
        this['id'] = id;
        this['name'] = name;
        this['enabled'] = enabled;
        this['description'] = description;
        this['policy_num'] = policyNum;
        this['lastest_policy_time'] = lastestPolicyTime;
    }
    ListUsersForEnterpriseProjectResUsers.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ListUsersForEnterpriseProjectResUsers.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ListUsersForEnterpriseProjectResUsers.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ListUsersForEnterpriseProjectResUsers.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    ListUsersForEnterpriseProjectResUsers.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    ListUsersForEnterpriseProjectResUsers.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    ListUsersForEnterpriseProjectResUsers.prototype.withPolicyNum = function (policyNum) {
        this['policy_num'] = policyNum;
        return this;
    };
    Object.defineProperty(ListUsersForEnterpriseProjectResUsers.prototype, "policyNum", {
        get: function () {
            return this['policy_num'];
        },
        set: function (policyNum) {
            this['policy_num'] = policyNum;
        },
        enumerable: false,
        configurable: true
    });
    ListUsersForEnterpriseProjectResUsers.prototype.withLastestPolicyTime = function (lastestPolicyTime) {
        this['lastest_policy_time'] = lastestPolicyTime;
        return this;
    };
    Object.defineProperty(ListUsersForEnterpriseProjectResUsers.prototype, "lastestPolicyTime", {
        get: function () {
            return this['lastest_policy_time'];
        },
        set: function (lastestPolicyTime) {
            this['lastest_policy_time'] = lastestPolicyTime;
        },
        enumerable: false,
        configurable: true
    });
    return ListUsersForEnterpriseProjectResUsers;
}());
exports.ListUsersForEnterpriseProjectResUsers = ListUsersForEnterpriseProjectResUsers;


/***/ }),

/***/ 22774:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ListUsersForEnterpriseProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ListUsersForEnterpriseProjectResponse = /** @class */ (function (_super) {
    __extends(ListUsersForEnterpriseProjectResponse, _super);
    function ListUsersForEnterpriseProjectResponse() {
        return _super.call(this) || this;
    }
    ListUsersForEnterpriseProjectResponse.prototype.withUsers = function (users) {
        this['users'] = users;
        return this;
    };
    return ListUsersForEnterpriseProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.ListUsersForEnterpriseProjectResponse = ListUsersForEnterpriseProjectResponse;


/***/ }),

/***/ 24841:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginPolicyOption = void 0;
var LoginPolicyOption = /** @class */ (function () {
    function LoginPolicyOption(accountValidityPeriod, customInfoForLogin, lockoutDuration, loginFailedTimes, periodWithLoginFailures, sessionTimeout, showRecentLoginInfo) {
        this['account_validity_period'] = accountValidityPeriod;
        this['custom_info_for_login'] = customInfoForLogin;
        this['lockout_duration'] = lockoutDuration;
        this['login_failed_times'] = loginFailedTimes;
        this['period_with_login_failures'] = periodWithLoginFailures;
        this['session_timeout'] = sessionTimeout;
        this['show_recent_login_info'] = showRecentLoginInfo;
    }
    LoginPolicyOption.prototype.withAccountValidityPeriod = function (accountValidityPeriod) {
        this['account_validity_period'] = accountValidityPeriod;
        return this;
    };
    Object.defineProperty(LoginPolicyOption.prototype, "accountValidityPeriod", {
        get: function () {
            return this['account_validity_period'];
        },
        set: function (accountValidityPeriod) {
            this['account_validity_period'] = accountValidityPeriod;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyOption.prototype.withCustomInfoForLogin = function (customInfoForLogin) {
        this['custom_info_for_login'] = customInfoForLogin;
        return this;
    };
    Object.defineProperty(LoginPolicyOption.prototype, "customInfoForLogin", {
        get: function () {
            return this['custom_info_for_login'];
        },
        set: function (customInfoForLogin) {
            this['custom_info_for_login'] = customInfoForLogin;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyOption.prototype.withLockoutDuration = function (lockoutDuration) {
        this['lockout_duration'] = lockoutDuration;
        return this;
    };
    Object.defineProperty(LoginPolicyOption.prototype, "lockoutDuration", {
        get: function () {
            return this['lockout_duration'];
        },
        set: function (lockoutDuration) {
            this['lockout_duration'] = lockoutDuration;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyOption.prototype.withLoginFailedTimes = function (loginFailedTimes) {
        this['login_failed_times'] = loginFailedTimes;
        return this;
    };
    Object.defineProperty(LoginPolicyOption.prototype, "loginFailedTimes", {
        get: function () {
            return this['login_failed_times'];
        },
        set: function (loginFailedTimes) {
            this['login_failed_times'] = loginFailedTimes;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyOption.prototype.withPeriodWithLoginFailures = function (periodWithLoginFailures) {
        this['period_with_login_failures'] = periodWithLoginFailures;
        return this;
    };
    Object.defineProperty(LoginPolicyOption.prototype, "periodWithLoginFailures", {
        get: function () {
            return this['period_with_login_failures'];
        },
        set: function (periodWithLoginFailures) {
            this['period_with_login_failures'] = periodWithLoginFailures;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyOption.prototype.withSessionTimeout = function (sessionTimeout) {
        this['session_timeout'] = sessionTimeout;
        return this;
    };
    Object.defineProperty(LoginPolicyOption.prototype, "sessionTimeout", {
        get: function () {
            return this['session_timeout'];
        },
        set: function (sessionTimeout) {
            this['session_timeout'] = sessionTimeout;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyOption.prototype.withShowRecentLoginInfo = function (showRecentLoginInfo) {
        this['show_recent_login_info'] = showRecentLoginInfo;
        return this;
    };
    Object.defineProperty(LoginPolicyOption.prototype, "showRecentLoginInfo", {
        get: function () {
            return this['show_recent_login_info'];
        },
        set: function (showRecentLoginInfo) {
            this['show_recent_login_info'] = showRecentLoginInfo;
        },
        enumerable: false,
        configurable: true
    });
    return LoginPolicyOption;
}());
exports.LoginPolicyOption = LoginPolicyOption;


/***/ }),

/***/ 72247:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginPolicyResult = void 0;
var LoginPolicyResult = /** @class */ (function () {
    function LoginPolicyResult(accountValidityPeriod, customInfoForLogin, lockoutDuration, loginFailedTimes, periodWithLoginFailures, sessionTimeout, showRecentLoginInfo) {
        this['account_validity_period'] = accountValidityPeriod;
        this['custom_info_for_login'] = customInfoForLogin;
        this['lockout_duration'] = lockoutDuration;
        this['login_failed_times'] = loginFailedTimes;
        this['period_with_login_failures'] = periodWithLoginFailures;
        this['session_timeout'] = sessionTimeout;
        this['show_recent_login_info'] = showRecentLoginInfo;
    }
    LoginPolicyResult.prototype.withAccountValidityPeriod = function (accountValidityPeriod) {
        this['account_validity_period'] = accountValidityPeriod;
        return this;
    };
    Object.defineProperty(LoginPolicyResult.prototype, "accountValidityPeriod", {
        get: function () {
            return this['account_validity_period'];
        },
        set: function (accountValidityPeriod) {
            this['account_validity_period'] = accountValidityPeriod;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyResult.prototype.withCustomInfoForLogin = function (customInfoForLogin) {
        this['custom_info_for_login'] = customInfoForLogin;
        return this;
    };
    Object.defineProperty(LoginPolicyResult.prototype, "customInfoForLogin", {
        get: function () {
            return this['custom_info_for_login'];
        },
        set: function (customInfoForLogin) {
            this['custom_info_for_login'] = customInfoForLogin;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyResult.prototype.withLockoutDuration = function (lockoutDuration) {
        this['lockout_duration'] = lockoutDuration;
        return this;
    };
    Object.defineProperty(LoginPolicyResult.prototype, "lockoutDuration", {
        get: function () {
            return this['lockout_duration'];
        },
        set: function (lockoutDuration) {
            this['lockout_duration'] = lockoutDuration;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyResult.prototype.withLoginFailedTimes = function (loginFailedTimes) {
        this['login_failed_times'] = loginFailedTimes;
        return this;
    };
    Object.defineProperty(LoginPolicyResult.prototype, "loginFailedTimes", {
        get: function () {
            return this['login_failed_times'];
        },
        set: function (loginFailedTimes) {
            this['login_failed_times'] = loginFailedTimes;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyResult.prototype.withPeriodWithLoginFailures = function (periodWithLoginFailures) {
        this['period_with_login_failures'] = periodWithLoginFailures;
        return this;
    };
    Object.defineProperty(LoginPolicyResult.prototype, "periodWithLoginFailures", {
        get: function () {
            return this['period_with_login_failures'];
        },
        set: function (periodWithLoginFailures) {
            this['period_with_login_failures'] = periodWithLoginFailures;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyResult.prototype.withSessionTimeout = function (sessionTimeout) {
        this['session_timeout'] = sessionTimeout;
        return this;
    };
    Object.defineProperty(LoginPolicyResult.prototype, "sessionTimeout", {
        get: function () {
            return this['session_timeout'];
        },
        set: function (sessionTimeout) {
            this['session_timeout'] = sessionTimeout;
        },
        enumerable: false,
        configurable: true
    });
    LoginPolicyResult.prototype.withShowRecentLoginInfo = function (showRecentLoginInfo) {
        this['show_recent_login_info'] = showRecentLoginInfo;
        return this;
    };
    Object.defineProperty(LoginPolicyResult.prototype, "showRecentLoginInfo", {
        get: function () {
            return this['show_recent_login_info'];
        },
        set: function (showRecentLoginInfo) {
            this['show_recent_login_info'] = showRecentLoginInfo;
        },
        enumerable: false,
        configurable: true
    });
    return LoginPolicyResult;
}());
exports.LoginPolicyResult = LoginPolicyResult;


/***/ }),

/***/ 25825:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginProtectResult = void 0;
var LoginProtectResult = /** @class */ (function () {
    function LoginProtectResult(enabled, userId, verificationMethod) {
        this['enabled'] = enabled;
        this['user_id'] = userId;
        this['verification_method'] = verificationMethod;
    }
    LoginProtectResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    LoginProtectResult.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(LoginProtectResult.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    LoginProtectResult.prototype.withVerificationMethod = function (verificationMethod) {
        this['verification_method'] = verificationMethod;
        return this;
    };
    Object.defineProperty(LoginProtectResult.prototype, "verificationMethod", {
        get: function () {
            return this['verification_method'];
        },
        set: function (verificationMethod) {
            this['verification_method'] = verificationMethod;
        },
        enumerable: false,
        configurable: true
    });
    return LoginProtectResult;
}());
exports.LoginProtectResult = LoginProtectResult;


/***/ }),

/***/ 44587:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginToken = void 0;
var LoginToken = /** @class */ (function () {
    function LoginToken(domainId, expiresAt, method, userId, userName, sessionId) {
        this['domain_id'] = domainId;
        this['expires_at'] = expiresAt;
        this['method'] = method;
        this['user_id'] = userId;
        this['user_name'] = userName;
        this['session_id'] = sessionId;
    }
    LoginToken.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(LoginToken.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    LoginToken.prototype.withExpiresAt = function (expiresAt) {
        this['expires_at'] = expiresAt;
        return this;
    };
    Object.defineProperty(LoginToken.prototype, "expiresAt", {
        get: function () {
            return this['expires_at'];
        },
        set: function (expiresAt) {
            this['expires_at'] = expiresAt;
        },
        enumerable: false,
        configurable: true
    });
    LoginToken.prototype.withMethod = function (method) {
        this['method'] = method;
        return this;
    };
    LoginToken.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(LoginToken.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    LoginToken.prototype.withUserName = function (userName) {
        this['user_name'] = userName;
        return this;
    };
    Object.defineProperty(LoginToken.prototype, "userName", {
        get: function () {
            return this['user_name'];
        },
        set: function (userName) {
            this['user_name'] = userName;
        },
        enumerable: false,
        configurable: true
    });
    LoginToken.prototype.withSessionId = function (sessionId) {
        this['session_id'] = sessionId;
        return this;
    };
    Object.defineProperty(LoginToken.prototype, "sessionId", {
        get: function () {
            return this['session_id'];
        },
        set: function (sessionId) {
            this['session_id'] = sessionId;
        },
        enumerable: false,
        configurable: true
    });
    LoginToken.prototype.withSessionUserId = function (sessionUserId) {
        this['session_user_id'] = sessionUserId;
        return this;
    };
    Object.defineProperty(LoginToken.prototype, "sessionUserId", {
        get: function () {
            return this['session_user_id'];
        },
        set: function (sessionUserId) {
            this['session_user_id'] = sessionUserId;
        },
        enumerable: false,
        configurable: true
    });
    LoginToken.prototype.withSessionName = function (sessionName) {
        this['session_name'] = sessionName;
        return this;
    };
    Object.defineProperty(LoginToken.prototype, "sessionName", {
        get: function () {
            return this['session_name'];
        },
        set: function (sessionName) {
            this['session_name'] = sessionName;
        },
        enumerable: false,
        configurable: true
    });
    LoginToken.prototype.withAssumedBy = function (assumedBy) {
        this['assumed_by'] = assumedBy;
        return this;
    };
    Object.defineProperty(LoginToken.prototype, "assumedBy", {
        get: function () {
            return this['assumed_by'];
        },
        set: function (assumedBy) {
            this['assumed_by'] = assumedBy;
        },
        enumerable: false,
        configurable: true
    });
    return LoginToken;
}());
exports.LoginToken = LoginToken;


/***/ }),

/***/ 62746:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginTokenAssumedBy = void 0;
var LoginTokenAssumedBy = /** @class */ (function () {
    function LoginTokenAssumedBy() {
    }
    LoginTokenAssumedBy.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return LoginTokenAssumedBy;
}());
exports.LoginTokenAssumedBy = LoginTokenAssumedBy;


/***/ }),

/***/ 1066:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginTokenAuth = void 0;
var LoginTokenAuth = /** @class */ (function () {
    function LoginTokenAuth(securitytoken) {
        this['securitytoken'] = securitytoken;
    }
    LoginTokenAuth.prototype.withSecuritytoken = function (securitytoken) {
        this['securitytoken'] = securitytoken;
        return this;
    };
    return LoginTokenAuth;
}());
exports.LoginTokenAuth = LoginTokenAuth;


/***/ }),

/***/ 75232:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginTokenDomain = void 0;
var LoginTokenDomain = /** @class */ (function () {
    function LoginTokenDomain() {
    }
    LoginTokenDomain.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    LoginTokenDomain.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return LoginTokenDomain;
}());
exports.LoginTokenDomain = LoginTokenDomain;


/***/ }),

/***/ 75328:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginTokenSecurityToken = void 0;
var LoginTokenSecurityToken = /** @class */ (function () {
    function LoginTokenSecurityToken(access, secret, id) {
        this['access'] = access;
        this['secret'] = secret;
        this['id'] = id;
    }
    LoginTokenSecurityToken.prototype.withAccess = function (access) {
        this['access'] = access;
        return this;
    };
    LoginTokenSecurityToken.prototype.withSecret = function (secret) {
        this['secret'] = secret;
        return this;
    };
    LoginTokenSecurityToken.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    LoginTokenSecurityToken.prototype.withDurationSeconds = function (durationSeconds) {
        this['duration_seconds'] = durationSeconds;
        return this;
    };
    Object.defineProperty(LoginTokenSecurityToken.prototype, "durationSeconds", {
        get: function () {
            return this['duration_seconds'];
        },
        set: function (durationSeconds) {
            this['duration_seconds'] = durationSeconds;
        },
        enumerable: false,
        configurable: true
    });
    return LoginTokenSecurityToken;
}());
exports.LoginTokenSecurityToken = LoginTokenSecurityToken;


/***/ }),

/***/ 46506:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoginTokenUser = void 0;
var LoginTokenUser = /** @class */ (function () {
    function LoginTokenUser() {
    }
    LoginTokenUser.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    LoginTokenUser.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    LoginTokenUser.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(LoginTokenUser.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    LoginTokenUser.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return LoginTokenUser;
}());
exports.LoginTokenUser = LoginTokenUser;


/***/ }),

/***/ 14858:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MappingOption = void 0;
var MappingOption = /** @class */ (function () {
    function MappingOption(rules) {
        this['rules'] = rules;
    }
    MappingOption.prototype.withRules = function (rules) {
        this['rules'] = rules;
        return this;
    };
    return MappingOption;
}());
exports.MappingOption = MappingOption;


/***/ }),

/***/ 71571:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MappingResult = void 0;
var MappingResult = /** @class */ (function () {
    function MappingResult(id, links, rules) {
        this['id'] = id;
        this['links'] = links;
        this['rules'] = rules;
    }
    MappingResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    MappingResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    MappingResult.prototype.withRules = function (rules) {
        this['rules'] = rules;
        return this;
    };
    return MappingResult;
}());
exports.MappingResult = MappingResult;


/***/ }),

/***/ 38465:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MappingRules = void 0;
var MappingRules = /** @class */ (function () {
    function MappingRules(local, remote) {
        this['local'] = local;
        this['remote'] = remote;
    }
    MappingRules.prototype.withLocal = function (local) {
        this['local'] = local;
        return this;
    };
    MappingRules.prototype.withRemote = function (remote) {
        this['remote'] = remote;
        return this;
    };
    return MappingRules;
}());
exports.MappingRules = MappingRules;


/***/ }),

/***/ 61189:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MfaAuth = void 0;
var MfaAuth = /** @class */ (function () {
    function MfaAuth(identity, scope) {
        this['identity'] = identity;
        this['scope'] = scope;
    }
    MfaAuth.prototype.withIdentity = function (identity) {
        this['identity'] = identity;
        return this;
    };
    MfaAuth.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    return MfaAuth;
}());
exports.MfaAuth = MfaAuth;


/***/ }),

/***/ 17582:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MfaDeviceResult = void 0;
var MfaDeviceResult = /** @class */ (function () {
    function MfaDeviceResult(serialNumber, userId) {
        this['serial_number'] = serialNumber;
        this['user_id'] = userId;
    }
    MfaDeviceResult.prototype.withSerialNumber = function (serialNumber) {
        this['serial_number'] = serialNumber;
        return this;
    };
    Object.defineProperty(MfaDeviceResult.prototype, "serialNumber", {
        get: function () {
            return this['serial_number'];
        },
        set: function (serialNumber) {
            this['serial_number'] = serialNumber;
        },
        enumerable: false,
        configurable: true
    });
    MfaDeviceResult.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(MfaDeviceResult.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return MfaDeviceResult;
}());
exports.MfaDeviceResult = MfaDeviceResult;


/***/ }),

/***/ 59233:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MfaIdentityMethodsEnum = exports.MfaIdentity = void 0;
var MfaIdentity = /** @class */ (function () {
    function MfaIdentity(methods, password, totp) {
        this['methods'] = methods;
        this['password'] = password;
        this['totp'] = totp;
    }
    MfaIdentity.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    MfaIdentity.prototype.withPassword = function (password) {
        this['password'] = password;
        return this;
    };
    MfaIdentity.prototype.withTotp = function (totp) {
        this['totp'] = totp;
        return this;
    };
    return MfaIdentity;
}());
exports.MfaIdentity = MfaIdentity;
/**
    * @export
    * @enum {string}
    */
var MfaIdentityMethodsEnum;
(function (MfaIdentityMethodsEnum) {
    MfaIdentityMethodsEnum["PASSWORD"] = "password";
    MfaIdentityMethodsEnum["TOTP"] = " totp";
})(MfaIdentityMethodsEnum = exports.MfaIdentityMethodsEnum || (exports.MfaIdentityMethodsEnum = {}));


/***/ }),

/***/ 20323:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MfaTotp = void 0;
var MfaTotp = /** @class */ (function () {
    function MfaTotp(user) {
        this['user'] = user;
    }
    MfaTotp.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return MfaTotp;
}());
exports.MfaTotp = MfaTotp;


/***/ }),

/***/ 42589:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MfaTotpUser = void 0;
var MfaTotpUser = /** @class */ (function () {
    function MfaTotpUser(id, passcode) {
        this['id'] = id;
        this['passcode'] = passcode;
    }
    MfaTotpUser.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    MfaTotpUser.prototype.withPasscode = function (passcode) {
        this['passcode'] = passcode;
        return this;
    };
    return MfaTotpUser;
}());
exports.MfaTotpUser = MfaTotpUser;


/***/ }),

/***/ 67297:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OpenIdConnectConfigResponseModeEnum = exports.OpenIdConnectConfigResponseTypeEnum = exports.OpenIdConnectConfig = void 0;
var OpenIdConnectConfig = /** @class */ (function () {
    function OpenIdConnectConfig(accessMode, idpUrl, clientId, authorizationEndpoint, scope, responseType, responseMode, signingKey) {
        this['access_mode'] = accessMode;
        this['idp_url'] = idpUrl;
        this['client_id'] = clientId;
        this['authorization_endpoint'] = authorizationEndpoint;
        this['scope'] = scope;
        this['response_type'] = responseType;
        this['response_mode'] = responseMode;
        this['signing_key'] = signingKey;
    }
    OpenIdConnectConfig.prototype.withAccessMode = function (accessMode) {
        this['access_mode'] = accessMode;
        return this;
    };
    Object.defineProperty(OpenIdConnectConfig.prototype, "accessMode", {
        get: function () {
            return this['access_mode'];
        },
        set: function (accessMode) {
            this['access_mode'] = accessMode;
        },
        enumerable: false,
        configurable: true
    });
    OpenIdConnectConfig.prototype.withIdpUrl = function (idpUrl) {
        this['idp_url'] = idpUrl;
        return this;
    };
    Object.defineProperty(OpenIdConnectConfig.prototype, "idpUrl", {
        get: function () {
            return this['idp_url'];
        },
        set: function (idpUrl) {
            this['idp_url'] = idpUrl;
        },
        enumerable: false,
        configurable: true
    });
    OpenIdConnectConfig.prototype.withClientId = function (clientId) {
        this['client_id'] = clientId;
        return this;
    };
    Object.defineProperty(OpenIdConnectConfig.prototype, "clientId", {
        get: function () {
            return this['client_id'];
        },
        set: function (clientId) {
            this['client_id'] = clientId;
        },
        enumerable: false,
        configurable: true
    });
    OpenIdConnectConfig.prototype.withAuthorizationEndpoint = function (authorizationEndpoint) {
        this['authorization_endpoint'] = authorizationEndpoint;
        return this;
    };
    Object.defineProperty(OpenIdConnectConfig.prototype, "authorizationEndpoint", {
        get: function () {
            return this['authorization_endpoint'];
        },
        set: function (authorizationEndpoint) {
            this['authorization_endpoint'] = authorizationEndpoint;
        },
        enumerable: false,
        configurable: true
    });
    OpenIdConnectConfig.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    OpenIdConnectConfig.prototype.withResponseType = function (responseType) {
        this['response_type'] = responseType;
        return this;
    };
    Object.defineProperty(OpenIdConnectConfig.prototype, "responseType", {
        get: function () {
            return this['response_type'];
        },
        set: function (responseType) {
            this['response_type'] = responseType;
        },
        enumerable: false,
        configurable: true
    });
    OpenIdConnectConfig.prototype.withResponseMode = function (responseMode) {
        this['response_mode'] = responseMode;
        return this;
    };
    Object.defineProperty(OpenIdConnectConfig.prototype, "responseMode", {
        get: function () {
            return this['response_mode'];
        },
        set: function (responseMode) {
            this['response_mode'] = responseMode;
        },
        enumerable: false,
        configurable: true
    });
    OpenIdConnectConfig.prototype.withSigningKey = function (signingKey) {
        this['signing_key'] = signingKey;
        return this;
    };
    Object.defineProperty(OpenIdConnectConfig.prototype, "signingKey", {
        get: function () {
            return this['signing_key'];
        },
        set: function (signingKey) {
            this['signing_key'] = signingKey;
        },
        enumerable: false,
        configurable: true
    });
    return OpenIdConnectConfig;
}());
exports.OpenIdConnectConfig = OpenIdConnectConfig;
/**
    * @export
    * @enum {string}
    */
var OpenIdConnectConfigResponseTypeEnum;
(function (OpenIdConnectConfigResponseTypeEnum) {
    OpenIdConnectConfigResponseTypeEnum["ID_TOKEN"] = "id_token";
})(OpenIdConnectConfigResponseTypeEnum = exports.OpenIdConnectConfigResponseTypeEnum || (exports.OpenIdConnectConfigResponseTypeEnum = {}));
/**
    * @export
    * @enum {string}
    */
var OpenIdConnectConfigResponseModeEnum;
(function (OpenIdConnectConfigResponseModeEnum) {
    OpenIdConnectConfigResponseModeEnum["FRAGMENT"] = "fragment";
    OpenIdConnectConfigResponseModeEnum["FORM_POST"] = "form_post";
})(OpenIdConnectConfigResponseModeEnum = exports.OpenIdConnectConfigResponseModeEnum || (exports.OpenIdConnectConfigResponseModeEnum = {}));


/***/ }),

/***/ 83933:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OsFederationInfo = void 0;
var OsFederationInfo = /** @class */ (function () {
    function OsFederationInfo(identityProvider, protocol, groups) {
        this['identity_provider'] = identityProvider;
        this['protocol'] = protocol;
        this['groups'] = groups;
    }
    OsFederationInfo.prototype.withIdentityProvider = function (identityProvider) {
        this['identity_provider'] = identityProvider;
        return this;
    };
    Object.defineProperty(OsFederationInfo.prototype, "identityProvider", {
        get: function () {
            return this['identity_provider'];
        },
        set: function (identityProvider) {
            this['identity_provider'] = identityProvider;
        },
        enumerable: false,
        configurable: true
    });
    OsFederationInfo.prototype.withProtocol = function (protocol) {
        this['protocol'] = protocol;
        return this;
    };
    OsFederationInfo.prototype.withGroups = function (groups) {
        this['groups'] = groups;
        return this;
    };
    return OsFederationInfo;
}());
exports.OsFederationInfo = OsFederationInfo;


/***/ }),

/***/ 85682:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OsfederationGroups = void 0;
var OsfederationGroups = /** @class */ (function () {
    function OsfederationGroups(id, name) {
        this['id'] = id;
        this['name'] = name;
    }
    OsfederationGroups.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    OsfederationGroups.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return OsfederationGroups;
}());
exports.OsfederationGroups = OsfederationGroups;


/***/ }),

/***/ 64230:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OsfederationIdentityprovider = void 0;
var OsfederationIdentityprovider = /** @class */ (function () {
    function OsfederationIdentityprovider(id) {
        this['id'] = id;
    }
    OsfederationIdentityprovider.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return OsfederationIdentityprovider;
}());
exports.OsfederationIdentityprovider = OsfederationIdentityprovider;


/***/ }),

/***/ 74293:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OsfederationProtocol = void 0;
var OsfederationProtocol = /** @class */ (function () {
    function OsfederationProtocol(id) {
        this['id'] = id;
    }
    OsfederationProtocol.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return OsfederationProtocol;
}());
exports.OsfederationProtocol = OsfederationProtocol;


/***/ }),

/***/ 87429:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PasswordPolicyOption = void 0;
var PasswordPolicyOption = /** @class */ (function () {
    function PasswordPolicyOption(maximumConsecutiveIdenticalChars, minimumPasswordAge, minimumPasswordLength, numberOfRecentPasswordsDisallowed, passwordNotUsernameOrInvert, passwordValidityPeriod, passwordCharCombination) {
        this['maximum_consecutive_identical_chars'] = maximumConsecutiveIdenticalChars;
        this['minimum_password_age'] = minimumPasswordAge;
        this['minimum_password_length'] = minimumPasswordLength;
        this['number_of_recent_passwords_disallowed'] = numberOfRecentPasswordsDisallowed;
        this['password_not_username_or_invert'] = passwordNotUsernameOrInvert;
        this['password_validity_period'] = passwordValidityPeriod;
        this['password_char_combination'] = passwordCharCombination;
    }
    PasswordPolicyOption.prototype.withMaximumConsecutiveIdenticalChars = function (maximumConsecutiveIdenticalChars) {
        this['maximum_consecutive_identical_chars'] = maximumConsecutiveIdenticalChars;
        return this;
    };
    Object.defineProperty(PasswordPolicyOption.prototype, "maximumConsecutiveIdenticalChars", {
        get: function () {
            return this['maximum_consecutive_identical_chars'];
        },
        set: function (maximumConsecutiveIdenticalChars) {
            this['maximum_consecutive_identical_chars'] = maximumConsecutiveIdenticalChars;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyOption.prototype.withMinimumPasswordAge = function (minimumPasswordAge) {
        this['minimum_password_age'] = minimumPasswordAge;
        return this;
    };
    Object.defineProperty(PasswordPolicyOption.prototype, "minimumPasswordAge", {
        get: function () {
            return this['minimum_password_age'];
        },
        set: function (minimumPasswordAge) {
            this['minimum_password_age'] = minimumPasswordAge;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyOption.prototype.withMinimumPasswordLength = function (minimumPasswordLength) {
        this['minimum_password_length'] = minimumPasswordLength;
        return this;
    };
    Object.defineProperty(PasswordPolicyOption.prototype, "minimumPasswordLength", {
        get: function () {
            return this['minimum_password_length'];
        },
        set: function (minimumPasswordLength) {
            this['minimum_password_length'] = minimumPasswordLength;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyOption.prototype.withNumberOfRecentPasswordsDisallowed = function (numberOfRecentPasswordsDisallowed) {
        this['number_of_recent_passwords_disallowed'] = numberOfRecentPasswordsDisallowed;
        return this;
    };
    Object.defineProperty(PasswordPolicyOption.prototype, "numberOfRecentPasswordsDisallowed", {
        get: function () {
            return this['number_of_recent_passwords_disallowed'];
        },
        set: function (numberOfRecentPasswordsDisallowed) {
            this['number_of_recent_passwords_disallowed'] = numberOfRecentPasswordsDisallowed;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyOption.prototype.withPasswordNotUsernameOrInvert = function (passwordNotUsernameOrInvert) {
        this['password_not_username_or_invert'] = passwordNotUsernameOrInvert;
        return this;
    };
    Object.defineProperty(PasswordPolicyOption.prototype, "passwordNotUsernameOrInvert", {
        get: function () {
            return this['password_not_username_or_invert'];
        },
        set: function (passwordNotUsernameOrInvert) {
            this['password_not_username_or_invert'] = passwordNotUsernameOrInvert;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyOption.prototype.withPasswordValidityPeriod = function (passwordValidityPeriod) {
        this['password_validity_period'] = passwordValidityPeriod;
        return this;
    };
    Object.defineProperty(PasswordPolicyOption.prototype, "passwordValidityPeriod", {
        get: function () {
            return this['password_validity_period'];
        },
        set: function (passwordValidityPeriod) {
            this['password_validity_period'] = passwordValidityPeriod;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyOption.prototype.withPasswordCharCombination = function (passwordCharCombination) {
        this['password_char_combination'] = passwordCharCombination;
        return this;
    };
    Object.defineProperty(PasswordPolicyOption.prototype, "passwordCharCombination", {
        get: function () {
            return this['password_char_combination'];
        },
        set: function (passwordCharCombination) {
            this['password_char_combination'] = passwordCharCombination;
        },
        enumerable: false,
        configurable: true
    });
    return PasswordPolicyOption;
}());
exports.PasswordPolicyOption = PasswordPolicyOption;


/***/ }),

/***/ 86809:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PasswordPolicyResult = void 0;
var PasswordPolicyResult = /** @class */ (function () {
    function PasswordPolicyResult(maximumConsecutiveIdenticalChars, maximumPasswordLength, minimumPasswordAge, minimumPasswordLength, numberOfRecentPasswordsDisallowed, passwordNotUsernameOrInvert, passwordRequirements, passwordValidityPeriod, passwordCharCombination) {
        this['maximum_consecutive_identical_chars'] = maximumConsecutiveIdenticalChars;
        this['maximum_password_length'] = maximumPasswordLength;
        this['minimum_password_age'] = minimumPasswordAge;
        this['minimum_password_length'] = minimumPasswordLength;
        this['number_of_recent_passwords_disallowed'] = numberOfRecentPasswordsDisallowed;
        this['password_not_username_or_invert'] = passwordNotUsernameOrInvert;
        this['password_requirements'] = passwordRequirements;
        this['password_validity_period'] = passwordValidityPeriod;
        this['password_char_combination'] = passwordCharCombination;
    }
    PasswordPolicyResult.prototype.withMaximumConsecutiveIdenticalChars = function (maximumConsecutiveIdenticalChars) {
        this['maximum_consecutive_identical_chars'] = maximumConsecutiveIdenticalChars;
        return this;
    };
    Object.defineProperty(PasswordPolicyResult.prototype, "maximumConsecutiveIdenticalChars", {
        get: function () {
            return this['maximum_consecutive_identical_chars'];
        },
        set: function (maximumConsecutiveIdenticalChars) {
            this['maximum_consecutive_identical_chars'] = maximumConsecutiveIdenticalChars;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyResult.prototype.withMaximumPasswordLength = function (maximumPasswordLength) {
        this['maximum_password_length'] = maximumPasswordLength;
        return this;
    };
    Object.defineProperty(PasswordPolicyResult.prototype, "maximumPasswordLength", {
        get: function () {
            return this['maximum_password_length'];
        },
        set: function (maximumPasswordLength) {
            this['maximum_password_length'] = maximumPasswordLength;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyResult.prototype.withMinimumPasswordAge = function (minimumPasswordAge) {
        this['minimum_password_age'] = minimumPasswordAge;
        return this;
    };
    Object.defineProperty(PasswordPolicyResult.prototype, "minimumPasswordAge", {
        get: function () {
            return this['minimum_password_age'];
        },
        set: function (minimumPasswordAge) {
            this['minimum_password_age'] = minimumPasswordAge;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyResult.prototype.withMinimumPasswordLength = function (minimumPasswordLength) {
        this['minimum_password_length'] = minimumPasswordLength;
        return this;
    };
    Object.defineProperty(PasswordPolicyResult.prototype, "minimumPasswordLength", {
        get: function () {
            return this['minimum_password_length'];
        },
        set: function (minimumPasswordLength) {
            this['minimum_password_length'] = minimumPasswordLength;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyResult.prototype.withNumberOfRecentPasswordsDisallowed = function (numberOfRecentPasswordsDisallowed) {
        this['number_of_recent_passwords_disallowed'] = numberOfRecentPasswordsDisallowed;
        return this;
    };
    Object.defineProperty(PasswordPolicyResult.prototype, "numberOfRecentPasswordsDisallowed", {
        get: function () {
            return this['number_of_recent_passwords_disallowed'];
        },
        set: function (numberOfRecentPasswordsDisallowed) {
            this['number_of_recent_passwords_disallowed'] = numberOfRecentPasswordsDisallowed;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyResult.prototype.withPasswordNotUsernameOrInvert = function (passwordNotUsernameOrInvert) {
        this['password_not_username_or_invert'] = passwordNotUsernameOrInvert;
        return this;
    };
    Object.defineProperty(PasswordPolicyResult.prototype, "passwordNotUsernameOrInvert", {
        get: function () {
            return this['password_not_username_or_invert'];
        },
        set: function (passwordNotUsernameOrInvert) {
            this['password_not_username_or_invert'] = passwordNotUsernameOrInvert;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyResult.prototype.withPasswordRequirements = function (passwordRequirements) {
        this['password_requirements'] = passwordRequirements;
        return this;
    };
    Object.defineProperty(PasswordPolicyResult.prototype, "passwordRequirements", {
        get: function () {
            return this['password_requirements'];
        },
        set: function (passwordRequirements) {
            this['password_requirements'] = passwordRequirements;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyResult.prototype.withPasswordValidityPeriod = function (passwordValidityPeriod) {
        this['password_validity_period'] = passwordValidityPeriod;
        return this;
    };
    Object.defineProperty(PasswordPolicyResult.prototype, "passwordValidityPeriod", {
        get: function () {
            return this['password_validity_period'];
        },
        set: function (passwordValidityPeriod) {
            this['password_validity_period'] = passwordValidityPeriod;
        },
        enumerable: false,
        configurable: true
    });
    PasswordPolicyResult.prototype.withPasswordCharCombination = function (passwordCharCombination) {
        this['password_char_combination'] = passwordCharCombination;
        return this;
    };
    Object.defineProperty(PasswordPolicyResult.prototype, "passwordCharCombination", {
        get: function () {
            return this['password_char_combination'];
        },
        set: function (passwordCharCombination) {
            this['password_char_combination'] = passwordCharCombination;
        },
        enumerable: false,
        configurable: true
    });
    return PasswordPolicyResult;
}());
exports.PasswordPolicyResult = PasswordPolicyResult;


/***/ }),

/***/ 65882:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PolicyDepends = void 0;
var PolicyDepends = /** @class */ (function () {
    function PolicyDepends(catalog, displayName) {
        this['catalog'] = catalog;
        this['display_name'] = displayName;
    }
    PolicyDepends.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    PolicyDepends.prototype.withDisplayName = function (displayName) {
        this['display_name'] = displayName;
        return this;
    };
    Object.defineProperty(PolicyDepends.prototype, "displayName", {
        get: function () {
            return this['display_name'];
        },
        set: function (displayName) {
            this['display_name'] = displayName;
        },
        enumerable: false,
        configurable: true
    });
    return PolicyDepends;
}());
exports.PolicyDepends = PolicyDepends;


/***/ }),

/***/ 2457:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PolicyRoleResult = void 0;
var PolicyRoleResult = /** @class */ (function () {
    function PolicyRoleResult(domainId, catalog, name, description, links, id, displayName, type, policy) {
        this['domain_id'] = domainId;
        this['catalog'] = catalog;
        this['name'] = name;
        this['description'] = description;
        this['links'] = links;
        this['id'] = id;
        this['display_name'] = displayName;
        this['type'] = type;
        this['policy'] = policy;
    }
    PolicyRoleResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(PolicyRoleResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    PolicyRoleResult.prototype.withReferences = function (references) {
        this['references'] = references;
        return this;
    };
    PolicyRoleResult.prototype.withUpdatedTime = function (updatedTime) {
        this['updated_time'] = updatedTime;
        return this;
    };
    Object.defineProperty(PolicyRoleResult.prototype, "updatedTime", {
        get: function () {
            return this['updated_time'];
        },
        set: function (updatedTime) {
            this['updated_time'] = updatedTime;
        },
        enumerable: false,
        configurable: true
    });
    PolicyRoleResult.prototype.withCreatedTime = function (createdTime) {
        this['created_time'] = createdTime;
        return this;
    };
    Object.defineProperty(PolicyRoleResult.prototype, "createdTime", {
        get: function () {
            return this['created_time'];
        },
        set: function (createdTime) {
            this['created_time'] = createdTime;
        },
        enumerable: false,
        configurable: true
    });
    PolicyRoleResult.prototype.withDescriptionCn = function (descriptionCn) {
        this['description_cn'] = descriptionCn;
        return this;
    };
    Object.defineProperty(PolicyRoleResult.prototype, "descriptionCn", {
        get: function () {
            return this['description_cn'];
        },
        set: function (descriptionCn) {
            this['description_cn'] = descriptionCn;
        },
        enumerable: false,
        configurable: true
    });
    PolicyRoleResult.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    PolicyRoleResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    PolicyRoleResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    PolicyRoleResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    PolicyRoleResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    PolicyRoleResult.prototype.withDisplayName = function (displayName) {
        this['display_name'] = displayName;
        return this;
    };
    Object.defineProperty(PolicyRoleResult.prototype, "displayName", {
        get: function () {
            return this['display_name'];
        },
        set: function (displayName) {
            this['display_name'] = displayName;
        },
        enumerable: false,
        configurable: true
    });
    PolicyRoleResult.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    PolicyRoleResult.prototype.withPolicy = function (policy) {
        this['policy'] = policy;
        return this;
    };
    return PolicyRoleResult;
}());
exports.PolicyRoleResult = PolicyRoleResult;


/***/ }),

/***/ 62700:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PolicyStatementEffectEnum = exports.PolicyStatement = void 0;
var PolicyStatement = /** @class */ (function () {
    function PolicyStatement(action, effect) {
        this['Action'] = action;
        this['Effect'] = effect;
    }
    PolicyStatement.prototype.withAction = function (action) {
        this['Action'] = action;
        return this;
    };
    Object.defineProperty(PolicyStatement.prototype, "action", {
        get: function () {
            return this['Action'];
        },
        set: function (action) {
            this['Action'] = action;
        },
        enumerable: false,
        configurable: true
    });
    PolicyStatement.prototype.withEffect = function (effect) {
        this['Effect'] = effect;
        return this;
    };
    Object.defineProperty(PolicyStatement.prototype, "effect", {
        get: function () {
            return this['Effect'];
        },
        set: function (effect) {
            this['Effect'] = effect;
        },
        enumerable: false,
        configurable: true
    });
    PolicyStatement.prototype.withCondition = function (condition) {
        this['Condition'] = condition;
        return this;
    };
    Object.defineProperty(PolicyStatement.prototype, "condition", {
        get: function () {
            return this['Condition'];
        },
        set: function (condition) {
            this['Condition'] = condition;
        },
        enumerable: false,
        configurable: true
    });
    PolicyStatement.prototype.withResource = function (resource) {
        this['Resource'] = resource;
        return this;
    };
    Object.defineProperty(PolicyStatement.prototype, "resource", {
        get: function () {
            return this['Resource'];
        },
        set: function (resource) {
            this['Resource'] = resource;
        },
        enumerable: false,
        configurable: true
    });
    return PolicyStatement;
}());
exports.PolicyStatement = PolicyStatement;
/**
    * @export
    * @enum {string}
    */
var PolicyStatementEffectEnum;
(function (PolicyStatementEffectEnum) {
    PolicyStatementEffectEnum["ALLOW"] = "Allow";
    PolicyStatementEffectEnum["DENY"] = "Deny";
})(PolicyStatementEffectEnum = exports.PolicyStatementEffectEnum || (exports.PolicyStatementEffectEnum = {}));


/***/ }),

/***/ 7937:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProjectDetailsAndStatusResult = void 0;
var ProjectDetailsAndStatusResult = /** @class */ (function () {
    function ProjectDetailsAndStatusResult(domainId, isDomain, parentId, name, description, id, enabled, status) {
        this['domain_id'] = domainId;
        this['is_domain'] = isDomain;
        this['parent_id'] = parentId;
        this['name'] = name;
        this['description'] = description;
        this['id'] = id;
        this['enabled'] = enabled;
        this['status'] = status;
    }
    ProjectDetailsAndStatusResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ProjectDetailsAndStatusResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ProjectDetailsAndStatusResult.prototype.withIsDomain = function (isDomain) {
        this['is_domain'] = isDomain;
        return this;
    };
    Object.defineProperty(ProjectDetailsAndStatusResult.prototype, "isDomain", {
        get: function () {
            return this['is_domain'];
        },
        set: function (isDomain) {
            this['is_domain'] = isDomain;
        },
        enumerable: false,
        configurable: true
    });
    ProjectDetailsAndStatusResult.prototype.withParentId = function (parentId) {
        this['parent_id'] = parentId;
        return this;
    };
    Object.defineProperty(ProjectDetailsAndStatusResult.prototype, "parentId", {
        get: function () {
            return this['parent_id'];
        },
        set: function (parentId) {
            this['parent_id'] = parentId;
        },
        enumerable: false,
        configurable: true
    });
    ProjectDetailsAndStatusResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    ProjectDetailsAndStatusResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    ProjectDetailsAndStatusResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ProjectDetailsAndStatusResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    ProjectDetailsAndStatusResult.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    return ProjectDetailsAndStatusResult;
}());
exports.ProjectDetailsAndStatusResult = ProjectDetailsAndStatusResult;


/***/ }),

/***/ 89021:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProjectInfo = void 0;
var ProjectInfo = /** @class */ (function () {
    function ProjectInfo(name) {
        this['name'] = name;
    }
    ProjectInfo.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    ProjectInfo.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ProjectInfo.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return ProjectInfo;
}());
exports.ProjectInfo = ProjectInfo;


/***/ }),

/***/ 46909:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProjectResult = void 0;
var ProjectResult = /** @class */ (function () {
    function ProjectResult(isDomain, description, links, enabled, id, parentId, domainId, name) {
        this['is_domain'] = isDomain;
        this['description'] = description;
        this['links'] = links;
        this['enabled'] = enabled;
        this['id'] = id;
        this['parent_id'] = parentId;
        this['domain_id'] = domainId;
        this['name'] = name;
    }
    ProjectResult.prototype.withIsDomain = function (isDomain) {
        this['is_domain'] = isDomain;
        return this;
    };
    Object.defineProperty(ProjectResult.prototype, "isDomain", {
        get: function () {
            return this['is_domain'];
        },
        set: function (isDomain) {
            this['is_domain'] = isDomain;
        },
        enumerable: false,
        configurable: true
    });
    ProjectResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    ProjectResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    ProjectResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    ProjectResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ProjectResult.prototype.withParentId = function (parentId) {
        this['parent_id'] = parentId;
        return this;
    };
    Object.defineProperty(ProjectResult.prototype, "parentId", {
        get: function () {
            return this['parent_id'];
        },
        set: function (parentId) {
            this['parent_id'] = parentId;
        },
        enumerable: false,
        configurable: true
    });
    ProjectResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ProjectResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ProjectResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return ProjectResult;
}());
exports.ProjectResult = ProjectResult;


/***/ }),

/***/ 967:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProtectPolicyOption = void 0;
var ProtectPolicyOption = /** @class */ (function () {
    function ProtectPolicyOption(operationProtection) {
        this['operation_protection'] = operationProtection;
    }
    ProtectPolicyOption.prototype.withOperationProtection = function (operationProtection) {
        this['operation_protection'] = operationProtection;
        return this;
    };
    Object.defineProperty(ProtectPolicyOption.prototype, "operationProtection", {
        get: function () {
            return this['operation_protection'];
        },
        set: function (operationProtection) {
            this['operation_protection'] = operationProtection;
        },
        enumerable: false,
        configurable: true
    });
    return ProtectPolicyOption;
}());
exports.ProtectPolicyOption = ProtectPolicyOption;


/***/ }),

/***/ 38021:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProtectPolicyResult = void 0;
var ProtectPolicyResult = /** @class */ (function () {
    function ProtectPolicyResult(operationProtection) {
        this['operation_protection'] = operationProtection;
    }
    ProtectPolicyResult.prototype.withOperationProtection = function (operationProtection) {
        this['operation_protection'] = operationProtection;
        return this;
    };
    Object.defineProperty(ProtectPolicyResult.prototype, "operationProtection", {
        get: function () {
            return this['operation_protection'];
        },
        set: function (operationProtection) {
            this['operation_protection'] = operationProtection;
        },
        enumerable: false,
        configurable: true
    });
    return ProtectPolicyResult;
}());
exports.ProtectPolicyResult = ProtectPolicyResult;


/***/ }),

/***/ 81487:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProtocolIdInfo = void 0;
var ProtocolIdInfo = /** @class */ (function () {
    function ProtocolIdInfo(id) {
        this['id'] = id;
    }
    ProtocolIdInfo.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return ProtocolIdInfo;
}());
exports.ProtocolIdInfo = ProtocolIdInfo;


/***/ }),

/***/ 48730:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProtocolLinks = void 0;
var ProtocolLinks = /** @class */ (function () {
    function ProtocolLinks(identityProvider, self) {
        this['identity_provider'] = identityProvider;
        this['self'] = self;
    }
    ProtocolLinks.prototype.withIdentityProvider = function (identityProvider) {
        this['identity_provider'] = identityProvider;
        return this;
    };
    Object.defineProperty(ProtocolLinks.prototype, "identityProvider", {
        get: function () {
            return this['identity_provider'];
        },
        set: function (identityProvider) {
            this['identity_provider'] = identityProvider;
        },
        enumerable: false,
        configurable: true
    });
    ProtocolLinks.prototype.withSelf = function (self) {
        this['self'] = self;
        return this;
    };
    return ProtocolLinks;
}());
exports.ProtocolLinks = ProtocolLinks;


/***/ }),

/***/ 52158:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProtocolOption = void 0;
var ProtocolOption = /** @class */ (function () {
    function ProtocolOption() {
    }
    ProtocolOption.prototype.withMappingId = function (mappingId) {
        this['mapping_id'] = mappingId;
        return this;
    };
    Object.defineProperty(ProtocolOption.prototype, "mappingId", {
        get: function () {
            return this['mapping_id'];
        },
        set: function (mappingId) {
            this['mapping_id'] = mappingId;
        },
        enumerable: false,
        configurable: true
    });
    return ProtocolOption;
}());
exports.ProtocolOption = ProtocolOption;


/***/ }),

/***/ 29817:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProtocolResult = void 0;
var ProtocolResult = /** @class */ (function () {
    function ProtocolResult(id, mappingId, links) {
        this['id'] = id;
        this['mapping_id'] = mappingId;
        this['links'] = links;
    }
    ProtocolResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ProtocolResult.prototype.withMappingId = function (mappingId) {
        this['mapping_id'] = mappingId;
        return this;
    };
    Object.defineProperty(ProtocolResult.prototype, "mappingId", {
        get: function () {
            return this['mapping_id'];
        },
        set: function (mappingId) {
            this['mapping_id'] = mappingId;
        },
        enumerable: false,
        configurable: true
    });
    ProtocolResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    return ProtocolResult;
}());
exports.ProtocolResult = ProtocolResult;


/***/ }),

/***/ 15973:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PwdAuth = void 0;
var PwdAuth = /** @class */ (function () {
    function PwdAuth(identity, scope) {
        this['identity'] = identity;
        this['scope'] = scope;
    }
    PwdAuth.prototype.withIdentity = function (identity) {
        this['identity'] = identity;
        return this;
    };
    PwdAuth.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    return PwdAuth;
}());
exports.PwdAuth = PwdAuth;


/***/ }),

/***/ 64950:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PwdIdentityMethodsEnum = exports.PwdIdentity = void 0;
var PwdIdentity = /** @class */ (function () {
    function PwdIdentity(methods, password) {
        this['methods'] = methods;
        this['password'] = password;
    }
    PwdIdentity.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    PwdIdentity.prototype.withPassword = function (password) {
        this['password'] = password;
        return this;
    };
    return PwdIdentity;
}());
exports.PwdIdentity = PwdIdentity;
/**
    * @export
    * @enum {string}
    */
var PwdIdentityMethodsEnum;
(function (PwdIdentityMethodsEnum) {
    PwdIdentityMethodsEnum["PASSWORD"] = "password";
})(PwdIdentityMethodsEnum = exports.PwdIdentityMethodsEnum || (exports.PwdIdentityMethodsEnum = {}));


/***/ }),

/***/ 11257:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PwdPassword = void 0;
var PwdPassword = /** @class */ (function () {
    function PwdPassword(user) {
        this['user'] = user;
    }
    PwdPassword.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return PwdPassword;
}());
exports.PwdPassword = PwdPassword;


/***/ }),

/***/ 3545:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PwdPasswordUser = void 0;
var PwdPasswordUser = /** @class */ (function () {
    function PwdPasswordUser(domain, name, password) {
        this['domain'] = domain;
        this['name'] = name;
        this['password'] = password;
    }
    PwdPasswordUser.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    PwdPasswordUser.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    PwdPasswordUser.prototype.withPassword = function (password) {
        this['password'] = password;
        return this;
    };
    return PwdPasswordUser;
}());
exports.PwdPasswordUser = PwdPasswordUser;


/***/ }),

/***/ 50247:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PwdPasswordUserDomain = void 0;
var PwdPasswordUserDomain = /** @class */ (function () {
    function PwdPasswordUserDomain(name) {
        this['name'] = name;
    }
    PwdPasswordUserDomain.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return PwdPasswordUserDomain;
}());
exports.PwdPasswordUserDomain = PwdPasswordUserDomain;


/***/ }),

/***/ 94245:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.QuotaResult = void 0;
var QuotaResult = /** @class */ (function () {
    function QuotaResult() {
    }
    QuotaResult.prototype.withResources = function (resources) {
        this['resources'] = resources;
        return this;
    };
    return QuotaResult;
}());
exports.QuotaResult = QuotaResult;


/***/ }),

/***/ 80680:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Region = void 0;
var Region = /** @class */ (function () {
    function Region(description, parentRegionId, links, locales, id, type) {
        this['description'] = description;
        this['parent_region_id'] = parentRegionId;
        this['links'] = links;
        this['locales'] = locales;
        this['id'] = id;
        this['type'] = type;
    }
    Region.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    Region.prototype.withParentRegionId = function (parentRegionId) {
        this['parent_region_id'] = parentRegionId;
        return this;
    };
    Object.defineProperty(Region.prototype, "parentRegionId", {
        get: function () {
            return this['parent_region_id'];
        },
        set: function (parentRegionId) {
            this['parent_region_id'] = parentRegionId;
        },
        enumerable: false,
        configurable: true
    });
    Region.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    Region.prototype.withLocales = function (locales) {
        this['locales'] = locales;
        return this;
    };
    Region.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    Region.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    return Region;
}());
exports.Region = Region;


/***/ }),

/***/ 5378:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RegionLocales = void 0;
var RegionLocales = /** @class */ (function () {
    function RegionLocales(zhCn, enUs) {
        this['zh-cn'] = zhCn;
        this['en-us'] = enUs;
    }
    RegionLocales.prototype.withZhCn = function (zhCn) {
        this['zh-cn'] = zhCn;
        return this;
    };
    Object.defineProperty(RegionLocales.prototype, "zhCn", {
        get: function () {
            return this['zh-cn'];
        },
        set: function (zhCn) {
            this['zh-cn'] = zhCn;
        },
        enumerable: false,
        configurable: true
    });
    RegionLocales.prototype.withEnUs = function (enUs) {
        this['en-us'] = enUs;
        return this;
    };
    Object.defineProperty(RegionLocales.prototype, "enUs", {
        get: function () {
            return this['en-us'];
        },
        set: function (enUs) {
            this['en-us'] = enUs;
        },
        enumerable: false,
        configurable: true
    });
    RegionLocales.prototype.withPtBr = function (ptBr) {
        this['pt-br'] = ptBr;
        return this;
    };
    Object.defineProperty(RegionLocales.prototype, "ptBr", {
        get: function () {
            return this['pt-br'];
        },
        set: function (ptBr) {
            this['pt-br'] = ptBr;
        },
        enumerable: false,
        configurable: true
    });
    RegionLocales.prototype.withEsUs = function (esUs) {
        this['es-us'] = esUs;
        return this;
    };
    Object.defineProperty(RegionLocales.prototype, "esUs", {
        get: function () {
            return this['es-us'];
        },
        set: function (esUs) {
            this['es-us'] = esUs;
        },
        enumerable: false,
        configurable: true
    });
    RegionLocales.prototype.withEsEs = function (esEs) {
        this['es-es'] = esEs;
        return this;
    };
    Object.defineProperty(RegionLocales.prototype, "esEs", {
        get: function () {
            return this['es-es'];
        },
        set: function (esEs) {
            this['es-es'] = esEs;
        },
        enumerable: false,
        configurable: true
    });
    return RegionLocales;
}());
exports.RegionLocales = RegionLocales;


/***/ }),

/***/ 87920:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RemoveAllProjectsPermissionFromAgencyRequest = void 0;
var RemoveAllProjectsPermissionFromAgencyRequest = /** @class */ (function () {
    function RemoveAllProjectsPermissionFromAgencyRequest(agencyId, domainId, roleId) {
        this['agency_id'] = agencyId;
        this['domain_id'] = domainId;
        this['role_id'] = roleId;
    }
    RemoveAllProjectsPermissionFromAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(RemoveAllProjectsPermissionFromAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    RemoveAllProjectsPermissionFromAgencyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(RemoveAllProjectsPermissionFromAgencyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    RemoveAllProjectsPermissionFromAgencyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(RemoveAllProjectsPermissionFromAgencyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return RemoveAllProjectsPermissionFromAgencyRequest;
}());
exports.RemoveAllProjectsPermissionFromAgencyRequest = RemoveAllProjectsPermissionFromAgencyRequest;


/***/ }),

/***/ 56589:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RemoveAllProjectsPermissionFromAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var RemoveAllProjectsPermissionFromAgencyResponse = /** @class */ (function (_super) {
    __extends(RemoveAllProjectsPermissionFromAgencyResponse, _super);
    function RemoveAllProjectsPermissionFromAgencyResponse() {
        return _super.call(this) || this;
    }
    return RemoveAllProjectsPermissionFromAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.RemoveAllProjectsPermissionFromAgencyResponse = RemoveAllProjectsPermissionFromAgencyResponse;


/***/ }),

/***/ 7440:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RemoveDomainPermissionFromAgencyRequest = void 0;
var RemoveDomainPermissionFromAgencyRequest = /** @class */ (function () {
    function RemoveDomainPermissionFromAgencyRequest(domainId, agencyId, roleId) {
        this['domain_id'] = domainId;
        this['agency_id'] = agencyId;
        this['role_id'] = roleId;
    }
    RemoveDomainPermissionFromAgencyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(RemoveDomainPermissionFromAgencyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    RemoveDomainPermissionFromAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(RemoveDomainPermissionFromAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    RemoveDomainPermissionFromAgencyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(RemoveDomainPermissionFromAgencyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return RemoveDomainPermissionFromAgencyRequest;
}());
exports.RemoveDomainPermissionFromAgencyRequest = RemoveDomainPermissionFromAgencyRequest;


/***/ }),

/***/ 83774:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RemoveDomainPermissionFromAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var RemoveDomainPermissionFromAgencyResponse = /** @class */ (function (_super) {
    __extends(RemoveDomainPermissionFromAgencyResponse, _super);
    function RemoveDomainPermissionFromAgencyResponse() {
        return _super.call(this) || this;
    }
    return RemoveDomainPermissionFromAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.RemoveDomainPermissionFromAgencyResponse = RemoveDomainPermissionFromAgencyResponse;


/***/ }),

/***/ 69842:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RemoveProjectPermissionFromAgencyRequest = void 0;
var RemoveProjectPermissionFromAgencyRequest = /** @class */ (function () {
    function RemoveProjectPermissionFromAgencyRequest(agencyId, roleId) {
        this['agency_id'] = agencyId;
        this['role_id'] = roleId;
    }
    RemoveProjectPermissionFromAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(RemoveProjectPermissionFromAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    RemoveProjectPermissionFromAgencyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(RemoveProjectPermissionFromAgencyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return RemoveProjectPermissionFromAgencyRequest;
}());
exports.RemoveProjectPermissionFromAgencyRequest = RemoveProjectPermissionFromAgencyRequest;


/***/ }),

/***/ 37223:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RemoveProjectPermissionFromAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var RemoveProjectPermissionFromAgencyResponse = /** @class */ (function (_super) {
    __extends(RemoveProjectPermissionFromAgencyResponse, _super);
    function RemoveProjectPermissionFromAgencyResponse() {
        return _super.call(this) || this;
    }
    return RemoveProjectPermissionFromAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.RemoveProjectPermissionFromAgencyResponse = RemoveProjectPermissionFromAgencyResponse;


/***/ }),

/***/ 91952:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Resources = void 0;
var Resources = /** @class */ (function () {
    function Resources() {
    }
    Resources.prototype.withMax = function (max) {
        this['max'] = max;
        return this;
    };
    Resources.prototype.withMin = function (min) {
        this['min'] = min;
        return this;
    };
    Resources.prototype.withQuota = function (quota) {
        this['quota'] = quota;
        return this;
    };
    Resources.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    Resources.prototype.withUsed = function (used) {
        this['used'] = used;
        return this;
    };
    return Resources;
}());
exports.Resources = Resources;


/***/ }),

/***/ 79359:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RevokeRoleFromGroupOnEnterpriseProjectRequest = void 0;
var RevokeRoleFromGroupOnEnterpriseProjectRequest = /** @class */ (function () {
    function RevokeRoleFromGroupOnEnterpriseProjectRequest(enterpriseProjectId, groupId, roleId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    RevokeRoleFromGroupOnEnterpriseProjectRequest.prototype.withEnterpriseProjectId = function (enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        return this;
    };
    Object.defineProperty(RevokeRoleFromGroupOnEnterpriseProjectRequest.prototype, "enterpriseProjectId", {
        get: function () {
            return this['enterprise_project_id'];
        },
        set: function (enterpriseProjectId) {
            this['enterprise_project_id'] = enterpriseProjectId;
        },
        enumerable: false,
        configurable: true
    });
    RevokeRoleFromGroupOnEnterpriseProjectRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(RevokeRoleFromGroupOnEnterpriseProjectRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    RevokeRoleFromGroupOnEnterpriseProjectRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(RevokeRoleFromGroupOnEnterpriseProjectRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return RevokeRoleFromGroupOnEnterpriseProjectRequest;
}());
exports.RevokeRoleFromGroupOnEnterpriseProjectRequest = RevokeRoleFromGroupOnEnterpriseProjectRequest;


/***/ }),

/***/ 92389:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RevokeRoleFromGroupOnEnterpriseProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var RevokeRoleFromGroupOnEnterpriseProjectResponse = /** @class */ (function (_super) {
    __extends(RevokeRoleFromGroupOnEnterpriseProjectResponse, _super);
    function RevokeRoleFromGroupOnEnterpriseProjectResponse() {
        return _super.call(this) || this;
    }
    return RevokeRoleFromGroupOnEnterpriseProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.RevokeRoleFromGroupOnEnterpriseProjectResponse = RevokeRoleFromGroupOnEnterpriseProjectResponse;


/***/ }),

/***/ 77530:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RevokeRoleFromUserOnEnterpriseProjectRequest = void 0;
var RevokeRoleFromUserOnEnterpriseProjectRequest = /** @class */ (function () {
    function RevokeRoleFromUserOnEnterpriseProjectRequest(enterpriseProjectId, userId, roleId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        this['user_id'] = userId;
        this['role_id'] = roleId;
    }
    RevokeRoleFromUserOnEnterpriseProjectRequest.prototype.withEnterpriseProjectId = function (enterpriseProjectId) {
        this['enterprise_project_id'] = enterpriseProjectId;
        return this;
    };
    Object.defineProperty(RevokeRoleFromUserOnEnterpriseProjectRequest.prototype, "enterpriseProjectId", {
        get: function () {
            return this['enterprise_project_id'];
        },
        set: function (enterpriseProjectId) {
            this['enterprise_project_id'] = enterpriseProjectId;
        },
        enumerable: false,
        configurable: true
    });
    RevokeRoleFromUserOnEnterpriseProjectRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(RevokeRoleFromUserOnEnterpriseProjectRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    RevokeRoleFromUserOnEnterpriseProjectRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(RevokeRoleFromUserOnEnterpriseProjectRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return RevokeRoleFromUserOnEnterpriseProjectRequest;
}());
exports.RevokeRoleFromUserOnEnterpriseProjectRequest = RevokeRoleFromUserOnEnterpriseProjectRequest;


/***/ }),

/***/ 37413:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RevokeRoleFromUserOnEnterpriseProjectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var RevokeRoleFromUserOnEnterpriseProjectResponse = /** @class */ (function (_super) {
    __extends(RevokeRoleFromUserOnEnterpriseProjectResponse, _super);
    function RevokeRoleFromUserOnEnterpriseProjectResponse() {
        return _super.call(this) || this;
    }
    return RevokeRoleFromUserOnEnterpriseProjectResponse;
}(SdkResponse_1.SdkResponse));
exports.RevokeRoleFromUserOnEnterpriseProjectResponse = RevokeRoleFromUserOnEnterpriseProjectResponse;


/***/ }),

/***/ 77863:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleAgencyAssignmentId = void 0;
var RoleAgencyAssignmentId = /** @class */ (function () {
    function RoleAgencyAssignmentId() {
    }
    RoleAgencyAssignmentId.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return RoleAgencyAssignmentId;
}());
exports.RoleAgencyAssignmentId = RoleAgencyAssignmentId;


/***/ }),

/***/ 99918:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleAssignmentBody = void 0;
var RoleAssignmentBody = /** @class */ (function () {
    function RoleAssignmentBody() {
    }
    RoleAssignmentBody.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    RoleAssignmentBody.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    RoleAssignmentBody.prototype.withGroup = function (group) {
        this['group'] = group;
        return this;
    };
    RoleAssignmentBody.prototype.withAgency = function (agency) {
        this['agency'] = agency;
        return this;
    };
    RoleAssignmentBody.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    RoleAssignmentBody.prototype.withIsInherited = function (isInherited) {
        this['is_inherited'] = isInherited;
        return this;
    };
    Object.defineProperty(RoleAssignmentBody.prototype, "isInherited", {
        get: function () {
            return this['is_inherited'];
        },
        set: function (isInherited) {
            this['is_inherited'] = isInherited;
        },
        enumerable: false,
        configurable: true
    });
    return RoleAssignmentBody;
}());
exports.RoleAssignmentBody = RoleAssignmentBody;


/***/ }),

/***/ 22007:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleAssignmentId = void 0;
var RoleAssignmentId = /** @class */ (function () {
    function RoleAssignmentId() {
    }
    RoleAssignmentId.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return RoleAssignmentId;
}());
exports.RoleAssignmentId = RoleAssignmentId;


/***/ }),

/***/ 89769:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleAssignmentScope = void 0;
var RoleAssignmentScope = /** @class */ (function () {
    function RoleAssignmentScope() {
    }
    RoleAssignmentScope.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    RoleAssignmentScope.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    RoleAssignmentScope.prototype.withEnterpriseProject = function (enterpriseProject) {
        this['enterprise_project'] = enterpriseProject;
        return this;
    };
    Object.defineProperty(RoleAssignmentScope.prototype, "enterpriseProject", {
        get: function () {
            return this['enterprise_project'];
        },
        set: function (enterpriseProject) {
            this['enterprise_project'] = enterpriseProject;
        },
        enumerable: false,
        configurable: true
    });
    return RoleAssignmentScope;
}());
exports.RoleAssignmentScope = RoleAssignmentScope;


/***/ }),

/***/ 38668:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleDomainAssignmentId = void 0;
var RoleDomainAssignmentId = /** @class */ (function () {
    function RoleDomainAssignmentId() {
    }
    RoleDomainAssignmentId.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return RoleDomainAssignmentId;
}());
exports.RoleDomainAssignmentId = RoleDomainAssignmentId;


/***/ }),

/***/ 62738:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleEnterpriseProjectAssignmentId = void 0;
var RoleEnterpriseProjectAssignmentId = /** @class */ (function () {
    function RoleEnterpriseProjectAssignmentId() {
    }
    RoleEnterpriseProjectAssignmentId.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return RoleEnterpriseProjectAssignmentId;
}());
exports.RoleEnterpriseProjectAssignmentId = RoleEnterpriseProjectAssignmentId;


/***/ }),

/***/ 86780:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleGroupAssignmentId = void 0;
var RoleGroupAssignmentId = /** @class */ (function () {
    function RoleGroupAssignmentId() {
    }
    RoleGroupAssignmentId.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return RoleGroupAssignmentId;
}());
exports.RoleGroupAssignmentId = RoleGroupAssignmentId;


/***/ }),

/***/ 88453:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RolePolicy = void 0;
var RolePolicy = /** @class */ (function () {
    function RolePolicy(statement, version) {
        this['Statement'] = statement;
        this['Version'] = version;
    }
    RolePolicy.prototype.withDepends = function (depends) {
        this['Depends'] = depends;
        return this;
    };
    Object.defineProperty(RolePolicy.prototype, "depends", {
        get: function () {
            return this['Depends'];
        },
        set: function (depends) {
            this['Depends'] = depends;
        },
        enumerable: false,
        configurable: true
    });
    RolePolicy.prototype.withStatement = function (statement) {
        this['Statement'] = statement;
        return this;
    };
    Object.defineProperty(RolePolicy.prototype, "statement", {
        get: function () {
            return this['Statement'];
        },
        set: function (statement) {
            this['Statement'] = statement;
        },
        enumerable: false,
        configurable: true
    });
    RolePolicy.prototype.withVersion = function (version) {
        this['Version'] = version;
        return this;
    };
    Object.defineProperty(RolePolicy.prototype, "version", {
        get: function () {
            return this['Version'];
        },
        set: function (version) {
            this['Version'] = version;
        },
        enumerable: false,
        configurable: true
    });
    return RolePolicy;
}());
exports.RolePolicy = RolePolicy;


/***/ }),

/***/ 49224:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleProjectAssignmentId = void 0;
var RoleProjectAssignmentId = /** @class */ (function () {
    function RoleProjectAssignmentId() {
    }
    RoleProjectAssignmentId.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return RoleProjectAssignmentId;
}());
exports.RoleProjectAssignmentId = RoleProjectAssignmentId;


/***/ }),

/***/ 57551:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleResult = void 0;
var RoleResult = /** @class */ (function () {
    function RoleResult(name, id, type, policy) {
        this['name'] = name;
        this['id'] = id;
        this['type'] = type;
        this['policy'] = policy;
    }
    RoleResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(RoleResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    RoleResult.prototype.withFlag = function (flag) {
        this['flag'] = flag;
        return this;
    };
    RoleResult.prototype.withDescriptionCn = function (descriptionCn) {
        this['description_cn'] = descriptionCn;
        return this;
    };
    Object.defineProperty(RoleResult.prototype, "descriptionCn", {
        get: function () {
            return this['description_cn'];
        },
        set: function (descriptionCn) {
            this['description_cn'] = descriptionCn;
        },
        enumerable: false,
        configurable: true
    });
    RoleResult.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    RoleResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    RoleResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    RoleResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    RoleResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    RoleResult.prototype.withDisplayName = function (displayName) {
        this['display_name'] = displayName;
        return this;
    };
    Object.defineProperty(RoleResult.prototype, "displayName", {
        get: function () {
            return this['display_name'];
        },
        set: function (displayName) {
            this['display_name'] = displayName;
        },
        enumerable: false,
        configurable: true
    });
    RoleResult.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    RoleResult.prototype.withPolicy = function (policy) {
        this['policy'] = policy;
        return this;
    };
    RoleResult.prototype.withUpdatedTime = function (updatedTime) {
        this['updated_time'] = updatedTime;
        return this;
    };
    Object.defineProperty(RoleResult.prototype, "updatedTime", {
        get: function () {
            return this['updated_time'];
        },
        set: function (updatedTime) {
            this['updated_time'] = updatedTime;
        },
        enumerable: false,
        configurable: true
    });
    RoleResult.prototype.withCreatedTime = function (createdTime) {
        this['created_time'] = createdTime;
        return this;
    };
    Object.defineProperty(RoleResult.prototype, "createdTime", {
        get: function () {
            return this['created_time'];
        },
        set: function (createdTime) {
            this['created_time'] = createdTime;
        },
        enumerable: false,
        configurable: true
    });
    return RoleResult;
}());
exports.RoleResult = RoleResult;


/***/ }),

/***/ 78358:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoleUserAssignmentId = void 0;
var RoleUserAssignmentId = /** @class */ (function () {
    function RoleUserAssignmentId() {
    }
    RoleUserAssignmentId.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return RoleUserAssignmentId;
}());
exports.RoleUserAssignmentId = RoleUserAssignmentId;


/***/ }),

/***/ 58728:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RolesItem = void 0;
var RolesItem = /** @class */ (function () {
    function RolesItem(catalog, displayName, description, descriptionCn, domainId, flag, id, name, policy, type) {
        this['catalog'] = catalog;
        this['display_name'] = displayName;
        this['description'] = description;
        this['description_cn'] = descriptionCn;
        this['domain_id'] = domainId;
        this['flag'] = flag;
        this['id'] = id;
        this['name'] = name;
        this['policy'] = policy;
        this['type'] = type;
    }
    RolesItem.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    RolesItem.prototype.withDisplayName = function (displayName) {
        this['display_name'] = displayName;
        return this;
    };
    Object.defineProperty(RolesItem.prototype, "displayName", {
        get: function () {
            return this['display_name'];
        },
        set: function (displayName) {
            this['display_name'] = displayName;
        },
        enumerable: false,
        configurable: true
    });
    RolesItem.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    RolesItem.prototype.withDescriptionCn = function (descriptionCn) {
        this['description_cn'] = descriptionCn;
        return this;
    };
    Object.defineProperty(RolesItem.prototype, "descriptionCn", {
        get: function () {
            return this['description_cn'];
        },
        set: function (descriptionCn) {
            this['description_cn'] = descriptionCn;
        },
        enumerable: false,
        configurable: true
    });
    RolesItem.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(RolesItem.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    RolesItem.prototype.withFlag = function (flag) {
        this['flag'] = flag;
        return this;
    };
    RolesItem.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    RolesItem.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    RolesItem.prototype.withPolicy = function (policy) {
        this['policy'] = policy;
        return this;
    };
    RolesItem.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    return RolesItem;
}());
exports.RolesItem = RolesItem;


/***/ }),

/***/ 91474:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RulesLocalAdditional = void 0;
var RulesLocalAdditional = /** @class */ (function () {
    function RulesLocalAdditional() {
    }
    RulesLocalAdditional.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return RulesLocalAdditional;
}());
exports.RulesLocalAdditional = RulesLocalAdditional;


/***/ }),

/***/ 81105:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RulesRemote = void 0;
var RulesRemote = /** @class */ (function () {
    function RulesRemote(type) {
        this['type'] = type;
    }
    RulesRemote.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    RulesRemote.prototype.withAnyOneOf = function (anyOneOf) {
        this['any_one_of'] = anyOneOf;
        return this;
    };
    Object.defineProperty(RulesRemote.prototype, "anyOneOf", {
        get: function () {
            return this['any_one_of'];
        },
        set: function (anyOneOf) {
            this['any_one_of'] = anyOneOf;
        },
        enumerable: false,
        configurable: true
    });
    RulesRemote.prototype.withNotAnyOf = function (notAnyOf) {
        this['not_any_of'] = notAnyOf;
        return this;
    };
    Object.defineProperty(RulesRemote.prototype, "notAnyOf", {
        get: function () {
            return this['not_any_of'];
        },
        set: function (notAnyOf) {
            this['not_any_of'] = notAnyOf;
        },
        enumerable: false,
        configurable: true
    });
    return RulesRemote;
}());
exports.RulesRemote = RulesRemote;


/***/ }),

/***/ 60185:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScopeDomainOption = void 0;
var ScopeDomainOption = /** @class */ (function () {
    function ScopeDomainOption() {
    }
    ScopeDomainOption.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ScopeDomainOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return ScopeDomainOption;
}());
exports.ScopeDomainOption = ScopeDomainOption;


/***/ }),

/***/ 54608:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScopeProjectOption = void 0;
var ScopeProjectOption = /** @class */ (function () {
    function ScopeProjectOption() {
    }
    ScopeProjectOption.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ScopeProjectOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    ScopeProjectOption.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    return ScopeProjectOption;
}());
exports.ScopeProjectOption = ScopeProjectOption;


/***/ }),

/***/ 6200:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScopeTokenResult = void 0;
var ScopeTokenResult = /** @class */ (function () {
    function ScopeTokenResult(methods, expiresAt, domain, project, roles, user, issuedAt) {
        this['methods'] = methods;
        this['expires_at'] = expiresAt;
        this['domain'] = domain;
        this['project'] = project;
        this['roles'] = roles;
        this['user'] = user;
        this['issued_at'] = issuedAt;
    }
    ScopeTokenResult.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    ScopeTokenResult.prototype.withExpiresAt = function (expiresAt) {
        this['expires_at'] = expiresAt;
        return this;
    };
    Object.defineProperty(ScopeTokenResult.prototype, "expiresAt", {
        get: function () {
            return this['expires_at'];
        },
        set: function (expiresAt) {
            this['expires_at'] = expiresAt;
        },
        enumerable: false,
        configurable: true
    });
    ScopeTokenResult.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    ScopeTokenResult.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    ScopeTokenResult.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    ScopeTokenResult.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    ScopeTokenResult.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    ScopeTokenResult.prototype.withIssuedAt = function (issuedAt) {
        this['issued_at'] = issuedAt;
        return this;
    };
    Object.defineProperty(ScopeTokenResult.prototype, "issuedAt", {
        get: function () {
            return this['issued_at'];
        },
        set: function (issuedAt) {
            this['issued_at'] = issuedAt;
        },
        enumerable: false,
        configurable: true
    });
    return ScopeTokenResult;
}());
exports.ScopeTokenResult = ScopeTokenResult;


/***/ }),

/***/ 76452:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScopedToken = void 0;
var ScopedToken = /** @class */ (function () {
    function ScopedToken(id) {
        this['id'] = id;
    }
    ScopedToken.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return ScopedToken;
}());
exports.ScopedToken = ScopedToken;


/***/ }),

/***/ 36698:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScopedTokenAuth = void 0;
var ScopedTokenAuth = /** @class */ (function () {
    function ScopedTokenAuth(identity, scope) {
        this['identity'] = identity;
        this['scope'] = scope;
    }
    ScopedTokenAuth.prototype.withIdentity = function (identity) {
        this['identity'] = identity;
        return this;
    };
    ScopedTokenAuth.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    return ScopedTokenAuth;
}());
exports.ScopedTokenAuth = ScopedTokenAuth;


/***/ }),

/***/ 56970:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScopedTokenIdentity = void 0;
var ScopedTokenIdentity = /** @class */ (function () {
    function ScopedTokenIdentity(methods, token) {
        this['methods'] = methods;
        this['token'] = token;
    }
    ScopedTokenIdentity.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    ScopedTokenIdentity.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    return ScopedTokenIdentity;
}());
exports.ScopedTokenIdentity = ScopedTokenIdentity;


/***/ }),

/***/ 60335:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScopedTokenInfo = void 0;
var ScopedTokenInfo = /** @class */ (function () {
    function ScopedTokenInfo(expiresAt, methods, issuedAt, user, roles, catalog) {
        this['expires_at'] = expiresAt;
        this['methods'] = methods;
        this['issued_at'] = issuedAt;
        this['user'] = user;
        this['roles'] = roles;
        this['catalog'] = catalog;
    }
    ScopedTokenInfo.prototype.withExpiresAt = function (expiresAt) {
        this['expires_at'] = expiresAt;
        return this;
    };
    Object.defineProperty(ScopedTokenInfo.prototype, "expiresAt", {
        get: function () {
            return this['expires_at'];
        },
        set: function (expiresAt) {
            this['expires_at'] = expiresAt;
        },
        enumerable: false,
        configurable: true
    });
    ScopedTokenInfo.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    ScopedTokenInfo.prototype.withIssuedAt = function (issuedAt) {
        this['issued_at'] = issuedAt;
        return this;
    };
    Object.defineProperty(ScopedTokenInfo.prototype, "issuedAt", {
        get: function () {
            return this['issued_at'];
        },
        set: function (issuedAt) {
            this['issued_at'] = issuedAt;
        },
        enumerable: false,
        configurable: true
    });
    ScopedTokenInfo.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    ScopedTokenInfo.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    ScopedTokenInfo.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    ScopedTokenInfo.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    ScopedTokenInfo.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    return ScopedTokenInfo;
}());
exports.ScopedTokenInfo = ScopedTokenInfo;


/***/ }),

/***/ 41038:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScopedTokenInfoRoles = void 0;
var ScopedTokenInfoRoles = /** @class */ (function () {
    function ScopedTokenInfoRoles() {
    }
    ScopedTokenInfoRoles.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ScopedTokenInfoRoles.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return ScopedTokenInfoRoles;
}());
exports.ScopedTokenInfoRoles = ScopedTokenInfoRoles;


/***/ }),

/***/ 66379:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScopedTokenUser = void 0;
var ScopedTokenUser = /** @class */ (function () {
    function ScopedTokenUser(domain, osFederation, id, name, passwordExpiresAt) {
        this['domain'] = domain;
        this['OS-FEDERATION'] = osFederation;
        this['id'] = id;
        this['name'] = name;
        this['password_expires_at'] = passwordExpiresAt;
    }
    ScopedTokenUser.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    ScopedTokenUser.prototype.withOsFederation = function (osFederation) {
        this['OS-FEDERATION'] = osFederation;
        return this;
    };
    Object.defineProperty(ScopedTokenUser.prototype, "osFederation", {
        get: function () {
            return this['OS-FEDERATION'];
        },
        set: function (osFederation) {
            this['OS-FEDERATION'] = osFederation;
        },
        enumerable: false,
        configurable: true
    });
    ScopedTokenUser.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ScopedTokenUser.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    ScopedTokenUser.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(ScopedTokenUser.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    return ScopedTokenUser;
}());
exports.ScopedTokenUser = ScopedTokenUser;


/***/ }),

/***/ 28685:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SecurityCompliance = void 0;
var SecurityCompliance = /** @class */ (function () {
    function SecurityCompliance(passwordRegex, passwordRegexDescription) {
        this['password_regex'] = passwordRegex;
        this['password_regex_description'] = passwordRegexDescription;
    }
    SecurityCompliance.prototype.withPasswordRegex = function (passwordRegex) {
        this['password_regex'] = passwordRegex;
        return this;
    };
    Object.defineProperty(SecurityCompliance.prototype, "passwordRegex", {
        get: function () {
            return this['password_regex'];
        },
        set: function (passwordRegex) {
            this['password_regex'] = passwordRegex;
        },
        enumerable: false,
        configurable: true
    });
    SecurityCompliance.prototype.withPasswordRegexDescription = function (passwordRegexDescription) {
        this['password_regex_description'] = passwordRegexDescription;
        return this;
    };
    Object.defineProperty(SecurityCompliance.prototype, "passwordRegexDescription", {
        get: function () {
            return this['password_regex_description'];
        },
        set: function (passwordRegexDescription) {
            this['password_regex_description'] = passwordRegexDescription;
        },
        enumerable: false,
        configurable: true
    });
    return SecurityCompliance;
}());
exports.SecurityCompliance = SecurityCompliance;


/***/ }),

/***/ 41948:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Service = void 0;
var Service = /** @class */ (function () {
    function Service(name, links, id, type, enabled) {
        this['name'] = name;
        this['links'] = links;
        this['id'] = id;
        this['type'] = type;
        this['enabled'] = enabled;
    }
    Service.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    Service.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    Service.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    Service.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    Service.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    Service.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    return Service;
}());
exports.Service = Service;


/***/ }),

/***/ 91609:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServicePolicy = void 0;
var ServicePolicy = /** @class */ (function () {
    function ServicePolicy(version, statement) {
        this['Version'] = version;
        this['Statement'] = statement;
    }
    ServicePolicy.prototype.withVersion = function (version) {
        this['Version'] = version;
        return this;
    };
    Object.defineProperty(ServicePolicy.prototype, "version", {
        get: function () {
            return this['Version'];
        },
        set: function (version) {
            this['Version'] = version;
        },
        enumerable: false,
        configurable: true
    });
    ServicePolicy.prototype.withStatement = function (statement) {
        this['Statement'] = statement;
        return this;
    };
    Object.defineProperty(ServicePolicy.prototype, "statement", {
        get: function () {
            return this['Statement'];
        },
        set: function (statement) {
            this['Statement'] = statement;
        },
        enumerable: false,
        configurable: true
    });
    return ServicePolicy;
}());
exports.ServicePolicy = ServicePolicy;


/***/ }),

/***/ 8020:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServicePolicyRoleOption = void 0;
var ServicePolicyRoleOption = /** @class */ (function () {
    function ServicePolicyRoleOption(displayName, type, description, policy) {
        this['display_name'] = displayName;
        this['type'] = type;
        this['description'] = description;
        this['policy'] = policy;
    }
    ServicePolicyRoleOption.prototype.withDisplayName = function (displayName) {
        this['display_name'] = displayName;
        return this;
    };
    Object.defineProperty(ServicePolicyRoleOption.prototype, "displayName", {
        get: function () {
            return this['display_name'];
        },
        set: function (displayName) {
            this['display_name'] = displayName;
        },
        enumerable: false,
        configurable: true
    });
    ServicePolicyRoleOption.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    ServicePolicyRoleOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    ServicePolicyRoleOption.prototype.withDescriptionCn = function (descriptionCn) {
        this['description_cn'] = descriptionCn;
        return this;
    };
    Object.defineProperty(ServicePolicyRoleOption.prototype, "descriptionCn", {
        get: function () {
            return this['description_cn'];
        },
        set: function (descriptionCn) {
            this['description_cn'] = descriptionCn;
        },
        enumerable: false,
        configurable: true
    });
    ServicePolicyRoleOption.prototype.withPolicy = function (policy) {
        this['policy'] = policy;
        return this;
    };
    return ServicePolicyRoleOption;
}());
exports.ServicePolicyRoleOption = ServicePolicyRoleOption;


/***/ }),

/***/ 34869:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServicePolicyRoleResult = void 0;
var ServicePolicyRoleResult = /** @class */ (function () {
    function ServicePolicyRoleResult(catalog, displayName, description, links, policy, domainId, type, id, name) {
        this['catalog'] = catalog;
        this['display_name'] = displayName;
        this['description'] = description;
        this['links'] = links;
        this['policy'] = policy;
        this['domain_id'] = domainId;
        this['type'] = type;
        this['id'] = id;
        this['name'] = name;
    }
    ServicePolicyRoleResult.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    ServicePolicyRoleResult.prototype.withDisplayName = function (displayName) {
        this['display_name'] = displayName;
        return this;
    };
    Object.defineProperty(ServicePolicyRoleResult.prototype, "displayName", {
        get: function () {
            return this['display_name'];
        },
        set: function (displayName) {
            this['display_name'] = displayName;
        },
        enumerable: false,
        configurable: true
    });
    ServicePolicyRoleResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    ServicePolicyRoleResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    ServicePolicyRoleResult.prototype.withPolicy = function (policy) {
        this['policy'] = policy;
        return this;
    };
    ServicePolicyRoleResult.prototype.withDescriptionCn = function (descriptionCn) {
        this['description_cn'] = descriptionCn;
        return this;
    };
    Object.defineProperty(ServicePolicyRoleResult.prototype, "descriptionCn", {
        get: function () {
            return this['description_cn'];
        },
        set: function (descriptionCn) {
            this['description_cn'] = descriptionCn;
        },
        enumerable: false,
        configurable: true
    });
    ServicePolicyRoleResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ServicePolicyRoleResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ServicePolicyRoleResult.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    ServicePolicyRoleResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ServicePolicyRoleResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    ServicePolicyRoleResult.prototype.withUpdatedTime = function (updatedTime) {
        this['updated_time'] = updatedTime;
        return this;
    };
    Object.defineProperty(ServicePolicyRoleResult.prototype, "updatedTime", {
        get: function () {
            return this['updated_time'];
        },
        set: function (updatedTime) {
            this['updated_time'] = updatedTime;
        },
        enumerable: false,
        configurable: true
    });
    ServicePolicyRoleResult.prototype.withCreatedTime = function (createdTime) {
        this['created_time'] = createdTime;
        return this;
    };
    Object.defineProperty(ServicePolicyRoleResult.prototype, "createdTime", {
        get: function () {
            return this['created_time'];
        },
        set: function (createdTime) {
            this['created_time'] = createdTime;
        },
        enumerable: false,
        configurable: true
    });
    ServicePolicyRoleResult.prototype.withReferences = function (references) {
        this['references'] = references;
        return this;
    };
    return ServicePolicyRoleResult;
}());
exports.ServicePolicyRoleResult = ServicePolicyRoleResult;


/***/ }),

/***/ 34643:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServiceStatementEffectEnum = exports.ServiceStatement = void 0;
var ServiceStatement = /** @class */ (function () {
    function ServiceStatement(action, effect) {
        this['Action'] = action;
        this['Effect'] = effect;
    }
    ServiceStatement.prototype.withAction = function (action) {
        this['Action'] = action;
        return this;
    };
    Object.defineProperty(ServiceStatement.prototype, "action", {
        get: function () {
            return this['Action'];
        },
        set: function (action) {
            this['Action'] = action;
        },
        enumerable: false,
        configurable: true
    });
    ServiceStatement.prototype.withEffect = function (effect) {
        this['Effect'] = effect;
        return this;
    };
    Object.defineProperty(ServiceStatement.prototype, "effect", {
        get: function () {
            return this['Effect'];
        },
        set: function (effect) {
            this['Effect'] = effect;
        },
        enumerable: false,
        configurable: true
    });
    ServiceStatement.prototype.withCondition = function (condition) {
        this['Condition'] = condition;
        return this;
    };
    Object.defineProperty(ServiceStatement.prototype, "condition", {
        get: function () {
            return this['Condition'];
        },
        set: function (condition) {
            this['Condition'] = condition;
        },
        enumerable: false,
        configurable: true
    });
    ServiceStatement.prototype.withResource = function (resource) {
        this['Resource'] = resource;
        return this;
    };
    Object.defineProperty(ServiceStatement.prototype, "resource", {
        get: function () {
            return this['Resource'];
        },
        set: function (resource) {
            this['Resource'] = resource;
        },
        enumerable: false,
        configurable: true
    });
    return ServiceStatement;
}());
exports.ServiceStatement = ServiceStatement;
/**
    * @export
    * @enum {string}
    */
var ServiceStatementEffectEnum;
(function (ServiceStatementEffectEnum) {
    ServiceStatementEffectEnum["ALLOW"] = "Allow";
    ServiceStatementEffectEnum["DENY"] = "Deny";
})(ServiceStatementEffectEnum = exports.ServiceStatementEffectEnum || (exports.ServiceStatementEffectEnum = {}));


/***/ }),

/***/ 93930:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowAgencyRequest = void 0;
var ShowAgencyRequest = /** @class */ (function () {
    function ShowAgencyRequest(agencyId) {
        this['agency_id'] = agencyId;
    }
    ShowAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(ShowAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowAgencyRequest;
}());
exports.ShowAgencyRequest = ShowAgencyRequest;


/***/ }),

/***/ 78298:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowAgencyResponse = /** @class */ (function (_super) {
    __extends(ShowAgencyResponse, _super);
    function ShowAgencyResponse() {
        return _super.call(this) || this;
    }
    ShowAgencyResponse.prototype.withAgency = function (agency) {
        this['agency'] = agency;
        return this;
    };
    return ShowAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowAgencyResponse = ShowAgencyResponse;


/***/ }),

/***/ 38856:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowCredential = void 0;
var ShowCredential = /** @class */ (function () {
    function ShowCredential(userId, access, status, createTime, lastUseTime, description) {
        this['user_id'] = userId;
        this['access'] = access;
        this['status'] = status;
        this['create_time'] = createTime;
        this['last_use_time'] = lastUseTime;
        this['description'] = description;
    }
    ShowCredential.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(ShowCredential.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    ShowCredential.prototype.withAccess = function (access) {
        this['access'] = access;
        return this;
    };
    ShowCredential.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    ShowCredential.prototype.withCreateTime = function (createTime) {
        this['create_time'] = createTime;
        return this;
    };
    Object.defineProperty(ShowCredential.prototype, "createTime", {
        get: function () {
            return this['create_time'];
        },
        set: function (createTime) {
            this['create_time'] = createTime;
        },
        enumerable: false,
        configurable: true
    });
    ShowCredential.prototype.withLastUseTime = function (lastUseTime) {
        this['last_use_time'] = lastUseTime;
        return this;
    };
    Object.defineProperty(ShowCredential.prototype, "lastUseTime", {
        get: function () {
            return this['last_use_time'];
        },
        set: function (lastUseTime) {
            this['last_use_time'] = lastUseTime;
        },
        enumerable: false,
        configurable: true
    });
    ShowCredential.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return ShowCredential;
}());
exports.ShowCredential = ShowCredential;


/***/ }),

/***/ 45830:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowCustomPolicyRequest = void 0;
var ShowCustomPolicyRequest = /** @class */ (function () {
    function ShowCustomPolicyRequest(roleId) {
        this['role_id'] = roleId;
    }
    ShowCustomPolicyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(ShowCustomPolicyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowCustomPolicyRequest;
}());
exports.ShowCustomPolicyRequest = ShowCustomPolicyRequest;


/***/ }),

/***/ 97794:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowCustomPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowCustomPolicyResponse = /** @class */ (function (_super) {
    __extends(ShowCustomPolicyResponse, _super);
    function ShowCustomPolicyResponse() {
        return _super.call(this) || this;
    }
    ShowCustomPolicyResponse.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return ShowCustomPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowCustomPolicyResponse = ShowCustomPolicyResponse;


/***/ }),

/***/ 74322:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainApiAclPolicyRequest = void 0;
var ShowDomainApiAclPolicyRequest = /** @class */ (function () {
    function ShowDomainApiAclPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    ShowDomainApiAclPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ShowDomainApiAclPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainApiAclPolicyRequest;
}());
exports.ShowDomainApiAclPolicyRequest = ShowDomainApiAclPolicyRequest;


/***/ }),

/***/ 31490:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainApiAclPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowDomainApiAclPolicyResponse = /** @class */ (function (_super) {
    __extends(ShowDomainApiAclPolicyResponse, _super);
    function ShowDomainApiAclPolicyResponse() {
        return _super.call(this) || this;
    }
    ShowDomainApiAclPolicyResponse.prototype.withApiAclPolicy = function (apiAclPolicy) {
        this['api_acl_policy'] = apiAclPolicy;
        return this;
    };
    Object.defineProperty(ShowDomainApiAclPolicyResponse.prototype, "apiAclPolicy", {
        get: function () {
            return this['api_acl_policy'];
        },
        set: function (apiAclPolicy) {
            this['api_acl_policy'] = apiAclPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainApiAclPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowDomainApiAclPolicyResponse = ShowDomainApiAclPolicyResponse;


/***/ }),

/***/ 7020:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainConsoleAclPolicyRequest = void 0;
var ShowDomainConsoleAclPolicyRequest = /** @class */ (function () {
    function ShowDomainConsoleAclPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    ShowDomainConsoleAclPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ShowDomainConsoleAclPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainConsoleAclPolicyRequest;
}());
exports.ShowDomainConsoleAclPolicyRequest = ShowDomainConsoleAclPolicyRequest;


/***/ }),

/***/ 42500:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainConsoleAclPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowDomainConsoleAclPolicyResponse = /** @class */ (function (_super) {
    __extends(ShowDomainConsoleAclPolicyResponse, _super);
    function ShowDomainConsoleAclPolicyResponse() {
        return _super.call(this) || this;
    }
    ShowDomainConsoleAclPolicyResponse.prototype.withConsoleAclPolicy = function (consoleAclPolicy) {
        this['console_acl_policy'] = consoleAclPolicy;
        return this;
    };
    Object.defineProperty(ShowDomainConsoleAclPolicyResponse.prototype, "consoleAclPolicy", {
        get: function () {
            return this['console_acl_policy'];
        },
        set: function (consoleAclPolicy) {
            this['console_acl_policy'] = consoleAclPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainConsoleAclPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowDomainConsoleAclPolicyResponse = ShowDomainConsoleAclPolicyResponse;


/***/ }),

/***/ 50681:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainLoginPolicyRequest = void 0;
var ShowDomainLoginPolicyRequest = /** @class */ (function () {
    function ShowDomainLoginPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    ShowDomainLoginPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ShowDomainLoginPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainLoginPolicyRequest;
}());
exports.ShowDomainLoginPolicyRequest = ShowDomainLoginPolicyRequest;


/***/ }),

/***/ 90579:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainLoginPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowDomainLoginPolicyResponse = /** @class */ (function (_super) {
    __extends(ShowDomainLoginPolicyResponse, _super);
    function ShowDomainLoginPolicyResponse() {
        return _super.call(this) || this;
    }
    ShowDomainLoginPolicyResponse.prototype.withLoginPolicy = function (loginPolicy) {
        this['login_policy'] = loginPolicy;
        return this;
    };
    Object.defineProperty(ShowDomainLoginPolicyResponse.prototype, "loginPolicy", {
        get: function () {
            return this['login_policy'];
        },
        set: function (loginPolicy) {
            this['login_policy'] = loginPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainLoginPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowDomainLoginPolicyResponse = ShowDomainLoginPolicyResponse;


/***/ }),

/***/ 90408:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainPasswordPolicyRequest = void 0;
var ShowDomainPasswordPolicyRequest = /** @class */ (function () {
    function ShowDomainPasswordPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    ShowDomainPasswordPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ShowDomainPasswordPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainPasswordPolicyRequest;
}());
exports.ShowDomainPasswordPolicyRequest = ShowDomainPasswordPolicyRequest;


/***/ }),

/***/ 90621:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainPasswordPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowDomainPasswordPolicyResponse = /** @class */ (function (_super) {
    __extends(ShowDomainPasswordPolicyResponse, _super);
    function ShowDomainPasswordPolicyResponse() {
        return _super.call(this) || this;
    }
    ShowDomainPasswordPolicyResponse.prototype.withPasswordPolicy = function (passwordPolicy) {
        this['password_policy'] = passwordPolicy;
        return this;
    };
    Object.defineProperty(ShowDomainPasswordPolicyResponse.prototype, "passwordPolicy", {
        get: function () {
            return this['password_policy'];
        },
        set: function (passwordPolicy) {
            this['password_policy'] = passwordPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainPasswordPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowDomainPasswordPolicyResponse = ShowDomainPasswordPolicyResponse;


/***/ }),

/***/ 68884:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainProtectPolicyRequest = void 0;
var ShowDomainProtectPolicyRequest = /** @class */ (function () {
    function ShowDomainProtectPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    ShowDomainProtectPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ShowDomainProtectPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainProtectPolicyRequest;
}());
exports.ShowDomainProtectPolicyRequest = ShowDomainProtectPolicyRequest;


/***/ }),

/***/ 54516:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainProtectPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowDomainProtectPolicyResponse = /** @class */ (function (_super) {
    __extends(ShowDomainProtectPolicyResponse, _super);
    function ShowDomainProtectPolicyResponse() {
        return _super.call(this) || this;
    }
    ShowDomainProtectPolicyResponse.prototype.withProtectPolicy = function (protectPolicy) {
        this['protect_policy'] = protectPolicy;
        return this;
    };
    Object.defineProperty(ShowDomainProtectPolicyResponse.prototype, "protectPolicy", {
        get: function () {
            return this['protect_policy'];
        },
        set: function (protectPolicy) {
            this['protect_policy'] = protectPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainProtectPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowDomainProtectPolicyResponse = ShowDomainProtectPolicyResponse;


/***/ }),

/***/ 95950:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainQuotaRequestTypeEnum = exports.ShowDomainQuotaRequest = void 0;
var ShowDomainQuotaRequest = /** @class */ (function () {
    function ShowDomainQuotaRequest(domainId) {
        this['domain_id'] = domainId;
    }
    ShowDomainQuotaRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ShowDomainQuotaRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainQuotaRequest.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    return ShowDomainQuotaRequest;
}());
exports.ShowDomainQuotaRequest = ShowDomainQuotaRequest;
/**
    * @export
    * @enum {string}
    */
var ShowDomainQuotaRequestTypeEnum;
(function (ShowDomainQuotaRequestTypeEnum) {
    ShowDomainQuotaRequestTypeEnum["USER"] = "user";
    ShowDomainQuotaRequestTypeEnum["GROUP"] = "group";
    ShowDomainQuotaRequestTypeEnum["IDP"] = "idp";
    ShowDomainQuotaRequestTypeEnum["AGENCY"] = "agency";
    ShowDomainQuotaRequestTypeEnum["POLICY"] = "policy";
    ShowDomainQuotaRequestTypeEnum["ASSIGMENT_GROUP_MP"] = "assigment_group_mp";
    ShowDomainQuotaRequestTypeEnum["ASSIGMENT_AGENCY_MP"] = "assigment_agency_mp";
    ShowDomainQuotaRequestTypeEnum["ASSIGMENT_GROUP_EP"] = "assigment_group_ep";
    ShowDomainQuotaRequestTypeEnum["ASSIGMENT_USER_EP"] = "assigment_user_ep";
})(ShowDomainQuotaRequestTypeEnum = exports.ShowDomainQuotaRequestTypeEnum || (exports.ShowDomainQuotaRequestTypeEnum = {}));


/***/ }),

/***/ 21662:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainQuotaResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowDomainQuotaResponse = /** @class */ (function (_super) {
    __extends(ShowDomainQuotaResponse, _super);
    function ShowDomainQuotaResponse() {
        return _super.call(this) || this;
    }
    ShowDomainQuotaResponse.prototype.withQuotas = function (quotas) {
        this['quotas'] = quotas;
        return this;
    };
    return ShowDomainQuotaResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowDomainQuotaResponse = ShowDomainQuotaResponse;


/***/ }),

/***/ 71822:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainRoleAssignmentsRequest = void 0;
var ShowDomainRoleAssignmentsRequest = /** @class */ (function () {
    function ShowDomainRoleAssignmentsRequest(domainId) {
        this['domain_id'] = domainId;
    }
    ShowDomainRoleAssignmentsRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withSubject = function (subject) {
        this['subject'] = subject;
        return this;
    };
    ShowDomainRoleAssignmentsRequest.prototype.withSubjectUserId = function (subjectUserId) {
        this['subject.user_id'] = subjectUserId;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "subjectUserId", {
        get: function () {
            return this['subject.user_id'];
        },
        set: function (subjectUserId) {
            this['subject.user_id'] = subjectUserId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withSubjectGroupId = function (subjectGroupId) {
        this['subject.group_id'] = subjectGroupId;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "subjectGroupId", {
        get: function () {
            return this['subject.group_id'];
        },
        set: function (subjectGroupId) {
            this['subject.group_id'] = subjectGroupId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withSubjectAgencyId = function (subjectAgencyId) {
        this['subject.agency_id'] = subjectAgencyId;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "subjectAgencyId", {
        get: function () {
            return this['subject.agency_id'];
        },
        set: function (subjectAgencyId) {
            this['subject.agency_id'] = subjectAgencyId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    ShowDomainRoleAssignmentsRequest.prototype.withScopeProjectId = function (scopeProjectId) {
        this['scope.project_id'] = scopeProjectId;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "scopeProjectId", {
        get: function () {
            return this['scope.project_id'];
        },
        set: function (scopeProjectId) {
            this['scope.project_id'] = scopeProjectId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withScopeDomainId = function (scopeDomainId) {
        this['scope.domain_id'] = scopeDomainId;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "scopeDomainId", {
        get: function () {
            return this['scope.domain_id'];
        },
        set: function (scopeDomainId) {
            this['scope.domain_id'] = scopeDomainId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withScopeEnterpriseProjectsId = function (scopeEnterpriseProjectsId) {
        this['scope.enterprise_projects_id'] = scopeEnterpriseProjectsId;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "scopeEnterpriseProjectsId", {
        get: function () {
            return this['scope.enterprise_projects_id'];
        },
        set: function (scopeEnterpriseProjectsId) {
            this['scope.enterprise_projects_id'] = scopeEnterpriseProjectsId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withIsInherited = function (isInherited) {
        this['is_inherited'] = isInherited;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "isInherited", {
        get: function () {
            return this['is_inherited'];
        },
        set: function (isInherited) {
            this['is_inherited'] = isInherited;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withIncludeGroup = function (includeGroup) {
        this['include_group'] = includeGroup;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "includeGroup", {
        get: function () {
            return this['include_group'];
        },
        set: function (includeGroup) {
            this['include_group'] = includeGroup;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsRequest.prototype.withPage = function (page) {
        this['page'] = page;
        return this;
    };
    ShowDomainRoleAssignmentsRequest.prototype.withPerPage = function (perPage) {
        this['per_page'] = perPage;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsRequest.prototype, "perPage", {
        get: function () {
            return this['per_page'];
        },
        set: function (perPage) {
            this['per_page'] = perPage;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainRoleAssignmentsRequest;
}());
exports.ShowDomainRoleAssignmentsRequest = ShowDomainRoleAssignmentsRequest;


/***/ }),

/***/ 24999:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowDomainRoleAssignmentsResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowDomainRoleAssignmentsResponse = /** @class */ (function (_super) {
    __extends(ShowDomainRoleAssignmentsResponse, _super);
    function ShowDomainRoleAssignmentsResponse() {
        return _super.call(this) || this;
    }
    ShowDomainRoleAssignmentsResponse.prototype.withTotalNum = function (totalNum) {
        this['total_num'] = totalNum;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsResponse.prototype, "totalNum", {
        get: function () {
            return this['total_num'];
        },
        set: function (totalNum) {
            this['total_num'] = totalNum;
        },
        enumerable: false,
        configurable: true
    });
    ShowDomainRoleAssignmentsResponse.prototype.withRoleAssignments = function (roleAssignments) {
        this['role_assignments'] = roleAssignments;
        return this;
    };
    Object.defineProperty(ShowDomainRoleAssignmentsResponse.prototype, "roleAssignments", {
        get: function () {
            return this['role_assignments'];
        },
        set: function (roleAssignments) {
            this['role_assignments'] = roleAssignments;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDomainRoleAssignmentsResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowDomainRoleAssignmentsResponse = ShowDomainRoleAssignmentsResponse;


/***/ }),

/***/ 24591:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowMetadataRequest = void 0;
var ShowMetadataRequest = /** @class */ (function () {
    function ShowMetadataRequest(idpId, protocolId) {
        this['idp_id'] = idpId;
        this['protocol_id'] = protocolId;
    }
    ShowMetadataRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(ShowMetadataRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    ShowMetadataRequest.prototype.withProtocolId = function (protocolId) {
        this['protocol_id'] = protocolId;
        return this;
    };
    Object.defineProperty(ShowMetadataRequest.prototype, "protocolId", {
        get: function () {
            return this['protocol_id'];
        },
        set: function (protocolId) {
            this['protocol_id'] = protocolId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowMetadataRequest;
}());
exports.ShowMetadataRequest = ShowMetadataRequest;


/***/ }),

/***/ 3135:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowMetadataResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowMetadataResponse = /** @class */ (function (_super) {
    __extends(ShowMetadataResponse, _super);
    function ShowMetadataResponse() {
        return _super.call(this) || this;
    }
    ShowMetadataResponse.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ShowMetadataResponse.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(ShowMetadataResponse.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    ShowMetadataResponse.prototype.withEntityId = function (entityId) {
        this['entity_id'] = entityId;
        return this;
    };
    Object.defineProperty(ShowMetadataResponse.prototype, "entityId", {
        get: function () {
            return this['entity_id'];
        },
        set: function (entityId) {
            this['entity_id'] = entityId;
        },
        enumerable: false,
        configurable: true
    });
    ShowMetadataResponse.prototype.withProtocolId = function (protocolId) {
        this['protocol_id'] = protocolId;
        return this;
    };
    Object.defineProperty(ShowMetadataResponse.prototype, "protocolId", {
        get: function () {
            return this['protocol_id'];
        },
        set: function (protocolId) {
            this['protocol_id'] = protocolId;
        },
        enumerable: false,
        configurable: true
    });
    ShowMetadataResponse.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ShowMetadataResponse.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ShowMetadataResponse.prototype.withXaccountType = function (xaccountType) {
        this['xaccount_type'] = xaccountType;
        return this;
    };
    Object.defineProperty(ShowMetadataResponse.prototype, "xaccountType", {
        get: function () {
            return this['xaccount_type'];
        },
        set: function (xaccountType) {
            this['xaccount_type'] = xaccountType;
        },
        enumerable: false,
        configurable: true
    });
    ShowMetadataResponse.prototype.withUpdateTime = function (updateTime) {
        this['update_time'] = updateTime;
        return this;
    };
    Object.defineProperty(ShowMetadataResponse.prototype, "updateTime", {
        get: function () {
            return this['update_time'];
        },
        set: function (updateTime) {
            this['update_time'] = updateTime;
        },
        enumerable: false,
        configurable: true
    });
    ShowMetadataResponse.prototype.withData = function (data) {
        this['data'] = data;
        return this;
    };
    return ShowMetadataResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowMetadataResponse = ShowMetadataResponse;


/***/ }),

/***/ 21897:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowOpenIdConnectConfigRequest = void 0;
var ShowOpenIdConnectConfigRequest = /** @class */ (function () {
    function ShowOpenIdConnectConfigRequest(idpId) {
        this['idp_id'] = idpId;
    }
    ShowOpenIdConnectConfigRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(ShowOpenIdConnectConfigRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowOpenIdConnectConfigRequest;
}());
exports.ShowOpenIdConnectConfigRequest = ShowOpenIdConnectConfigRequest;


/***/ }),

/***/ 89363:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowOpenIdConnectConfigResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowOpenIdConnectConfigResponse = /** @class */ (function (_super) {
    __extends(ShowOpenIdConnectConfigResponse, _super);
    function ShowOpenIdConnectConfigResponse() {
        return _super.call(this) || this;
    }
    ShowOpenIdConnectConfigResponse.prototype.withOpenidConnectConfig = function (openidConnectConfig) {
        this['openid_connect_config'] = openidConnectConfig;
        return this;
    };
    Object.defineProperty(ShowOpenIdConnectConfigResponse.prototype, "openidConnectConfig", {
        get: function () {
            return this['openid_connect_config'];
        },
        set: function (openidConnectConfig) {
            this['openid_connect_config'] = openidConnectConfig;
        },
        enumerable: false,
        configurable: true
    });
    return ShowOpenIdConnectConfigResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowOpenIdConnectConfigResponse = ShowOpenIdConnectConfigResponse;


/***/ }),

/***/ 24339:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowPermanentAccessKeyRequest = void 0;
var ShowPermanentAccessKeyRequest = /** @class */ (function () {
    function ShowPermanentAccessKeyRequest(accessKey) {
        this['access_key'] = accessKey;
    }
    ShowPermanentAccessKeyRequest.prototype.withAccessKey = function (accessKey) {
        this['access_key'] = accessKey;
        return this;
    };
    Object.defineProperty(ShowPermanentAccessKeyRequest.prototype, "accessKey", {
        get: function () {
            return this['access_key'];
        },
        set: function (accessKey) {
            this['access_key'] = accessKey;
        },
        enumerable: false,
        configurable: true
    });
    return ShowPermanentAccessKeyRequest;
}());
exports.ShowPermanentAccessKeyRequest = ShowPermanentAccessKeyRequest;


/***/ }),

/***/ 86955:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowPermanentAccessKeyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowPermanentAccessKeyResponse = /** @class */ (function (_super) {
    __extends(ShowPermanentAccessKeyResponse, _super);
    function ShowPermanentAccessKeyResponse() {
        return _super.call(this) || this;
    }
    ShowPermanentAccessKeyResponse.prototype.withCredential = function (credential) {
        this['credential'] = credential;
        return this;
    };
    return ShowPermanentAccessKeyResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowPermanentAccessKeyResponse = ShowPermanentAccessKeyResponse;


/***/ }),

/***/ 42648:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowProjectDetailsAndStatusRequest = void 0;
var ShowProjectDetailsAndStatusRequest = /** @class */ (function () {
    function ShowProjectDetailsAndStatusRequest() {
    }
    return ShowProjectDetailsAndStatusRequest;
}());
exports.ShowProjectDetailsAndStatusRequest = ShowProjectDetailsAndStatusRequest;


/***/ }),

/***/ 35561:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowProjectDetailsAndStatusResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowProjectDetailsAndStatusResponse = /** @class */ (function (_super) {
    __extends(ShowProjectDetailsAndStatusResponse, _super);
    function ShowProjectDetailsAndStatusResponse() {
        return _super.call(this) || this;
    }
    ShowProjectDetailsAndStatusResponse.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return ShowProjectDetailsAndStatusResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowProjectDetailsAndStatusResponse = ShowProjectDetailsAndStatusResponse;


/***/ }),

/***/ 12396:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowProjectQuotaRequest = void 0;
var ShowProjectQuotaRequest = /** @class */ (function () {
    function ShowProjectQuotaRequest() {
    }
    return ShowProjectQuotaRequest;
}());
exports.ShowProjectQuotaRequest = ShowProjectQuotaRequest;


/***/ }),

/***/ 45959:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowProjectQuotaResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowProjectQuotaResponse = /** @class */ (function (_super) {
    __extends(ShowProjectQuotaResponse, _super);
    function ShowProjectQuotaResponse() {
        return _super.call(this) || this;
    }
    ShowProjectQuotaResponse.prototype.withQuotas = function (quotas) {
        this['quotas'] = quotas;
        return this;
    };
    return ShowProjectQuotaResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowProjectQuotaResponse = ShowProjectQuotaResponse;


/***/ }),

/***/ 47731:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowUserLoginProtectRequest = void 0;
var ShowUserLoginProtectRequest = /** @class */ (function () {
    function ShowUserLoginProtectRequest(userId) {
        this['user_id'] = userId;
    }
    ShowUserLoginProtectRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(ShowUserLoginProtectRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowUserLoginProtectRequest;
}());
exports.ShowUserLoginProtectRequest = ShowUserLoginProtectRequest;


/***/ }),

/***/ 9703:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowUserLoginProtectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowUserLoginProtectResponse = /** @class */ (function (_super) {
    __extends(ShowUserLoginProtectResponse, _super);
    function ShowUserLoginProtectResponse() {
        return _super.call(this) || this;
    }
    ShowUserLoginProtectResponse.prototype.withLoginProtect = function (loginProtect) {
        this['login_protect'] = loginProtect;
        return this;
    };
    Object.defineProperty(ShowUserLoginProtectResponse.prototype, "loginProtect", {
        get: function () {
            return this['login_protect'];
        },
        set: function (loginProtect) {
            this['login_protect'] = loginProtect;
        },
        enumerable: false,
        configurable: true
    });
    return ShowUserLoginProtectResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowUserLoginProtectResponse = ShowUserLoginProtectResponse;


/***/ }),

/***/ 43985:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowUserMfaDeviceRequest = void 0;
var ShowUserMfaDeviceRequest = /** @class */ (function () {
    function ShowUserMfaDeviceRequest(userId) {
        this['user_id'] = userId;
    }
    ShowUserMfaDeviceRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(ShowUserMfaDeviceRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowUserMfaDeviceRequest;
}());
exports.ShowUserMfaDeviceRequest = ShowUserMfaDeviceRequest;


/***/ }),

/***/ 88473:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowUserMfaDeviceResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowUserMfaDeviceResponse = /** @class */ (function (_super) {
    __extends(ShowUserMfaDeviceResponse, _super);
    function ShowUserMfaDeviceResponse() {
        return _super.call(this) || this;
    }
    ShowUserMfaDeviceResponse.prototype.withVirtualMfaDevice = function (virtualMfaDevice) {
        this['virtual_mfa_device'] = virtualMfaDevice;
        return this;
    };
    Object.defineProperty(ShowUserMfaDeviceResponse.prototype, "virtualMfaDevice", {
        get: function () {
            return this['virtual_mfa_device'];
        },
        set: function (virtualMfaDevice) {
            this['virtual_mfa_device'] = virtualMfaDevice;
        },
        enumerable: false,
        configurable: true
    });
    return ShowUserMfaDeviceResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowUserMfaDeviceResponse = ShowUserMfaDeviceResponse;


/***/ }),

/***/ 1542:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowUserRequest = void 0;
var ShowUserRequest = /** @class */ (function () {
    function ShowUserRequest(userId) {
        this['user_id'] = userId;
    }
    ShowUserRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(ShowUserRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    return ShowUserRequest;
}());
exports.ShowUserRequest = ShowUserRequest;


/***/ }),

/***/ 30187:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowUserResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var ShowUserResponse = /** @class */ (function (_super) {
    __extends(ShowUserResponse, _super);
    function ShowUserResponse() {
        return _super.call(this) || this;
    }
    ShowUserResponse.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return ShowUserResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowUserResponse = ShowUserResponse;


/***/ }),

/***/ 82797:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShowUserResult = void 0;
var ShowUserResult = /** @class */ (function () {
    function ShowUserResult(enabled, id, domainId, name, links, isDomainOwner, accessMode, description) {
        this['enabled'] = enabled;
        this['id'] = id;
        this['domain_id'] = domainId;
        this['name'] = name;
        this['links'] = links;
        this['is_domain_owner'] = isDomainOwner;
        this['access_mode'] = accessMode;
        this['description'] = description;
    }
    ShowUserResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    ShowUserResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ShowUserResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    ShowUserResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    ShowUserResult.prototype.withXuserId = function (xuserId) {
        this['xuser_id'] = xuserId;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "xuserId", {
        get: function () {
            return this['xuser_id'];
        },
        set: function (xuserId) {
            this['xuser_id'] = xuserId;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withXuserType = function (xuserType) {
        this['xuser_type'] = xuserType;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "xuserType", {
        get: function () {
            return this['xuser_type'];
        },
        set: function (xuserType) {
            this['xuser_type'] = xuserType;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withAreacode = function (areacode) {
        this['areacode'] = areacode;
        return this;
    };
    ShowUserResult.prototype.withEmail = function (email) {
        this['email'] = email;
        return this;
    };
    ShowUserResult.prototype.withPhone = function (phone) {
        this['phone'] = phone;
        return this;
    };
    ShowUserResult.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withUpdateTime = function (updateTime) {
        this['update_time'] = updateTime;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "updateTime", {
        get: function () {
            return this['update_time'];
        },
        set: function (updateTime) {
            this['update_time'] = updateTime;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withCreateTime = function (createTime) {
        this['create_time'] = createTime;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "createTime", {
        get: function () {
            return this['create_time'];
        },
        set: function (createTime) {
            this['create_time'] = createTime;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withLastLoginTime = function (lastLoginTime) {
        this['last_login_time'] = lastLoginTime;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "lastLoginTime", {
        get: function () {
            return this['last_login_time'];
        },
        set: function (lastLoginTime) {
            this['last_login_time'] = lastLoginTime;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withPwdStrength = function (pwdStrength) {
        this['pwd_strength'] = pwdStrength;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "pwdStrength", {
        get: function () {
            return this['pwd_strength'];
        },
        set: function (pwdStrength) {
            this['pwd_strength'] = pwdStrength;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withIsDomainOwner = function (isDomainOwner) {
        this['is_domain_owner'] = isDomainOwner;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "isDomainOwner", {
        get: function () {
            return this['is_domain_owner'];
        },
        set: function (isDomainOwner) {
            this['is_domain_owner'] = isDomainOwner;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withAccessMode = function (accessMode) {
        this['access_mode'] = accessMode;
        return this;
    };
    Object.defineProperty(ShowUserResult.prototype, "accessMode", {
        get: function () {
            return this['access_mode'];
        },
        set: function (accessMode) {
            this['access_mode'] = accessMode;
        },
        enumerable: false,
        configurable: true
    });
    ShowUserResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return ShowUserResult;
}());
exports.ShowUserResult = ShowUserResult;


/***/ }),

/***/ 58469:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenAuth = void 0;
var TokenAuth = /** @class */ (function () {
    function TokenAuth(identity) {
        this['identity'] = identity;
    }
    TokenAuth.prototype.withIdentity = function (identity) {
        this['identity'] = identity;
        return this;
    };
    return TokenAuth;
}());
exports.TokenAuth = TokenAuth;


/***/ }),

/***/ 8827:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenAuthIdentityMethodsEnum = exports.TokenAuthIdentity = void 0;
var TokenAuthIdentity = /** @class */ (function () {
    function TokenAuthIdentity(methods) {
        this['methods'] = methods;
    }
    TokenAuthIdentity.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    TokenAuthIdentity.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    TokenAuthIdentity.prototype.withPolicy = function (policy) {
        this['policy'] = policy;
        return this;
    };
    return TokenAuthIdentity;
}());
exports.TokenAuthIdentity = TokenAuthIdentity;
/**
    * @export
    * @enum {string}
    */
var TokenAuthIdentityMethodsEnum;
(function (TokenAuthIdentityMethodsEnum) {
    TokenAuthIdentityMethodsEnum["TOKEN"] = "token";
})(TokenAuthIdentityMethodsEnum = exports.TokenAuthIdentityMethodsEnum || (exports.TokenAuthIdentityMethodsEnum = {}));


/***/ }),

/***/ 59451:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenCatalog = void 0;
var TokenCatalog = /** @class */ (function () {
    function TokenCatalog(type, id, name, endpoints) {
        this['type'] = type;
        this['id'] = id;
        this['name'] = name;
        this['endpoints'] = endpoints;
    }
    TokenCatalog.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    TokenCatalog.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    TokenCatalog.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    TokenCatalog.prototype.withEndpoints = function (endpoints) {
        this['endpoints'] = endpoints;
        return this;
    };
    return TokenCatalog;
}());
exports.TokenCatalog = TokenCatalog;


/***/ }),

/***/ 72746:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenCatalogEndpoint = void 0;
var TokenCatalogEndpoint = /** @class */ (function () {
    function TokenCatalogEndpoint(url, region, regionId, _interface, id) {
        this['url'] = url;
        this['region'] = region;
        this['region_id'] = regionId;
        this['interface'] = _interface;
        this['id'] = id;
    }
    TokenCatalogEndpoint.prototype.withUrl = function (url) {
        this['url'] = url;
        return this;
    };
    TokenCatalogEndpoint.prototype.withRegion = function (region) {
        this['region'] = region;
        return this;
    };
    TokenCatalogEndpoint.prototype.withRegionId = function (regionId) {
        this['region_id'] = regionId;
        return this;
    };
    Object.defineProperty(TokenCatalogEndpoint.prototype, "regionId", {
        get: function () {
            return this['region_id'];
        },
        set: function (regionId) {
            this['region_id'] = regionId;
        },
        enumerable: false,
        configurable: true
    });
    TokenCatalogEndpoint.prototype.withInterface = function (_interface) {
        this['interface'] = _interface;
        return this;
    };
    Object.defineProperty(TokenCatalogEndpoint.prototype, "_interface", {
        get: function () {
            return this['interface'];
        },
        set: function (_interface) {
            this['interface'] = _interface;
        },
        enumerable: false,
        configurable: true
    });
    TokenCatalogEndpoint.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return TokenCatalogEndpoint;
}());
exports.TokenCatalogEndpoint = TokenCatalogEndpoint;


/***/ }),

/***/ 35773:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenDomainResult = void 0;
var TokenDomainResult = /** @class */ (function () {
    function TokenDomainResult(name, id) {
        this['name'] = name;
        this['id'] = id;
    }
    TokenDomainResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    TokenDomainResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return TokenDomainResult;
}());
exports.TokenDomainResult = TokenDomainResult;


/***/ }),

/***/ 76985:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenProjectDomainResult = void 0;
var TokenProjectDomainResult = /** @class */ (function () {
    function TokenProjectDomainResult(name, id) {
        this['name'] = name;
        this['id'] = id;
    }
    TokenProjectDomainResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    TokenProjectDomainResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return TokenProjectDomainResult;
}());
exports.TokenProjectDomainResult = TokenProjectDomainResult;


/***/ }),

/***/ 23326:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenProjectResult = void 0;
var TokenProjectResult = /** @class */ (function () {
    function TokenProjectResult(name, id, domain) {
        this['name'] = name;
        this['id'] = id;
        this['domain'] = domain;
    }
    TokenProjectResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    TokenProjectResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    TokenProjectResult.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    return TokenProjectResult;
}());
exports.TokenProjectResult = TokenProjectResult;


/***/ }),

/***/ 27443:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenResult = void 0;
var TokenResult = /** @class */ (function () {
    function TokenResult(catalog, expiresAt, issuedAt, methods, roles, user) {
        this['catalog'] = catalog;
        this['expires_at'] = expiresAt;
        this['issued_at'] = issuedAt;
        this['methods'] = methods;
        this['roles'] = roles;
        this['user'] = user;
    }
    TokenResult.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    TokenResult.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    TokenResult.prototype.withExpiresAt = function (expiresAt) {
        this['expires_at'] = expiresAt;
        return this;
    };
    Object.defineProperty(TokenResult.prototype, "expiresAt", {
        get: function () {
            return this['expires_at'];
        },
        set: function (expiresAt) {
            this['expires_at'] = expiresAt;
        },
        enumerable: false,
        configurable: true
    });
    TokenResult.prototype.withIssuedAt = function (issuedAt) {
        this['issued_at'] = issuedAt;
        return this;
    };
    Object.defineProperty(TokenResult.prototype, "issuedAt", {
        get: function () {
            return this['issued_at'];
        },
        set: function (issuedAt) {
            this['issued_at'] = issuedAt;
        },
        enumerable: false,
        configurable: true
    });
    TokenResult.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    TokenResult.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    TokenResult.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    TokenResult.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return TokenResult;
}());
exports.TokenResult = TokenResult;


/***/ }),

/***/ 85428:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenRole = void 0;
var TokenRole = /** @class */ (function () {
    function TokenRole(name, id) {
        this['name'] = name;
        this['id'] = id;
    }
    TokenRole.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    TokenRole.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return TokenRole;
}());
exports.TokenRole = TokenRole;


/***/ }),

/***/ 47885:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenSocpeOption = void 0;
var TokenSocpeOption = /** @class */ (function () {
    function TokenSocpeOption() {
    }
    TokenSocpeOption.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    TokenSocpeOption.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return TokenSocpeOption;
}());
exports.TokenSocpeOption = TokenSocpeOption;


/***/ }),

/***/ 10653:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenUserDomainResult = void 0;
var TokenUserDomainResult = /** @class */ (function () {
    function TokenUserDomainResult(name, id) {
        this['name'] = name;
        this['id'] = id;
    }
    TokenUserDomainResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    TokenUserDomainResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    return TokenUserDomainResult;
}());
exports.TokenUserDomainResult = TokenUserDomainResult;


/***/ }),

/***/ 7701:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenUserOsfederation = void 0;
var TokenUserOsfederation = /** @class */ (function () {
    function TokenUserOsfederation(groups, identityProvider, protocol) {
        this['groups'] = groups;
        this['identity_provider'] = identityProvider;
        this['protocol'] = protocol;
    }
    TokenUserOsfederation.prototype.withGroups = function (groups) {
        this['groups'] = groups;
        return this;
    };
    TokenUserOsfederation.prototype.withIdentityProvider = function (identityProvider) {
        this['identity_provider'] = identityProvider;
        return this;
    };
    Object.defineProperty(TokenUserOsfederation.prototype, "identityProvider", {
        get: function () {
            return this['identity_provider'];
        },
        set: function (identityProvider) {
            this['identity_provider'] = identityProvider;
        },
        enumerable: false,
        configurable: true
    });
    TokenUserOsfederation.prototype.withProtocol = function (protocol) {
        this['protocol'] = protocol;
        return this;
    };
    return TokenUserOsfederation;
}());
exports.TokenUserOsfederation = TokenUserOsfederation;


/***/ }),

/***/ 1132:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TokenUserResult = void 0;
var TokenUserResult = /** @class */ (function () {
    function TokenUserResult(name, id, passwordExpiresAt, domain) {
        this['name'] = name;
        this['id'] = id;
        this['password_expires_at'] = passwordExpiresAt;
        this['domain'] = domain;
    }
    TokenUserResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    TokenUserResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    TokenUserResult.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(TokenUserResult.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    TokenUserResult.prototype.withDomain = function (domain) {
        this['domain'] = domain;
        return this;
    };
    return TokenUserResult;
}());
exports.TokenUserResult = TokenUserResult;


/***/ }),

/***/ 32616:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UnbindMfaDevice = void 0;
var UnbindMfaDevice = /** @class */ (function () {
    function UnbindMfaDevice(userId, authenticationCode, serialNumber) {
        this['user_id'] = userId;
        this['authentication_code'] = authenticationCode;
        this['serial_number'] = serialNumber;
    }
    UnbindMfaDevice.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(UnbindMfaDevice.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    UnbindMfaDevice.prototype.withAuthenticationCode = function (authenticationCode) {
        this['authentication_code'] = authenticationCode;
        return this;
    };
    Object.defineProperty(UnbindMfaDevice.prototype, "authenticationCode", {
        get: function () {
            return this['authentication_code'];
        },
        set: function (authenticationCode) {
            this['authentication_code'] = authenticationCode;
        },
        enumerable: false,
        configurable: true
    });
    UnbindMfaDevice.prototype.withSerialNumber = function (serialNumber) {
        this['serial_number'] = serialNumber;
        return this;
    };
    Object.defineProperty(UnbindMfaDevice.prototype, "serialNumber", {
        get: function () {
            return this['serial_number'];
        },
        set: function (serialNumber) {
            this['serial_number'] = serialNumber;
        },
        enumerable: false,
        configurable: true
    });
    return UnbindMfaDevice;
}());
exports.UnbindMfaDevice = UnbindMfaDevice;


/***/ }),

/***/ 5203:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UnscopedTokenInfo = void 0;
var UnscopedTokenInfo = /** @class */ (function () {
    function UnscopedTokenInfo(expiresAt, methods, issuedAt, user) {
        this['expires_at'] = expiresAt;
        this['methods'] = methods;
        this['issued_at'] = issuedAt;
        this['user'] = user;
    }
    UnscopedTokenInfo.prototype.withExpiresAt = function (expiresAt) {
        this['expires_at'] = expiresAt;
        return this;
    };
    Object.defineProperty(UnscopedTokenInfo.prototype, "expiresAt", {
        get: function () {
            return this['expires_at'];
        },
        set: function (expiresAt) {
            this['expires_at'] = expiresAt;
        },
        enumerable: false,
        configurable: true
    });
    UnscopedTokenInfo.prototype.withMethods = function (methods) {
        this['methods'] = methods;
        return this;
    };
    UnscopedTokenInfo.prototype.withIssuedAt = function (issuedAt) {
        this['issued_at'] = issuedAt;
        return this;
    };
    Object.defineProperty(UnscopedTokenInfo.prototype, "issuedAt", {
        get: function () {
            return this['issued_at'];
        },
        set: function (issuedAt) {
            this['issued_at'] = issuedAt;
        },
        enumerable: false,
        configurable: true
    });
    UnscopedTokenInfo.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    UnscopedTokenInfo.prototype.withRoles = function (roles) {
        this['roles'] = roles;
        return this;
    };
    UnscopedTokenInfo.prototype.withCatalog = function (catalog) {
        this['catalog'] = catalog;
        return this;
    };
    return UnscopedTokenInfo;
}());
exports.UnscopedTokenInfo = UnscopedTokenInfo;


/***/ }),

/***/ 16659:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UnscopedTokenInfoCatalog = void 0;
var UnscopedTokenInfoCatalog = /** @class */ (function () {
    function UnscopedTokenInfoCatalog() {
    }
    UnscopedTokenInfoCatalog.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    UnscopedTokenInfoCatalog.prototype.withInterface = function (_interface) {
        this['interface'] = _interface;
        return this;
    };
    Object.defineProperty(UnscopedTokenInfoCatalog.prototype, "_interface", {
        get: function () {
            return this['interface'];
        },
        set: function (_interface) {
            this['interface'] = _interface;
        },
        enumerable: false,
        configurable: true
    });
    UnscopedTokenInfoCatalog.prototype.withRegion = function (region) {
        this['region'] = region;
        return this;
    };
    UnscopedTokenInfoCatalog.prototype.withRegionId = function (regionId) {
        this['region_id'] = regionId;
        return this;
    };
    Object.defineProperty(UnscopedTokenInfoCatalog.prototype, "regionId", {
        get: function () {
            return this['region_id'];
        },
        set: function (regionId) {
            this['region_id'] = regionId;
        },
        enumerable: false,
        configurable: true
    });
    UnscopedTokenInfoCatalog.prototype.withUrl = function (url) {
        this['url'] = url;
        return this;
    };
    return UnscopedTokenInfoCatalog;
}());
exports.UnscopedTokenInfoCatalog = UnscopedTokenInfoCatalog;


/***/ }),

/***/ 29068:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UnscopedTokenInfoRoles = void 0;
var UnscopedTokenInfoRoles = /** @class */ (function () {
    function UnscopedTokenInfoRoles() {
    }
    UnscopedTokenInfoRoles.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    UnscopedTokenInfoRoles.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return UnscopedTokenInfoRoles;
}());
exports.UnscopedTokenInfoRoles = UnscopedTokenInfoRoles;


/***/ }),

/***/ 46587:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateAgencyCustomPolicyRequest = void 0;
var UpdateAgencyCustomPolicyRequest = /** @class */ (function () {
    function UpdateAgencyCustomPolicyRequest(roleId) {
        this['role_id'] = roleId;
    }
    UpdateAgencyCustomPolicyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(UpdateAgencyCustomPolicyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateAgencyCustomPolicyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateAgencyCustomPolicyRequest;
}());
exports.UpdateAgencyCustomPolicyRequest = UpdateAgencyCustomPolicyRequest;


/***/ }),

/***/ 61317:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateAgencyCustomPolicyRequestBody = void 0;
var UpdateAgencyCustomPolicyRequestBody = /** @class */ (function () {
    function UpdateAgencyCustomPolicyRequestBody(role) {
        this['role'] = role;
    }
    UpdateAgencyCustomPolicyRequestBody.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return UpdateAgencyCustomPolicyRequestBody;
}());
exports.UpdateAgencyCustomPolicyRequestBody = UpdateAgencyCustomPolicyRequestBody;


/***/ }),

/***/ 60959:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateAgencyCustomPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateAgencyCustomPolicyResponse = /** @class */ (function (_super) {
    __extends(UpdateAgencyCustomPolicyResponse, _super);
    function UpdateAgencyCustomPolicyResponse() {
        return _super.call(this) || this;
    }
    UpdateAgencyCustomPolicyResponse.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return UpdateAgencyCustomPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateAgencyCustomPolicyResponse = UpdateAgencyCustomPolicyResponse;


/***/ }),

/***/ 41540:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateAgencyOptionDurationEnum = exports.UpdateAgencyOption = void 0;
var UpdateAgencyOption = /** @class */ (function () {
    function UpdateAgencyOption() {
    }
    UpdateAgencyOption.prototype.withTrustDomainId = function (trustDomainId) {
        this['trust_domain_id'] = trustDomainId;
        return this;
    };
    Object.defineProperty(UpdateAgencyOption.prototype, "trustDomainId", {
        get: function () {
            return this['trust_domain_id'];
        },
        set: function (trustDomainId) {
            this['trust_domain_id'] = trustDomainId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateAgencyOption.prototype.withTrustDomainName = function (trustDomainName) {
        this['trust_domain_name'] = trustDomainName;
        return this;
    };
    Object.defineProperty(UpdateAgencyOption.prototype, "trustDomainName", {
        get: function () {
            return this['trust_domain_name'];
        },
        set: function (trustDomainName) {
            this['trust_domain_name'] = trustDomainName;
        },
        enumerable: false,
        configurable: true
    });
    UpdateAgencyOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    UpdateAgencyOption.prototype.withDuration = function (duration) {
        this['duration'] = duration;
        return this;
    };
    return UpdateAgencyOption;
}());
exports.UpdateAgencyOption = UpdateAgencyOption;
/**
    * @export
    * @enum {string}
    */
var UpdateAgencyOptionDurationEnum;
(function (UpdateAgencyOptionDurationEnum) {
    UpdateAgencyOptionDurationEnum["FOREVER"] = "FOREVER";
    UpdateAgencyOptionDurationEnum["ONEDAY"] = "ONEDAY";
})(UpdateAgencyOptionDurationEnum = exports.UpdateAgencyOptionDurationEnum || (exports.UpdateAgencyOptionDurationEnum = {}));


/***/ }),

/***/ 13872:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateAgencyRequest = void 0;
var UpdateAgencyRequest = /** @class */ (function () {
    function UpdateAgencyRequest(agencyId) {
        this['agency_id'] = agencyId;
    }
    UpdateAgencyRequest.prototype.withAgencyId = function (agencyId) {
        this['agency_id'] = agencyId;
        return this;
    };
    Object.defineProperty(UpdateAgencyRequest.prototype, "agencyId", {
        get: function () {
            return this['agency_id'];
        },
        set: function (agencyId) {
            this['agency_id'] = agencyId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateAgencyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateAgencyRequest;
}());
exports.UpdateAgencyRequest = UpdateAgencyRequest;


/***/ }),

/***/ 28854:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateAgencyRequestBody = void 0;
var UpdateAgencyRequestBody = /** @class */ (function () {
    function UpdateAgencyRequestBody(agency) {
        this['agency'] = agency;
    }
    UpdateAgencyRequestBody.prototype.withAgency = function (agency) {
        this['agency'] = agency;
        return this;
    };
    return UpdateAgencyRequestBody;
}());
exports.UpdateAgencyRequestBody = UpdateAgencyRequestBody;


/***/ }),

/***/ 99599:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateAgencyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateAgencyResponse = /** @class */ (function (_super) {
    __extends(UpdateAgencyResponse, _super);
    function UpdateAgencyResponse() {
        return _super.call(this) || this;
    }
    UpdateAgencyResponse.prototype.withAgency = function (agency) {
        this['agency'] = agency;
        return this;
    };
    return UpdateAgencyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateAgencyResponse = UpdateAgencyResponse;


/***/ }),

/***/ 90208:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateCloudServiceCustomPolicyRequest = void 0;
var UpdateCloudServiceCustomPolicyRequest = /** @class */ (function () {
    function UpdateCloudServiceCustomPolicyRequest(roleId) {
        this['role_id'] = roleId;
    }
    UpdateCloudServiceCustomPolicyRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(UpdateCloudServiceCustomPolicyRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateCloudServiceCustomPolicyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateCloudServiceCustomPolicyRequest;
}());
exports.UpdateCloudServiceCustomPolicyRequest = UpdateCloudServiceCustomPolicyRequest;


/***/ }),

/***/ 88516:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateCloudServiceCustomPolicyRequestBody = void 0;
var UpdateCloudServiceCustomPolicyRequestBody = /** @class */ (function () {
    function UpdateCloudServiceCustomPolicyRequestBody(role) {
        this['role'] = role;
    }
    UpdateCloudServiceCustomPolicyRequestBody.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return UpdateCloudServiceCustomPolicyRequestBody;
}());
exports.UpdateCloudServiceCustomPolicyRequestBody = UpdateCloudServiceCustomPolicyRequestBody;


/***/ }),

/***/ 55456:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateCloudServiceCustomPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateCloudServiceCustomPolicyResponse = /** @class */ (function (_super) {
    __extends(UpdateCloudServiceCustomPolicyResponse, _super);
    function UpdateCloudServiceCustomPolicyResponse() {
        return _super.call(this) || this;
    }
    UpdateCloudServiceCustomPolicyResponse.prototype.withRole = function (role) {
        this['role'] = role;
        return this;
    };
    return UpdateCloudServiceCustomPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateCloudServiceCustomPolicyResponse = UpdateCloudServiceCustomPolicyResponse;


/***/ }),

/***/ 2160:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateCredentialOptionStatusEnum = exports.UpdateCredentialOption = void 0;
var UpdateCredentialOption = /** @class */ (function () {
    function UpdateCredentialOption() {
    }
    UpdateCredentialOption.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    UpdateCredentialOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return UpdateCredentialOption;
}());
exports.UpdateCredentialOption = UpdateCredentialOption;
/**
    * @export
    * @enum {string}
    */
var UpdateCredentialOptionStatusEnum;
(function (UpdateCredentialOptionStatusEnum) {
    UpdateCredentialOptionStatusEnum["ACTIVE"] = "active";
    UpdateCredentialOptionStatusEnum["INACTIVE"] = "inactive";
})(UpdateCredentialOptionStatusEnum = exports.UpdateCredentialOptionStatusEnum || (exports.UpdateCredentialOptionStatusEnum = {}));


/***/ }),

/***/ 74260:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateCredentialResult = void 0;
var UpdateCredentialResult = /** @class */ (function () {
    function UpdateCredentialResult(userId, access, status, createTime, description) {
        this['user_id'] = userId;
        this['access'] = access;
        this['status'] = status;
        this['create_time'] = createTime;
        this['description'] = description;
    }
    UpdateCredentialResult.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(UpdateCredentialResult.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateCredentialResult.prototype.withAccess = function (access) {
        this['access'] = access;
        return this;
    };
    UpdateCredentialResult.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    UpdateCredentialResult.prototype.withCreateTime = function (createTime) {
        this['create_time'] = createTime;
        return this;
    };
    Object.defineProperty(UpdateCredentialResult.prototype, "createTime", {
        get: function () {
            return this['create_time'];
        },
        set: function (createTime) {
            this['create_time'] = createTime;
        },
        enumerable: false,
        configurable: true
    });
    UpdateCredentialResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return UpdateCredentialResult;
}());
exports.UpdateCredentialResult = UpdateCredentialResult;


/***/ }),

/***/ 75021:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainApiAclPolicyRequest = void 0;
var UpdateDomainApiAclPolicyRequest = /** @class */ (function () {
    function UpdateDomainApiAclPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    UpdateDomainApiAclPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(UpdateDomainApiAclPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateDomainApiAclPolicyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateDomainApiAclPolicyRequest;
}());
exports.UpdateDomainApiAclPolicyRequest = UpdateDomainApiAclPolicyRequest;


/***/ }),

/***/ 12786:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainApiAclPolicyRequestBody = void 0;
var UpdateDomainApiAclPolicyRequestBody = /** @class */ (function () {
    function UpdateDomainApiAclPolicyRequestBody(apiAclPolicy) {
        this['api_acl_policy'] = apiAclPolicy;
    }
    UpdateDomainApiAclPolicyRequestBody.prototype.withApiAclPolicy = function (apiAclPolicy) {
        this['api_acl_policy'] = apiAclPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainApiAclPolicyRequestBody.prototype, "apiAclPolicy", {
        get: function () {
            return this['api_acl_policy'];
        },
        set: function (apiAclPolicy) {
            this['api_acl_policy'] = apiAclPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainApiAclPolicyRequestBody;
}());
exports.UpdateDomainApiAclPolicyRequestBody = UpdateDomainApiAclPolicyRequestBody;


/***/ }),

/***/ 79550:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainApiAclPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateDomainApiAclPolicyResponse = /** @class */ (function (_super) {
    __extends(UpdateDomainApiAclPolicyResponse, _super);
    function UpdateDomainApiAclPolicyResponse() {
        return _super.call(this) || this;
    }
    UpdateDomainApiAclPolicyResponse.prototype.withApiAclPolicy = function (apiAclPolicy) {
        this['api_acl_policy'] = apiAclPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainApiAclPolicyResponse.prototype, "apiAclPolicy", {
        get: function () {
            return this['api_acl_policy'];
        },
        set: function (apiAclPolicy) {
            this['api_acl_policy'] = apiAclPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainApiAclPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateDomainApiAclPolicyResponse = UpdateDomainApiAclPolicyResponse;


/***/ }),

/***/ 57570:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainConsoleAclPolicyRequest = void 0;
var UpdateDomainConsoleAclPolicyRequest = /** @class */ (function () {
    function UpdateDomainConsoleAclPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    UpdateDomainConsoleAclPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(UpdateDomainConsoleAclPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateDomainConsoleAclPolicyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateDomainConsoleAclPolicyRequest;
}());
exports.UpdateDomainConsoleAclPolicyRequest = UpdateDomainConsoleAclPolicyRequest;


/***/ }),

/***/ 14903:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainConsoleAclPolicyRequestBody = void 0;
var UpdateDomainConsoleAclPolicyRequestBody = /** @class */ (function () {
    function UpdateDomainConsoleAclPolicyRequestBody(consoleAclPolicy) {
        this['console_acl_policy'] = consoleAclPolicy;
    }
    UpdateDomainConsoleAclPolicyRequestBody.prototype.withConsoleAclPolicy = function (consoleAclPolicy) {
        this['console_acl_policy'] = consoleAclPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainConsoleAclPolicyRequestBody.prototype, "consoleAclPolicy", {
        get: function () {
            return this['console_acl_policy'];
        },
        set: function (consoleAclPolicy) {
            this['console_acl_policy'] = consoleAclPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainConsoleAclPolicyRequestBody;
}());
exports.UpdateDomainConsoleAclPolicyRequestBody = UpdateDomainConsoleAclPolicyRequestBody;


/***/ }),

/***/ 25927:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainConsoleAclPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateDomainConsoleAclPolicyResponse = /** @class */ (function (_super) {
    __extends(UpdateDomainConsoleAclPolicyResponse, _super);
    function UpdateDomainConsoleAclPolicyResponse() {
        return _super.call(this) || this;
    }
    UpdateDomainConsoleAclPolicyResponse.prototype.withConsoleAclPolicy = function (consoleAclPolicy) {
        this['console_acl_policy'] = consoleAclPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainConsoleAclPolicyResponse.prototype, "consoleAclPolicy", {
        get: function () {
            return this['console_acl_policy'];
        },
        set: function (consoleAclPolicy) {
            this['console_acl_policy'] = consoleAclPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainConsoleAclPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateDomainConsoleAclPolicyResponse = UpdateDomainConsoleAclPolicyResponse;


/***/ }),

/***/ 51935:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainGroupInheritRoleRequest = void 0;
var UpdateDomainGroupInheritRoleRequest = /** @class */ (function () {
    function UpdateDomainGroupInheritRoleRequest(domainId, groupId, roleId) {
        this['domain_id'] = domainId;
        this['group_id'] = groupId;
        this['role_id'] = roleId;
    }
    UpdateDomainGroupInheritRoleRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(UpdateDomainGroupInheritRoleRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateDomainGroupInheritRoleRequest.prototype.withGroupId = function (groupId) {
        this['group_id'] = groupId;
        return this;
    };
    Object.defineProperty(UpdateDomainGroupInheritRoleRequest.prototype, "groupId", {
        get: function () {
            return this['group_id'];
        },
        set: function (groupId) {
            this['group_id'] = groupId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateDomainGroupInheritRoleRequest.prototype.withRoleId = function (roleId) {
        this['role_id'] = roleId;
        return this;
    };
    Object.defineProperty(UpdateDomainGroupInheritRoleRequest.prototype, "roleId", {
        get: function () {
            return this['role_id'];
        },
        set: function (roleId) {
            this['role_id'] = roleId;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainGroupInheritRoleRequest;
}());
exports.UpdateDomainGroupInheritRoleRequest = UpdateDomainGroupInheritRoleRequest;


/***/ }),

/***/ 44644:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainGroupInheritRoleResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateDomainGroupInheritRoleResponse = /** @class */ (function (_super) {
    __extends(UpdateDomainGroupInheritRoleResponse, _super);
    function UpdateDomainGroupInheritRoleResponse() {
        return _super.call(this) || this;
    }
    return UpdateDomainGroupInheritRoleResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateDomainGroupInheritRoleResponse = UpdateDomainGroupInheritRoleResponse;


/***/ }),

/***/ 83578:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainLoginPolicyRequest = void 0;
var UpdateDomainLoginPolicyRequest = /** @class */ (function () {
    function UpdateDomainLoginPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    UpdateDomainLoginPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(UpdateDomainLoginPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateDomainLoginPolicyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateDomainLoginPolicyRequest;
}());
exports.UpdateDomainLoginPolicyRequest = UpdateDomainLoginPolicyRequest;


/***/ }),

/***/ 58691:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainLoginPolicyRequestBody = void 0;
var UpdateDomainLoginPolicyRequestBody = /** @class */ (function () {
    function UpdateDomainLoginPolicyRequestBody(loginPolicy) {
        this['login_policy'] = loginPolicy;
    }
    UpdateDomainLoginPolicyRequestBody.prototype.withLoginPolicy = function (loginPolicy) {
        this['login_policy'] = loginPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainLoginPolicyRequestBody.prototype, "loginPolicy", {
        get: function () {
            return this['login_policy'];
        },
        set: function (loginPolicy) {
            this['login_policy'] = loginPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainLoginPolicyRequestBody;
}());
exports.UpdateDomainLoginPolicyRequestBody = UpdateDomainLoginPolicyRequestBody;


/***/ }),

/***/ 30207:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainLoginPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateDomainLoginPolicyResponse = /** @class */ (function (_super) {
    __extends(UpdateDomainLoginPolicyResponse, _super);
    function UpdateDomainLoginPolicyResponse() {
        return _super.call(this) || this;
    }
    UpdateDomainLoginPolicyResponse.prototype.withLoginPolicy = function (loginPolicy) {
        this['login_policy'] = loginPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainLoginPolicyResponse.prototype, "loginPolicy", {
        get: function () {
            return this['login_policy'];
        },
        set: function (loginPolicy) {
            this['login_policy'] = loginPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainLoginPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateDomainLoginPolicyResponse = UpdateDomainLoginPolicyResponse;


/***/ }),

/***/ 8451:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainPasswordPolicyRequest = void 0;
var UpdateDomainPasswordPolicyRequest = /** @class */ (function () {
    function UpdateDomainPasswordPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    UpdateDomainPasswordPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(UpdateDomainPasswordPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateDomainPasswordPolicyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateDomainPasswordPolicyRequest;
}());
exports.UpdateDomainPasswordPolicyRequest = UpdateDomainPasswordPolicyRequest;


/***/ }),

/***/ 78927:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainPasswordPolicyRequestBody = void 0;
var UpdateDomainPasswordPolicyRequestBody = /** @class */ (function () {
    function UpdateDomainPasswordPolicyRequestBody(passwordPolicy) {
        this['password_policy'] = passwordPolicy;
    }
    UpdateDomainPasswordPolicyRequestBody.prototype.withPasswordPolicy = function (passwordPolicy) {
        this['password_policy'] = passwordPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainPasswordPolicyRequestBody.prototype, "passwordPolicy", {
        get: function () {
            return this['password_policy'];
        },
        set: function (passwordPolicy) {
            this['password_policy'] = passwordPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainPasswordPolicyRequestBody;
}());
exports.UpdateDomainPasswordPolicyRequestBody = UpdateDomainPasswordPolicyRequestBody;


/***/ }),

/***/ 55329:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainPasswordPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateDomainPasswordPolicyResponse = /** @class */ (function (_super) {
    __extends(UpdateDomainPasswordPolicyResponse, _super);
    function UpdateDomainPasswordPolicyResponse() {
        return _super.call(this) || this;
    }
    UpdateDomainPasswordPolicyResponse.prototype.withPasswordPolicy = function (passwordPolicy) {
        this['password_policy'] = passwordPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainPasswordPolicyResponse.prototype, "passwordPolicy", {
        get: function () {
            return this['password_policy'];
        },
        set: function (passwordPolicy) {
            this['password_policy'] = passwordPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainPasswordPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateDomainPasswordPolicyResponse = UpdateDomainPasswordPolicyResponse;


/***/ }),

/***/ 93473:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainProtectPolicyRequest = void 0;
var UpdateDomainProtectPolicyRequest = /** @class */ (function () {
    function UpdateDomainProtectPolicyRequest(domainId) {
        this['domain_id'] = domainId;
    }
    UpdateDomainProtectPolicyRequest.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(UpdateDomainProtectPolicyRequest.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateDomainProtectPolicyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateDomainProtectPolicyRequest;
}());
exports.UpdateDomainProtectPolicyRequest = UpdateDomainProtectPolicyRequest;


/***/ }),

/***/ 98881:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainProtectPolicyRequestBody = void 0;
var UpdateDomainProtectPolicyRequestBody = /** @class */ (function () {
    function UpdateDomainProtectPolicyRequestBody(protectPolicy) {
        this['protect_policy'] = protectPolicy;
    }
    UpdateDomainProtectPolicyRequestBody.prototype.withProtectPolicy = function (protectPolicy) {
        this['protect_policy'] = protectPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainProtectPolicyRequestBody.prototype, "protectPolicy", {
        get: function () {
            return this['protect_policy'];
        },
        set: function (protectPolicy) {
            this['protect_policy'] = protectPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainProtectPolicyRequestBody;
}());
exports.UpdateDomainProtectPolicyRequestBody = UpdateDomainProtectPolicyRequestBody;


/***/ }),

/***/ 4017:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateDomainProtectPolicyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateDomainProtectPolicyResponse = /** @class */ (function (_super) {
    __extends(UpdateDomainProtectPolicyResponse, _super);
    function UpdateDomainProtectPolicyResponse() {
        return _super.call(this) || this;
    }
    UpdateDomainProtectPolicyResponse.prototype.withProtectPolicy = function (protectPolicy) {
        this['protect_policy'] = protectPolicy;
        return this;
    };
    Object.defineProperty(UpdateDomainProtectPolicyResponse.prototype, "protectPolicy", {
        get: function () {
            return this['protect_policy'];
        },
        set: function (protectPolicy) {
            this['protect_policy'] = protectPolicy;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDomainProtectPolicyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateDomainProtectPolicyResponse = UpdateDomainProtectPolicyResponse;


/***/ }),

/***/ 48529:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateIdentityproviderOption = void 0;
var UpdateIdentityproviderOption = /** @class */ (function () {
    function UpdateIdentityproviderOption() {
    }
    UpdateIdentityproviderOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    UpdateIdentityproviderOption.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    return UpdateIdentityproviderOption;
}());
exports.UpdateIdentityproviderOption = UpdateIdentityproviderOption;


/***/ }),

/***/ 46529:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateLoginProject = void 0;
var UpdateLoginProject = /** @class */ (function () {
    function UpdateLoginProject(enabled, verificationMethod) {
        this['enabled'] = enabled;
        this['verification_method'] = verificationMethod;
    }
    UpdateLoginProject.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    UpdateLoginProject.prototype.withVerificationMethod = function (verificationMethod) {
        this['verification_method'] = verificationMethod;
        return this;
    };
    Object.defineProperty(UpdateLoginProject.prototype, "verificationMethod", {
        get: function () {
            return this['verification_method'];
        },
        set: function (verificationMethod) {
            this['verification_method'] = verificationMethod;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateLoginProject;
}());
exports.UpdateLoginProject = UpdateLoginProject;


/***/ }),

/***/ 72726:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateLoginProjectReq = void 0;
var UpdateLoginProjectReq = /** @class */ (function () {
    function UpdateLoginProjectReq(loginProtect) {
        this['login_protect'] = loginProtect;
    }
    UpdateLoginProjectReq.prototype.withLoginProtect = function (loginProtect) {
        this['login_protect'] = loginProtect;
        return this;
    };
    Object.defineProperty(UpdateLoginProjectReq.prototype, "loginProtect", {
        get: function () {
            return this['login_protect'];
        },
        set: function (loginProtect) {
            this['login_protect'] = loginProtect;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateLoginProjectReq;
}());
exports.UpdateLoginProjectReq = UpdateLoginProjectReq;


/***/ }),

/***/ 94078:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateLoginProtectRequest = void 0;
var UpdateLoginProtectRequest = /** @class */ (function () {
    function UpdateLoginProtectRequest(userId) {
        this['user_id'] = userId;
    }
    UpdateLoginProtectRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(UpdateLoginProtectRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateLoginProtectRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateLoginProtectRequest;
}());
exports.UpdateLoginProtectRequest = UpdateLoginProtectRequest;


/***/ }),

/***/ 45729:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateLoginProtectRespon = void 0;
var UpdateLoginProtectRespon = /** @class */ (function () {
    function UpdateLoginProtectRespon(userId, enabled, verificationMethod) {
        this['user_id'] = userId;
        this['enabled'] = enabled;
        this['verification_method'] = verificationMethod;
    }
    UpdateLoginProtectRespon.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(UpdateLoginProtectRespon.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateLoginProtectRespon.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    UpdateLoginProtectRespon.prototype.withVerificationMethod = function (verificationMethod) {
        this['verification_method'] = verificationMethod;
        return this;
    };
    Object.defineProperty(UpdateLoginProtectRespon.prototype, "verificationMethod", {
        get: function () {
            return this['verification_method'];
        },
        set: function (verificationMethod) {
            this['verification_method'] = verificationMethod;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateLoginProtectRespon;
}());
exports.UpdateLoginProtectRespon = UpdateLoginProtectRespon;


/***/ }),

/***/ 24907:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateLoginProtectResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateLoginProtectResponse = /** @class */ (function (_super) {
    __extends(UpdateLoginProtectResponse, _super);
    function UpdateLoginProtectResponse() {
        return _super.call(this) || this;
    }
    UpdateLoginProtectResponse.prototype.withLoginProtect = function (loginProtect) {
        this['login_protect'] = loginProtect;
        return this;
    };
    Object.defineProperty(UpdateLoginProtectResponse.prototype, "loginProtect", {
        get: function () {
            return this['login_protect'];
        },
        set: function (loginProtect) {
            this['login_protect'] = loginProtect;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateLoginProtectResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateLoginProtectResponse = UpdateLoginProtectResponse;


/***/ }),

/***/ 22253:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateOpenIdConnectConfigResponseModeEnum = exports.UpdateOpenIdConnectConfigResponseTypeEnum = exports.UpdateOpenIdConnectConfig = void 0;
var UpdateOpenIdConnectConfig = /** @class */ (function () {
    function UpdateOpenIdConnectConfig() {
    }
    UpdateOpenIdConnectConfig.prototype.withAccessMode = function (accessMode) {
        this['access_mode'] = accessMode;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfig.prototype, "accessMode", {
        get: function () {
            return this['access_mode'];
        },
        set: function (accessMode) {
            this['access_mode'] = accessMode;
        },
        enumerable: false,
        configurable: true
    });
    UpdateOpenIdConnectConfig.prototype.withIdpUrl = function (idpUrl) {
        this['idp_url'] = idpUrl;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfig.prototype, "idpUrl", {
        get: function () {
            return this['idp_url'];
        },
        set: function (idpUrl) {
            this['idp_url'] = idpUrl;
        },
        enumerable: false,
        configurable: true
    });
    UpdateOpenIdConnectConfig.prototype.withClientId = function (clientId) {
        this['client_id'] = clientId;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfig.prototype, "clientId", {
        get: function () {
            return this['client_id'];
        },
        set: function (clientId) {
            this['client_id'] = clientId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateOpenIdConnectConfig.prototype.withAuthorizationEndpoint = function (authorizationEndpoint) {
        this['authorization_endpoint'] = authorizationEndpoint;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfig.prototype, "authorizationEndpoint", {
        get: function () {
            return this['authorization_endpoint'];
        },
        set: function (authorizationEndpoint) {
            this['authorization_endpoint'] = authorizationEndpoint;
        },
        enumerable: false,
        configurable: true
    });
    UpdateOpenIdConnectConfig.prototype.withScope = function (scope) {
        this['scope'] = scope;
        return this;
    };
    UpdateOpenIdConnectConfig.prototype.withResponseType = function (responseType) {
        this['response_type'] = responseType;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfig.prototype, "responseType", {
        get: function () {
            return this['response_type'];
        },
        set: function (responseType) {
            this['response_type'] = responseType;
        },
        enumerable: false,
        configurable: true
    });
    UpdateOpenIdConnectConfig.prototype.withResponseMode = function (responseMode) {
        this['response_mode'] = responseMode;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfig.prototype, "responseMode", {
        get: function () {
            return this['response_mode'];
        },
        set: function (responseMode) {
            this['response_mode'] = responseMode;
        },
        enumerable: false,
        configurable: true
    });
    UpdateOpenIdConnectConfig.prototype.withSigningKey = function (signingKey) {
        this['signing_key'] = signingKey;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfig.prototype, "signingKey", {
        get: function () {
            return this['signing_key'];
        },
        set: function (signingKey) {
            this['signing_key'] = signingKey;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateOpenIdConnectConfig;
}());
exports.UpdateOpenIdConnectConfig = UpdateOpenIdConnectConfig;
/**
    * @export
    * @enum {string}
    */
var UpdateOpenIdConnectConfigResponseTypeEnum;
(function (UpdateOpenIdConnectConfigResponseTypeEnum) {
    UpdateOpenIdConnectConfigResponseTypeEnum["ID_TOKEN"] = "id_token";
})(UpdateOpenIdConnectConfigResponseTypeEnum = exports.UpdateOpenIdConnectConfigResponseTypeEnum || (exports.UpdateOpenIdConnectConfigResponseTypeEnum = {}));
/**
    * @export
    * @enum {string}
    */
var UpdateOpenIdConnectConfigResponseModeEnum;
(function (UpdateOpenIdConnectConfigResponseModeEnum) {
    UpdateOpenIdConnectConfigResponseModeEnum["FRAGMENT"] = "fragment";
    UpdateOpenIdConnectConfigResponseModeEnum["FORM_POST"] = "form_post";
})(UpdateOpenIdConnectConfigResponseModeEnum = exports.UpdateOpenIdConnectConfigResponseModeEnum || (exports.UpdateOpenIdConnectConfigResponseModeEnum = {}));


/***/ }),

/***/ 83359:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateOpenIdConnectConfigRequest = void 0;
var UpdateOpenIdConnectConfigRequest = /** @class */ (function () {
    function UpdateOpenIdConnectConfigRequest(idpId) {
        this['idp_id'] = idpId;
    }
    UpdateOpenIdConnectConfigRequest.prototype.withIdpId = function (idpId) {
        this['idp_id'] = idpId;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfigRequest.prototype, "idpId", {
        get: function () {
            return this['idp_id'];
        },
        set: function (idpId) {
            this['idp_id'] = idpId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateOpenIdConnectConfigRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateOpenIdConnectConfigRequest;
}());
exports.UpdateOpenIdConnectConfigRequest = UpdateOpenIdConnectConfigRequest;


/***/ }),

/***/ 77522:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateOpenIdConnectConfigRequestBody = void 0;
var UpdateOpenIdConnectConfigRequestBody = /** @class */ (function () {
    function UpdateOpenIdConnectConfigRequestBody(openidConnectConfig) {
        this['openid_connect_config'] = openidConnectConfig;
    }
    UpdateOpenIdConnectConfigRequestBody.prototype.withOpenidConnectConfig = function (openidConnectConfig) {
        this['openid_connect_config'] = openidConnectConfig;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfigRequestBody.prototype, "openidConnectConfig", {
        get: function () {
            return this['openid_connect_config'];
        },
        set: function (openidConnectConfig) {
            this['openid_connect_config'] = openidConnectConfig;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateOpenIdConnectConfigRequestBody;
}());
exports.UpdateOpenIdConnectConfigRequestBody = UpdateOpenIdConnectConfigRequestBody;


/***/ }),

/***/ 21370:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateOpenIdConnectConfigResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateOpenIdConnectConfigResponse = /** @class */ (function (_super) {
    __extends(UpdateOpenIdConnectConfigResponse, _super);
    function UpdateOpenIdConnectConfigResponse() {
        return _super.call(this) || this;
    }
    UpdateOpenIdConnectConfigResponse.prototype.withOpenidConnectConfig = function (openidConnectConfig) {
        this['openid_connect_config'] = openidConnectConfig;
        return this;
    };
    Object.defineProperty(UpdateOpenIdConnectConfigResponse.prototype, "openidConnectConfig", {
        get: function () {
            return this['openid_connect_config'];
        },
        set: function (openidConnectConfig) {
            this['openid_connect_config'] = openidConnectConfig;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateOpenIdConnectConfigResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateOpenIdConnectConfigResponse = UpdateOpenIdConnectConfigResponse;


/***/ }),

/***/ 16538:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdatePermanentAccessKeyRequest = void 0;
var UpdatePermanentAccessKeyRequest = /** @class */ (function () {
    function UpdatePermanentAccessKeyRequest(accessKey) {
        this['access_key'] = accessKey;
    }
    UpdatePermanentAccessKeyRequest.prototype.withAccessKey = function (accessKey) {
        this['access_key'] = accessKey;
        return this;
    };
    Object.defineProperty(UpdatePermanentAccessKeyRequest.prototype, "accessKey", {
        get: function () {
            return this['access_key'];
        },
        set: function (accessKey) {
            this['access_key'] = accessKey;
        },
        enumerable: false,
        configurable: true
    });
    UpdatePermanentAccessKeyRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdatePermanentAccessKeyRequest;
}());
exports.UpdatePermanentAccessKeyRequest = UpdatePermanentAccessKeyRequest;


/***/ }),

/***/ 61263:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdatePermanentAccessKeyRequestBody = void 0;
var UpdatePermanentAccessKeyRequestBody = /** @class */ (function () {
    function UpdatePermanentAccessKeyRequestBody(credential) {
        this['credential'] = credential;
    }
    UpdatePermanentAccessKeyRequestBody.prototype.withCredential = function (credential) {
        this['credential'] = credential;
        return this;
    };
    return UpdatePermanentAccessKeyRequestBody;
}());
exports.UpdatePermanentAccessKeyRequestBody = UpdatePermanentAccessKeyRequestBody;


/***/ }),

/***/ 1503:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdatePermanentAccessKeyResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdatePermanentAccessKeyResponse = /** @class */ (function (_super) {
    __extends(UpdatePermanentAccessKeyResponse, _super);
    function UpdatePermanentAccessKeyResponse() {
        return _super.call(this) || this;
    }
    UpdatePermanentAccessKeyResponse.prototype.withCredential = function (credential) {
        this['credential'] = credential;
        return this;
    };
    return UpdatePermanentAccessKeyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdatePermanentAccessKeyResponse = UpdatePermanentAccessKeyResponse;


/***/ }),

/***/ 87224:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateProjectOptionStatusEnum = exports.UpdateProjectOption = void 0;
var UpdateProjectOption = /** @class */ (function () {
    function UpdateProjectOption(status) {
        this['status'] = status;
    }
    UpdateProjectOption.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    return UpdateProjectOption;
}());
exports.UpdateProjectOption = UpdateProjectOption;
/**
    * @export
    * @enum {string}
    */
var UpdateProjectOptionStatusEnum;
(function (UpdateProjectOptionStatusEnum) {
    UpdateProjectOptionStatusEnum["SUSPENDED"] = "suspended";
    UpdateProjectOptionStatusEnum["NORMAL"] = "normal";
})(UpdateProjectOptionStatusEnum = exports.UpdateProjectOptionStatusEnum || (exports.UpdateProjectOptionStatusEnum = {}));


/***/ }),

/***/ 87179:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateProjectStatusRequest = void 0;
var UpdateProjectStatusRequest = /** @class */ (function () {
    function UpdateProjectStatusRequest() {
    }
    UpdateProjectStatusRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateProjectStatusRequest;
}());
exports.UpdateProjectStatusRequest = UpdateProjectStatusRequest;


/***/ }),

/***/ 5369:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateProjectStatusRequestBody = void 0;
var UpdateProjectStatusRequestBody = /** @class */ (function () {
    function UpdateProjectStatusRequestBody(project) {
        this['project'] = project;
    }
    UpdateProjectStatusRequestBody.prototype.withProject = function (project) {
        this['project'] = project;
        return this;
    };
    return UpdateProjectStatusRequestBody;
}());
exports.UpdateProjectStatusRequestBody = UpdateProjectStatusRequestBody;


/***/ }),

/***/ 19269:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateProjectStatusResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateProjectStatusResponse = /** @class */ (function (_super) {
    __extends(UpdateProjectStatusResponse, _super);
    function UpdateProjectStatusResponse() {
        return _super.call(this) || this;
    }
    return UpdateProjectStatusResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateProjectStatusResponse = UpdateProjectStatusResponse;


/***/ }),

/***/ 68317:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateUserInformationOption = void 0;
var UpdateUserInformationOption = /** @class */ (function () {
    function UpdateUserInformationOption() {
    }
    UpdateUserInformationOption.prototype.withEmail = function (email) {
        this['email'] = email;
        return this;
    };
    UpdateUserInformationOption.prototype.withMobile = function (mobile) {
        this['mobile'] = mobile;
        return this;
    };
    return UpdateUserInformationOption;
}());
exports.UpdateUserInformationOption = UpdateUserInformationOption;


/***/ }),

/***/ 6402:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateUserInformationRequest = void 0;
var UpdateUserInformationRequest = /** @class */ (function () {
    function UpdateUserInformationRequest(userId) {
        this['user_id'] = userId;
    }
    UpdateUserInformationRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(UpdateUserInformationRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserInformationRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateUserInformationRequest;
}());
exports.UpdateUserInformationRequest = UpdateUserInformationRequest;


/***/ }),

/***/ 73030:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateUserInformationRequestBody = void 0;
var UpdateUserInformationRequestBody = /** @class */ (function () {
    function UpdateUserInformationRequestBody(user) {
        this['user'] = user;
    }
    UpdateUserInformationRequestBody.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return UpdateUserInformationRequestBody;
}());
exports.UpdateUserInformationRequestBody = UpdateUserInformationRequestBody;


/***/ }),

/***/ 97580:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateUserInformationResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateUserInformationResponse = /** @class */ (function (_super) {
    __extends(UpdateUserInformationResponse, _super);
    function UpdateUserInformationResponse() {
        return _super.call(this) || this;
    }
    return UpdateUserInformationResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateUserInformationResponse = UpdateUserInformationResponse;


/***/ }),

/***/ 4271:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateUserOption = void 0;
var UpdateUserOption = /** @class */ (function () {
    function UpdateUserOption() {
    }
    UpdateUserOption.prototype.withAccessMode = function (accessMode) {
        this['access_mode'] = accessMode;
        return this;
    };
    Object.defineProperty(UpdateUserOption.prototype, "accessMode", {
        get: function () {
            return this['access_mode'];
        },
        set: function (accessMode) {
            this['access_mode'] = accessMode;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserOption.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    UpdateUserOption.prototype.withPassword = function (password) {
        this['password'] = password;
        return this;
    };
    UpdateUserOption.prototype.withEmail = function (email) {
        this['email'] = email;
        return this;
    };
    UpdateUserOption.prototype.withAreacode = function (areacode) {
        this['areacode'] = areacode;
        return this;
    };
    UpdateUserOption.prototype.withPhone = function (phone) {
        this['phone'] = phone;
        return this;
    };
    UpdateUserOption.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    UpdateUserOption.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(UpdateUserOption.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserOption.prototype.withXuserType = function (xuserType) {
        this['xuser_type'] = xuserType;
        return this;
    };
    Object.defineProperty(UpdateUserOption.prototype, "xuserType", {
        get: function () {
            return this['xuser_type'];
        },
        set: function (xuserType) {
            this['xuser_type'] = xuserType;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserOption.prototype.withXuserId = function (xuserId) {
        this['xuser_id'] = xuserId;
        return this;
    };
    Object.defineProperty(UpdateUserOption.prototype, "xuserId", {
        get: function () {
            return this['xuser_id'];
        },
        set: function (xuserId) {
            this['xuser_id'] = xuserId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserOption.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return UpdateUserOption;
}());
exports.UpdateUserOption = UpdateUserOption;


/***/ }),

/***/ 79922:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateUserRequest = void 0;
var UpdateUserRequest = /** @class */ (function () {
    function UpdateUserRequest(userId) {
        this['user_id'] = userId;
    }
    UpdateUserRequest.prototype.withUserId = function (userId) {
        this['user_id'] = userId;
        return this;
    };
    Object.defineProperty(UpdateUserRequest.prototype, "userId", {
        get: function () {
            return this['user_id'];
        },
        set: function (userId) {
            this['user_id'] = userId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserRequest.prototype.withBody = function (body) {
        this['body'] = body;
        return this;
    };
    return UpdateUserRequest;
}());
exports.UpdateUserRequest = UpdateUserRequest;


/***/ }),

/***/ 87229:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateUserRequestBody = void 0;
var UpdateUserRequestBody = /** @class */ (function () {
    function UpdateUserRequestBody(user) {
        this['user'] = user;
    }
    UpdateUserRequestBody.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return UpdateUserRequestBody;
}());
exports.UpdateUserRequestBody = UpdateUserRequestBody;


/***/ }),

/***/ 55683:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateUserResponse = void 0;
var SdkResponse_1 = __nccwpck_require__(69083);
var UpdateUserResponse = /** @class */ (function (_super) {
    __extends(UpdateUserResponse, _super);
    function UpdateUserResponse() {
        return _super.call(this) || this;
    }
    UpdateUserResponse.prototype.withUser = function (user) {
        this['user'] = user;
        return this;
    };
    return UpdateUserResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateUserResponse = UpdateUserResponse;


/***/ }),

/***/ 32435:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateUserResult = void 0;
var UpdateUserResult = /** @class */ (function () {
    function UpdateUserResult(name, domainId, enabled, id, links) {
        this['name'] = name;
        this['domain_id'] = domainId;
        this['enabled'] = enabled;
        this['id'] = id;
        this['links'] = links;
    }
    UpdateUserResult.prototype.withAccessMode = function (accessMode) {
        this['access_mode'] = accessMode;
        return this;
    };
    Object.defineProperty(UpdateUserResult.prototype, "accessMode", {
        get: function () {
            return this['access_mode'];
        },
        set: function (accessMode) {
            this['access_mode'] = accessMode;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserResult.prototype.withPwdStatus = function (pwdStatus) {
        this['pwd_status'] = pwdStatus;
        return this;
    };
    Object.defineProperty(UpdateUserResult.prototype, "pwdStatus", {
        get: function () {
            return this['pwd_status'];
        },
        set: function (pwdStatus) {
            this['pwd_status'] = pwdStatus;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserResult.prototype.withXuserId = function (xuserId) {
        this['xuser_id'] = xuserId;
        return this;
    };
    Object.defineProperty(UpdateUserResult.prototype, "xuserId", {
        get: function () {
            return this['xuser_id'];
        },
        set: function (xuserId) {
            this['xuser_id'] = xuserId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserResult.prototype.withXuserType = function (xuserType) {
        this['xuser_type'] = xuserType;
        return this;
    };
    Object.defineProperty(UpdateUserResult.prototype, "xuserType", {
        get: function () {
            return this['xuser_type'];
        },
        set: function (xuserType) {
            this['xuser_type'] = xuserType;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    UpdateUserResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    UpdateUserResult.prototype.withPhone = function (phone) {
        this['phone'] = phone;
        return this;
    };
    UpdateUserResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(UpdateUserResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    UpdateUserResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    UpdateUserResult.prototype.withAreacode = function (areacode) {
        this['areacode'] = areacode;
        return this;
    };
    UpdateUserResult.prototype.withEmail = function (email) {
        this['email'] = email;
        return this;
    };
    UpdateUserResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    UpdateUserResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    UpdateUserResult.prototype.withPasswordExpiresAt = function (passwordExpiresAt) {
        this['password_expires_at'] = passwordExpiresAt;
        return this;
    };
    Object.defineProperty(UpdateUserResult.prototype, "passwordExpiresAt", {
        get: function () {
            return this['password_expires_at'];
        },
        set: function (passwordExpiresAt) {
            this['password_expires_at'] = passwordExpiresAt;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateUserResult;
}());
exports.UpdateUserResult = UpdateUserResult;


/***/ }),

/***/ 16639:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Version = void 0;
var Version = /** @class */ (function () {
    function Version(status, updated, links, id, mediaTypes) {
        this['status'] = status;
        this['updated'] = updated;
        this['links'] = links;
        this['id'] = id;
        this['media-types'] = mediaTypes;
    }
    Version.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    Version.prototype.withUpdated = function (updated) {
        this['updated'] = updated;
        return this;
    };
    Version.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    Version.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    Version.prototype.withMediaTypes = function (mediaTypes) {
        this['media-types'] = mediaTypes;
        return this;
    };
    Object.defineProperty(Version.prototype, "mediaTypes", {
        get: function () {
            return this['media-types'];
        },
        set: function (mediaTypes) {
            this['media-types'] = mediaTypes;
        },
        enumerable: false,
        configurable: true
    });
    return Version;
}());
exports.Version = Version;


/***/ }),

/***/ 22561:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VersionLinks = void 0;
var VersionLinks = /** @class */ (function () {
    function VersionLinks(rel, href) {
        this['rel'] = rel;
        this['href'] = href;
    }
    VersionLinks.prototype.withRel = function (rel) {
        this['rel'] = rel;
        return this;
    };
    VersionLinks.prototype.withHref = function (href) {
        this['href'] = href;
        return this;
    };
    return VersionLinks;
}());
exports.VersionLinks = VersionLinks;


/***/ }),

/***/ 46178:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VersionMediatypes = void 0;
var VersionMediatypes = /** @class */ (function () {
    function VersionMediatypes(type, base) {
        this['type'] = type;
        this['base'] = base;
    }
    VersionMediatypes.prototype.withType = function (type) {
        this['type'] = type;
        return this;
    };
    VersionMediatypes.prototype.withBase = function (base) {
        this['base'] = base;
        return this;
    };
    return VersionMediatypes;
}());
exports.VersionMediatypes = VersionMediatypes;


/***/ }),

/***/ 53825:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Versions = void 0;
var Versions = /** @class */ (function () {
    function Versions(values) {
        this['values'] = values;
    }
    Versions.prototype.withValues = function (values) {
        this['values'] = values;
        return this;
    };
    return Versions;
}());
exports.Versions = Versions;


/***/ }),

/***/ 81892:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__nccwpck_require__(73674), exports);
__exportStar(__nccwpck_require__(15070), exports);
__exportStar(__nccwpck_require__(30402), exports);
__exportStar(__nccwpck_require__(27291), exports);
__exportStar(__nccwpck_require__(18678), exports);
__exportStar(__nccwpck_require__(92738), exports);
__exportStar(__nccwpck_require__(20784), exports);
__exportStar(__nccwpck_require__(50324), exports);
__exportStar(__nccwpck_require__(34558), exports);
__exportStar(__nccwpck_require__(44381), exports);
__exportStar(__nccwpck_require__(963), exports);
__exportStar(__nccwpck_require__(86332), exports);
__exportStar(__nccwpck_require__(10175), exports);
__exportStar(__nccwpck_require__(26239), exports);
__exportStar(__nccwpck_require__(38877), exports);
__exportStar(__nccwpck_require__(23434), exports);
__exportStar(__nccwpck_require__(99156), exports);
__exportStar(__nccwpck_require__(63327), exports);
__exportStar(__nccwpck_require__(33361), exports);
__exportStar(__nccwpck_require__(17714), exports);
__exportStar(__nccwpck_require__(76282), exports);
__exportStar(__nccwpck_require__(34550), exports);
__exportStar(__nccwpck_require__(69004), exports);
__exportStar(__nccwpck_require__(26201), exports);
__exportStar(__nccwpck_require__(9186), exports);
__exportStar(__nccwpck_require__(12726), exports);
__exportStar(__nccwpck_require__(61449), exports);
__exportStar(__nccwpck_require__(31948), exports);
__exportStar(__nccwpck_require__(87374), exports);
__exportStar(__nccwpck_require__(20895), exports);
__exportStar(__nccwpck_require__(67398), exports);
__exportStar(__nccwpck_require__(18657), exports);
__exportStar(__nccwpck_require__(58089), exports);
__exportStar(__nccwpck_require__(70970), exports);
__exportStar(__nccwpck_require__(43339), exports);
__exportStar(__nccwpck_require__(48129), exports);
__exportStar(__nccwpck_require__(6858), exports);
__exportStar(__nccwpck_require__(88169), exports);
__exportStar(__nccwpck_require__(5722), exports);
__exportStar(__nccwpck_require__(86383), exports);
__exportStar(__nccwpck_require__(75711), exports);
__exportStar(__nccwpck_require__(31560), exports);
__exportStar(__nccwpck_require__(58371), exports);
__exportStar(__nccwpck_require__(78592), exports);
__exportStar(__nccwpck_require__(41106), exports);
__exportStar(__nccwpck_require__(20707), exports);
__exportStar(__nccwpck_require__(28307), exports);
__exportStar(__nccwpck_require__(84856), exports);
__exportStar(__nccwpck_require__(84022), exports);
__exportStar(__nccwpck_require__(12508), exports);
__exportStar(__nccwpck_require__(56442), exports);
__exportStar(__nccwpck_require__(6150), exports);
__exportStar(__nccwpck_require__(68201), exports);
__exportStar(__nccwpck_require__(24791), exports);
__exportStar(__nccwpck_require__(54022), exports);
__exportStar(__nccwpck_require__(43986), exports);
__exportStar(__nccwpck_require__(80894), exports);
__exportStar(__nccwpck_require__(14474), exports);
__exportStar(__nccwpck_require__(12803), exports);
__exportStar(__nccwpck_require__(92551), exports);
__exportStar(__nccwpck_require__(42060), exports);
__exportStar(__nccwpck_require__(7030), exports);
__exportStar(__nccwpck_require__(2604), exports);
__exportStar(__nccwpck_require__(18956), exports);
__exportStar(__nccwpck_require__(96546), exports);
__exportStar(__nccwpck_require__(96654), exports);
__exportStar(__nccwpck_require__(97755), exports);
__exportStar(__nccwpck_require__(92405), exports);
__exportStar(__nccwpck_require__(56040), exports);
__exportStar(__nccwpck_require__(51496), exports);
__exportStar(__nccwpck_require__(96345), exports);
__exportStar(__nccwpck_require__(86181), exports);
__exportStar(__nccwpck_require__(28554), exports);
__exportStar(__nccwpck_require__(61873), exports);
__exportStar(__nccwpck_require__(49521), exports);
__exportStar(__nccwpck_require__(97207), exports);
__exportStar(__nccwpck_require__(91095), exports);
__exportStar(__nccwpck_require__(5918), exports);
__exportStar(__nccwpck_require__(10749), exports);
__exportStar(__nccwpck_require__(55554), exports);
__exportStar(__nccwpck_require__(75153), exports);
__exportStar(__nccwpck_require__(97259), exports);
__exportStar(__nccwpck_require__(65141), exports);
__exportStar(__nccwpck_require__(52774), exports);
__exportStar(__nccwpck_require__(176), exports);
__exportStar(__nccwpck_require__(4737), exports);
__exportStar(__nccwpck_require__(40275), exports);
__exportStar(__nccwpck_require__(2592), exports);
__exportStar(__nccwpck_require__(57562), exports);
__exportStar(__nccwpck_require__(37533), exports);
__exportStar(__nccwpck_require__(13804), exports);
__exportStar(__nccwpck_require__(69683), exports);
__exportStar(__nccwpck_require__(53831), exports);
__exportStar(__nccwpck_require__(62101), exports);
__exportStar(__nccwpck_require__(95286), exports);
__exportStar(__nccwpck_require__(58293), exports);
__exportStar(__nccwpck_require__(92631), exports);
__exportStar(__nccwpck_require__(15413), exports);
__exportStar(__nccwpck_require__(35110), exports);
__exportStar(__nccwpck_require__(56388), exports);
__exportStar(__nccwpck_require__(13826), exports);
__exportStar(__nccwpck_require__(60774), exports);
__exportStar(__nccwpck_require__(37818), exports);
__exportStar(__nccwpck_require__(85261), exports);
__exportStar(__nccwpck_require__(4819), exports);
__exportStar(__nccwpck_require__(45746), exports);
__exportStar(__nccwpck_require__(73989), exports);
__exportStar(__nccwpck_require__(79109), exports);
__exportStar(__nccwpck_require__(59928), exports);
__exportStar(__nccwpck_require__(51109), exports);
__exportStar(__nccwpck_require__(51487), exports);
__exportStar(__nccwpck_require__(44631), exports);
__exportStar(__nccwpck_require__(92910), exports);
__exportStar(__nccwpck_require__(69437), exports);
__exportStar(__nccwpck_require__(28204), exports);
__exportStar(__nccwpck_require__(40825), exports);
__exportStar(__nccwpck_require__(96396), exports);
__exportStar(__nccwpck_require__(27338), exports);
__exportStar(__nccwpck_require__(76674), exports);
__exportStar(__nccwpck_require__(16918), exports);
__exportStar(__nccwpck_require__(40356), exports);
__exportStar(__nccwpck_require__(74822), exports);
__exportStar(__nccwpck_require__(68209), exports);
__exportStar(__nccwpck_require__(21975), exports);
__exportStar(__nccwpck_require__(59673), exports);
__exportStar(__nccwpck_require__(33586), exports);
__exportStar(__nccwpck_require__(10643), exports);
__exportStar(__nccwpck_require__(63946), exports);
__exportStar(__nccwpck_require__(6971), exports);
__exportStar(__nccwpck_require__(38580), exports);
__exportStar(__nccwpck_require__(62938), exports);
__exportStar(__nccwpck_require__(95262), exports);
__exportStar(__nccwpck_require__(4745), exports);
__exportStar(__nccwpck_require__(79051), exports);
__exportStar(__nccwpck_require__(24713), exports);
__exportStar(__nccwpck_require__(5998), exports);
__exportStar(__nccwpck_require__(78292), exports);
__exportStar(__nccwpck_require__(46603), exports);
__exportStar(__nccwpck_require__(62708), exports);
__exportStar(__nccwpck_require__(34270), exports);
__exportStar(__nccwpck_require__(22360), exports);
__exportStar(__nccwpck_require__(4861), exports);
__exportStar(__nccwpck_require__(81650), exports);
__exportStar(__nccwpck_require__(25761), exports);
__exportStar(__nccwpck_require__(15659), exports);
__exportStar(__nccwpck_require__(65967), exports);
__exportStar(__nccwpck_require__(38821), exports);
__exportStar(__nccwpck_require__(84896), exports);
__exportStar(__nccwpck_require__(80441), exports);
__exportStar(__nccwpck_require__(96775), exports);
__exportStar(__nccwpck_require__(15828), exports);
__exportStar(__nccwpck_require__(66568), exports);
__exportStar(__nccwpck_require__(64045), exports);
__exportStar(__nccwpck_require__(1037), exports);
__exportStar(__nccwpck_require__(86032), exports);
__exportStar(__nccwpck_require__(49087), exports);
__exportStar(__nccwpck_require__(92104), exports);
__exportStar(__nccwpck_require__(59376), exports);
__exportStar(__nccwpck_require__(94741), exports);
__exportStar(__nccwpck_require__(69442), exports);
__exportStar(__nccwpck_require__(59016), exports);
__exportStar(__nccwpck_require__(5507), exports);
__exportStar(__nccwpck_require__(98222), exports);
__exportStar(__nccwpck_require__(91627), exports);
__exportStar(__nccwpck_require__(181), exports);
__exportStar(__nccwpck_require__(54910), exports);
__exportStar(__nccwpck_require__(97116), exports);
__exportStar(__nccwpck_require__(19282), exports);
__exportStar(__nccwpck_require__(38074), exports);
__exportStar(__nccwpck_require__(54257), exports);
__exportStar(__nccwpck_require__(60870), exports);
__exportStar(__nccwpck_require__(76868), exports);
__exportStar(__nccwpck_require__(48842), exports);
__exportStar(__nccwpck_require__(20098), exports);
__exportStar(__nccwpck_require__(71777), exports);
__exportStar(__nccwpck_require__(33670), exports);
__exportStar(__nccwpck_require__(12621), exports);
__exportStar(__nccwpck_require__(50780), exports);
__exportStar(__nccwpck_require__(4892), exports);
__exportStar(__nccwpck_require__(82482), exports);
__exportStar(__nccwpck_require__(77557), exports);
__exportStar(__nccwpck_require__(20274), exports);
__exportStar(__nccwpck_require__(41463), exports);
__exportStar(__nccwpck_require__(23611), exports);
__exportStar(__nccwpck_require__(15394), exports);
__exportStar(__nccwpck_require__(21312), exports);
__exportStar(__nccwpck_require__(10960), exports);
__exportStar(__nccwpck_require__(72368), exports);
__exportStar(__nccwpck_require__(28973), exports);
__exportStar(__nccwpck_require__(66863), exports);
__exportStar(__nccwpck_require__(58007), exports);
__exportStar(__nccwpck_require__(2412), exports);
__exportStar(__nccwpck_require__(51642), exports);
__exportStar(__nccwpck_require__(80740), exports);
__exportStar(__nccwpck_require__(28666), exports);
__exportStar(__nccwpck_require__(28740), exports);
__exportStar(__nccwpck_require__(20049), exports);
__exportStar(__nccwpck_require__(96961), exports);
__exportStar(__nccwpck_require__(18719), exports);
__exportStar(__nccwpck_require__(95788), exports);
__exportStar(__nccwpck_require__(56932), exports);
__exportStar(__nccwpck_require__(37441), exports);
__exportStar(__nccwpck_require__(33922), exports);
__exportStar(__nccwpck_require__(52384), exports);
__exportStar(__nccwpck_require__(35649), exports);
__exportStar(__nccwpck_require__(59213), exports);
__exportStar(__nccwpck_require__(94579), exports);
__exportStar(__nccwpck_require__(63082), exports);
__exportStar(__nccwpck_require__(14094), exports);
__exportStar(__nccwpck_require__(83373), exports);
__exportStar(__nccwpck_require__(49631), exports);
__exportStar(__nccwpck_require__(26360), exports);
__exportStar(__nccwpck_require__(28586), exports);
__exportStar(__nccwpck_require__(25862), exports);
__exportStar(__nccwpck_require__(45466), exports);
__exportStar(__nccwpck_require__(96846), exports);
__exportStar(__nccwpck_require__(30118), exports);
__exportStar(__nccwpck_require__(98666), exports);
__exportStar(__nccwpck_require__(14168), exports);
__exportStar(__nccwpck_require__(35983), exports);
__exportStar(__nccwpck_require__(45521), exports);
__exportStar(__nccwpck_require__(35254), exports);
__exportStar(__nccwpck_require__(20015), exports);
__exportStar(__nccwpck_require__(90241), exports);
__exportStar(__nccwpck_require__(31261), exports);
__exportStar(__nccwpck_require__(46641), exports);
__exportStar(__nccwpck_require__(59053), exports);
__exportStar(__nccwpck_require__(73138), exports);
__exportStar(__nccwpck_require__(82195), exports);
__exportStar(__nccwpck_require__(6340), exports);
__exportStar(__nccwpck_require__(89853), exports);
__exportStar(__nccwpck_require__(74329), exports);
__exportStar(__nccwpck_require__(97520), exports);
__exportStar(__nccwpck_require__(1846), exports);
__exportStar(__nccwpck_require__(94488), exports);
__exportStar(__nccwpck_require__(73711), exports);
__exportStar(__nccwpck_require__(7559), exports);
__exportStar(__nccwpck_require__(36141), exports);
__exportStar(__nccwpck_require__(36191), exports);
__exportStar(__nccwpck_require__(51764), exports);
__exportStar(__nccwpck_require__(6360), exports);
__exportStar(__nccwpck_require__(16915), exports);
__exportStar(__nccwpck_require__(331), exports);
__exportStar(__nccwpck_require__(61368), exports);
__exportStar(__nccwpck_require__(761), exports);
__exportStar(__nccwpck_require__(25199), exports);
__exportStar(__nccwpck_require__(54400), exports);
__exportStar(__nccwpck_require__(30744), exports);
__exportStar(__nccwpck_require__(61434), exports);
__exportStar(__nccwpck_require__(74867), exports);
__exportStar(__nccwpck_require__(81407), exports);
__exportStar(__nccwpck_require__(32502), exports);
__exportStar(__nccwpck_require__(44390), exports);
__exportStar(__nccwpck_require__(87422), exports);
__exportStar(__nccwpck_require__(31544), exports);
__exportStar(__nccwpck_require__(91747), exports);
__exportStar(__nccwpck_require__(85521), exports);
__exportStar(__nccwpck_require__(70160), exports);
__exportStar(__nccwpck_require__(82384), exports);
__exportStar(__nccwpck_require__(62088), exports);
__exportStar(__nccwpck_require__(96842), exports);
__exportStar(__nccwpck_require__(40297), exports);
__exportStar(__nccwpck_require__(55241), exports);
__exportStar(__nccwpck_require__(71035), exports);
__exportStar(__nccwpck_require__(98240), exports);
__exportStar(__nccwpck_require__(61135), exports);
__exportStar(__nccwpck_require__(61827), exports);
__exportStar(__nccwpck_require__(26314), exports);
__exportStar(__nccwpck_require__(74942), exports);
__exportStar(__nccwpck_require__(33083), exports);
__exportStar(__nccwpck_require__(41894), exports);
__exportStar(__nccwpck_require__(54468), exports);
__exportStar(__nccwpck_require__(14849), exports);
__exportStar(__nccwpck_require__(38572), exports);
__exportStar(__nccwpck_require__(28896), exports);
__exportStar(__nccwpck_require__(47474), exports);
__exportStar(__nccwpck_require__(74666), exports);
__exportStar(__nccwpck_require__(6435), exports);
__exportStar(__nccwpck_require__(21529), exports);
__exportStar(__nccwpck_require__(2584), exports);
__exportStar(__nccwpck_require__(68252), exports);
__exportStar(__nccwpck_require__(56524), exports);
__exportStar(__nccwpck_require__(47584), exports);
__exportStar(__nccwpck_require__(44254), exports);
__exportStar(__nccwpck_require__(73920), exports);
__exportStar(__nccwpck_require__(9367), exports);
__exportStar(__nccwpck_require__(59266), exports);
__exportStar(__nccwpck_require__(19278), exports);
__exportStar(__nccwpck_require__(74965), exports);
__exportStar(__nccwpck_require__(7908), exports);
__exportStar(__nccwpck_require__(75536), exports);
__exportStar(__nccwpck_require__(39523), exports);
__exportStar(__nccwpck_require__(67572), exports);
__exportStar(__nccwpck_require__(63253), exports);
__exportStar(__nccwpck_require__(41699), exports);
__exportStar(__nccwpck_require__(81408), exports);
__exportStar(__nccwpck_require__(91077), exports);
__exportStar(__nccwpck_require__(15881), exports);
__exportStar(__nccwpck_require__(62201), exports);
__exportStar(__nccwpck_require__(81110), exports);
__exportStar(__nccwpck_require__(76501), exports);
__exportStar(__nccwpck_require__(72380), exports);
__exportStar(__nccwpck_require__(78897), exports);
__exportStar(__nccwpck_require__(94427), exports);
__exportStar(__nccwpck_require__(87083), exports);
__exportStar(__nccwpck_require__(79217), exports);
__exportStar(__nccwpck_require__(4131), exports);
__exportStar(__nccwpck_require__(60101), exports);
__exportStar(__nccwpck_require__(92966), exports);
__exportStar(__nccwpck_require__(54117), exports);
__exportStar(__nccwpck_require__(15781), exports);
__exportStar(__nccwpck_require__(26303), exports);
__exportStar(__nccwpck_require__(1742), exports);
__exportStar(__nccwpck_require__(77725), exports);
__exportStar(__nccwpck_require__(19762), exports);
__exportStar(__nccwpck_require__(65873), exports);
__exportStar(__nccwpck_require__(82600), exports);
__exportStar(__nccwpck_require__(2179), exports);
__exportStar(__nccwpck_require__(20338), exports);
__exportStar(__nccwpck_require__(85958), exports);
__exportStar(__nccwpck_require__(56827), exports);
__exportStar(__nccwpck_require__(20416), exports);
__exportStar(__nccwpck_require__(28728), exports);
__exportStar(__nccwpck_require__(78312), exports);
__exportStar(__nccwpck_require__(42822), exports);
__exportStar(__nccwpck_require__(21321), exports);
__exportStar(__nccwpck_require__(59847), exports);
__exportStar(__nccwpck_require__(24871), exports);
__exportStar(__nccwpck_require__(4241), exports);
__exportStar(__nccwpck_require__(99726), exports);
__exportStar(__nccwpck_require__(52849), exports);
__exportStar(__nccwpck_require__(56448), exports);
__exportStar(__nccwpck_require__(22774), exports);
__exportStar(__nccwpck_require__(24841), exports);
__exportStar(__nccwpck_require__(72247), exports);
__exportStar(__nccwpck_require__(25825), exports);
__exportStar(__nccwpck_require__(44587), exports);
__exportStar(__nccwpck_require__(62746), exports);
__exportStar(__nccwpck_require__(1066), exports);
__exportStar(__nccwpck_require__(75232), exports);
__exportStar(__nccwpck_require__(75328), exports);
__exportStar(__nccwpck_require__(46506), exports);
__exportStar(__nccwpck_require__(14858), exports);
__exportStar(__nccwpck_require__(71571), exports);
__exportStar(__nccwpck_require__(38465), exports);
__exportStar(__nccwpck_require__(61189), exports);
__exportStar(__nccwpck_require__(17582), exports);
__exportStar(__nccwpck_require__(59233), exports);
__exportStar(__nccwpck_require__(20323), exports);
__exportStar(__nccwpck_require__(42589), exports);
__exportStar(__nccwpck_require__(67297), exports);
__exportStar(__nccwpck_require__(83933), exports);
__exportStar(__nccwpck_require__(85682), exports);
__exportStar(__nccwpck_require__(64230), exports);
__exportStar(__nccwpck_require__(74293), exports);
__exportStar(__nccwpck_require__(87429), exports);
__exportStar(__nccwpck_require__(86809), exports);
__exportStar(__nccwpck_require__(65882), exports);
__exportStar(__nccwpck_require__(2457), exports);
__exportStar(__nccwpck_require__(62700), exports);
__exportStar(__nccwpck_require__(7937), exports);
__exportStar(__nccwpck_require__(89021), exports);
__exportStar(__nccwpck_require__(46909), exports);
__exportStar(__nccwpck_require__(967), exports);
__exportStar(__nccwpck_require__(38021), exports);
__exportStar(__nccwpck_require__(81487), exports);
__exportStar(__nccwpck_require__(48730), exports);
__exportStar(__nccwpck_require__(52158), exports);
__exportStar(__nccwpck_require__(29817), exports);
__exportStar(__nccwpck_require__(15973), exports);
__exportStar(__nccwpck_require__(64950), exports);
__exportStar(__nccwpck_require__(11257), exports);
__exportStar(__nccwpck_require__(3545), exports);
__exportStar(__nccwpck_require__(50247), exports);
__exportStar(__nccwpck_require__(94245), exports);
__exportStar(__nccwpck_require__(80680), exports);
__exportStar(__nccwpck_require__(5378), exports);
__exportStar(__nccwpck_require__(87920), exports);
__exportStar(__nccwpck_require__(56589), exports);
__exportStar(__nccwpck_require__(7440), exports);
__exportStar(__nccwpck_require__(83774), exports);
__exportStar(__nccwpck_require__(69842), exports);
__exportStar(__nccwpck_require__(37223), exports);
__exportStar(__nccwpck_require__(91952), exports);
__exportStar(__nccwpck_require__(79359), exports);
__exportStar(__nccwpck_require__(92389), exports);
__exportStar(__nccwpck_require__(77530), exports);
__exportStar(__nccwpck_require__(37413), exports);
__exportStar(__nccwpck_require__(77863), exports);
__exportStar(__nccwpck_require__(99918), exports);
__exportStar(__nccwpck_require__(22007), exports);
__exportStar(__nccwpck_require__(89769), exports);
__exportStar(__nccwpck_require__(38668), exports);
__exportStar(__nccwpck_require__(62738), exports);
__exportStar(__nccwpck_require__(86780), exports);
__exportStar(__nccwpck_require__(88453), exports);
__exportStar(__nccwpck_require__(49224), exports);
__exportStar(__nccwpck_require__(57551), exports);
__exportStar(__nccwpck_require__(78358), exports);
__exportStar(__nccwpck_require__(58728), exports);
__exportStar(__nccwpck_require__(91474), exports);
__exportStar(__nccwpck_require__(81105), exports);
__exportStar(__nccwpck_require__(60185), exports);
__exportStar(__nccwpck_require__(54608), exports);
__exportStar(__nccwpck_require__(6200), exports);
__exportStar(__nccwpck_require__(76452), exports);
__exportStar(__nccwpck_require__(36698), exports);
__exportStar(__nccwpck_require__(56970), exports);
__exportStar(__nccwpck_require__(60335), exports);
__exportStar(__nccwpck_require__(41038), exports);
__exportStar(__nccwpck_require__(66379), exports);
__exportStar(__nccwpck_require__(28685), exports);
__exportStar(__nccwpck_require__(41948), exports);
__exportStar(__nccwpck_require__(91609), exports);
__exportStar(__nccwpck_require__(8020), exports);
__exportStar(__nccwpck_require__(34869), exports);
__exportStar(__nccwpck_require__(34643), exports);
__exportStar(__nccwpck_require__(93930), exports);
__exportStar(__nccwpck_require__(78298), exports);
__exportStar(__nccwpck_require__(38856), exports);
__exportStar(__nccwpck_require__(45830), exports);
__exportStar(__nccwpck_require__(97794), exports);
__exportStar(__nccwpck_require__(74322), exports);
__exportStar(__nccwpck_require__(31490), exports);
__exportStar(__nccwpck_require__(7020), exports);
__exportStar(__nccwpck_require__(42500), exports);
__exportStar(__nccwpck_require__(50681), exports);
__exportStar(__nccwpck_require__(90579), exports);
__exportStar(__nccwpck_require__(90408), exports);
__exportStar(__nccwpck_require__(90621), exports);
__exportStar(__nccwpck_require__(68884), exports);
__exportStar(__nccwpck_require__(54516), exports);
__exportStar(__nccwpck_require__(95950), exports);
__exportStar(__nccwpck_require__(21662), exports);
__exportStar(__nccwpck_require__(71822), exports);
__exportStar(__nccwpck_require__(24999), exports);
__exportStar(__nccwpck_require__(24591), exports);
__exportStar(__nccwpck_require__(3135), exports);
__exportStar(__nccwpck_require__(21897), exports);
__exportStar(__nccwpck_require__(89363), exports);
__exportStar(__nccwpck_require__(24339), exports);
__exportStar(__nccwpck_require__(86955), exports);
__exportStar(__nccwpck_require__(42648), exports);
__exportStar(__nccwpck_require__(35561), exports);
__exportStar(__nccwpck_require__(12396), exports);
__exportStar(__nccwpck_require__(45959), exports);
__exportStar(__nccwpck_require__(47731), exports);
__exportStar(__nccwpck_require__(9703), exports);
__exportStar(__nccwpck_require__(43985), exports);
__exportStar(__nccwpck_require__(88473), exports);
__exportStar(__nccwpck_require__(1542), exports);
__exportStar(__nccwpck_require__(30187), exports);
__exportStar(__nccwpck_require__(82797), exports);
__exportStar(__nccwpck_require__(58469), exports);
__exportStar(__nccwpck_require__(8827), exports);
__exportStar(__nccwpck_require__(59451), exports);
__exportStar(__nccwpck_require__(72746), exports);
__exportStar(__nccwpck_require__(35773), exports);
__exportStar(__nccwpck_require__(76985), exports);
__exportStar(__nccwpck_require__(23326), exports);
__exportStar(__nccwpck_require__(27443), exports);
__exportStar(__nccwpck_require__(85428), exports);
__exportStar(__nccwpck_require__(47885), exports);
__exportStar(__nccwpck_require__(10653), exports);
__exportStar(__nccwpck_require__(7701), exports);
__exportStar(__nccwpck_require__(1132), exports);
__exportStar(__nccwpck_require__(32616), exports);
__exportStar(__nccwpck_require__(5203), exports);
__exportStar(__nccwpck_require__(16659), exports);
__exportStar(__nccwpck_require__(29068), exports);
__exportStar(__nccwpck_require__(46587), exports);
__exportStar(__nccwpck_require__(61317), exports);
__exportStar(__nccwpck_require__(60959), exports);
__exportStar(__nccwpck_require__(41540), exports);
__exportStar(__nccwpck_require__(13872), exports);
__exportStar(__nccwpck_require__(28854), exports);
__exportStar(__nccwpck_require__(99599), exports);
__exportStar(__nccwpck_require__(90208), exports);
__exportStar(__nccwpck_require__(88516), exports);
__exportStar(__nccwpck_require__(55456), exports);
__exportStar(__nccwpck_require__(2160), exports);
__exportStar(__nccwpck_require__(74260), exports);
__exportStar(__nccwpck_require__(75021), exports);
__exportStar(__nccwpck_require__(12786), exports);
__exportStar(__nccwpck_require__(79550), exports);
__exportStar(__nccwpck_require__(57570), exports);
__exportStar(__nccwpck_require__(14903), exports);
__exportStar(__nccwpck_require__(25927), exports);
__exportStar(__nccwpck_require__(51935), exports);
__exportStar(__nccwpck_require__(44644), exports);
__exportStar(__nccwpck_require__(83578), exports);
__exportStar(__nccwpck_require__(58691), exports);
__exportStar(__nccwpck_require__(30207), exports);
__exportStar(__nccwpck_require__(8451), exports);
__exportStar(__nccwpck_require__(78927), exports);
__exportStar(__nccwpck_require__(55329), exports);
__exportStar(__nccwpck_require__(93473), exports);
__exportStar(__nccwpck_require__(98881), exports);
__exportStar(__nccwpck_require__(4017), exports);
__exportStar(__nccwpck_require__(48529), exports);
__exportStar(__nccwpck_require__(46529), exports);
__exportStar(__nccwpck_require__(72726), exports);
__exportStar(__nccwpck_require__(94078), exports);
__exportStar(__nccwpck_require__(45729), exports);
__exportStar(__nccwpck_require__(24907), exports);
__exportStar(__nccwpck_require__(22253), exports);
__exportStar(__nccwpck_require__(83359), exports);
__exportStar(__nccwpck_require__(77522), exports);
__exportStar(__nccwpck_require__(21370), exports);
__exportStar(__nccwpck_require__(16538), exports);
__exportStar(__nccwpck_require__(61263), exports);
__exportStar(__nccwpck_require__(1503), exports);
__exportStar(__nccwpck_require__(87224), exports);
__exportStar(__nccwpck_require__(87179), exports);
__exportStar(__nccwpck_require__(5369), exports);
__exportStar(__nccwpck_require__(19269), exports);
__exportStar(__nccwpck_require__(68317), exports);
__exportStar(__nccwpck_require__(6402), exports);
__exportStar(__nccwpck_require__(73030), exports);
__exportStar(__nccwpck_require__(97580), exports);
__exportStar(__nccwpck_require__(4271), exports);
__exportStar(__nccwpck_require__(79922), exports);
__exportStar(__nccwpck_require__(87229), exports);
__exportStar(__nccwpck_require__(55683), exports);
__exportStar(__nccwpck_require__(32435), exports);
__exportStar(__nccwpck_require__(16639), exports);
__exportStar(__nccwpck_require__(22561), exports);
__exportStar(__nccwpck_require__(46178), exports);
__exportStar(__nccwpck_require__(53825), exports);
__exportStar(__nccwpck_require__(12554), exports);


/***/ }),

/***/ 49690:
/***/ (function(module, __unused_webpack_exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const events_1 = __nccwpck_require__(82361);
const debug_1 = __importDefault(__nccwpck_require__(38237));
const promisify_1 = __importDefault(__nccwpck_require__(66570));
const debug = debug_1.default('agent-base');
function isAgent(v) {
    return Boolean(v) && typeof v.addRequest === 'function';
}
function isSecureEndpoint() {
    const { stack } = new Error();
    if (typeof stack !== 'string')
        return false;
    return stack.split('\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);
}
function createAgent(callback, opts) {
    return new createAgent.Agent(callback, opts);
}
(function (createAgent) {
    /**
     * Base `http.Agent` implementation.
     * No pooling/keep-alive is implemented by default.
     *
     * @param {Function} callback
     * @api public
     */
    class Agent extends events_1.EventEmitter {
        constructor(callback, _opts) {
            super();
            let opts = _opts;
            if (typeof callback === 'function') {
                this.callback = callback;
            }
            else if (callback) {
                opts = callback;
            }
            // Timeout for the socket to be returned from the callback
            this.timeout = null;
            if (opts && typeof opts.timeout === 'number') {
                this.timeout = opts.timeout;
            }
            // These aren't actually used by `agent-base`, but are required
            // for the TypeScript definition files in `@types/node` :/
            this.maxFreeSockets = 1;
            this.maxSockets = 1;
            this.maxTotalSockets = Infinity;
            this.sockets = {};
            this.freeSockets = {};
            this.requests = {};
            this.options = {};
        }
        get defaultPort() {
            if (typeof this.explicitDefaultPort === 'number') {
                return this.explicitDefaultPort;
            }
            return isSecureEndpoint() ? 443 : 80;
        }
        set defaultPort(v) {
            this.explicitDefaultPort = v;
        }
        get protocol() {
            if (typeof this.explicitProtocol === 'string') {
                return this.explicitProtocol;
            }
            return isSecureEndpoint() ? 'https:' : 'http:';
        }
        set protocol(v) {
            this.explicitProtocol = v;
        }
        callback(req, opts, fn) {
            throw new Error('"agent-base" has no default implementation, you must subclass and override `callback()`');
        }
        /**
         * Called by node-core's "_http_client.js" module when creating
         * a new HTTP request with this Agent instance.
         *
         * @api public
         */
        addRequest(req, _opts) {
            const opts = Object.assign({}, _opts);
            if (typeof opts.secureEndpoint !== 'boolean') {
                opts.secureEndpoint = isSecureEndpoint();
            }
            if (opts.host == null) {
                opts.host = 'localhost';
            }
            if (opts.port == null) {
                opts.port = opts.secureEndpoint ? 443 : 80;
            }
            if (opts.protocol == null) {
                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';
            }
            if (opts.host && opts.path) {
                // If both a `host` and `path` are specified then it's most
                // likely the result of a `url.parse()` call... we need to
                // remove the `path` portion so that `net.connect()` doesn't
                // attempt to open that as a unix socket file.
                delete opts.path;
            }
            delete opts.agent;
            delete opts.hostname;
            delete opts._defaultAgent;
            delete opts.defaultPort;
            delete opts.createConnection;
            // Hint to use "Connection: close"
            // XXX: non-documented `http` module API :(
            req._last = true;
            req.shouldKeepAlive = false;
            let timedOut = false;
            let timeoutId = null;
            const timeoutMs = opts.timeout || this.timeout;
            const onerror = (err) => {
                if (req._hadError)
                    return;
                req.emit('error', err);
                // For Safety. Some additional errors might fire later on
                // and we need to make sure we don't double-fire the error event.
                req._hadError = true;
            };
            const ontimeout = () => {
                timeoutId = null;
                timedOut = true;
                const err = new Error(`A "socket" was not created for HTTP request before ${timeoutMs}ms`);
                err.code = 'ETIMEOUT';
                onerror(err);
            };
            const callbackError = (err) => {
                if (timedOut)
                    return;
                if (timeoutId !== null) {
                    clearTimeout(timeoutId);
                    timeoutId = null;
                }
                onerror(err);
            };
            const onsocket = (socket) => {
                if (timedOut)
                    return;
                if (timeoutId != null) {
                    clearTimeout(timeoutId);
                    timeoutId = null;
                }
                if (isAgent(socket)) {
                    // `socket` is actually an `http.Agent` instance, so
                    // relinquish responsibility for this `req` to the Agent
                    // from here on
                    debug('Callback returned another Agent instance %o', socket.constructor.name);
                    socket.addRequest(req, opts);
                    return;
                }
                if (socket) {
                    socket.once('free', () => {
                        this.freeSocket(socket, opts);
                    });
                    req.onSocket(socket);
                    return;
                }
                const err = new Error(`no Duplex stream was returned to agent-base for \`${req.method} ${req.path}\``);
                onerror(err);
            };
            if (typeof this.callback !== 'function') {
                onerror(new Error('`callback` is not defined'));
                return;
            }
            if (!this.promisifiedCallback) {
                if (this.callback.length >= 3) {
                    debug('Converting legacy callback function to promise');
                    this.promisifiedCallback = promisify_1.default(this.callback);
                }
                else {
                    this.promisifiedCallback = this.callback;
                }
            }
            if (typeof timeoutMs === 'number' && timeoutMs > 0) {
                timeoutId = setTimeout(ontimeout, timeoutMs);
            }
            if ('port' in opts && typeof opts.port !== 'number') {
                opts.port = Number(opts.port);
            }
            try {
                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);
                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);
            }
            catch (err) {
                Promise.reject(err).catch(callbackError);
            }
        }
        freeSocket(socket, opts) {
            debug('Freeing socket %o %o', socket.constructor.name, opts);
            socket.destroy();
        }
        destroy() {
            debug('Destroying agent %o', this.constructor.name);
        }
    }
    createAgent.Agent = Agent;
    // So that `instanceof` works correctly
    createAgent.prototype = createAgent.Agent.prototype;
})(createAgent || (createAgent = {}));
module.exports = createAgent;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 66570:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function promisify(fn) {
    return function (req, opts) {
        return new Promise((resolve, reject) => {
            fn.call(this, req, opts, (err, rtn) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(rtn);
                }
            });
        });
    };
}
exports["default"] = promisify;
//# sourceMappingURL=promisify.js.map

/***/ }),

/***/ 96545:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(52618);

/***/ }),

/***/ 68104:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);
var settle = __nccwpck_require__(13211);
var buildFullPath = __nccwpck_require__(41934);
var buildURL = __nccwpck_require__(30646);
var http = __nccwpck_require__(13685);
var https = __nccwpck_require__(95687);
var httpFollow = (__nccwpck_require__(67707).http);
var httpsFollow = (__nccwpck_require__(67707).https);
var url = __nccwpck_require__(57310);
var zlib = __nccwpck_require__(59796);
var pkg = __nccwpck_require__(88593);
var createError = __nccwpck_require__(15226);
var enhanceError = __nccwpck_require__(21516);

var isHttps = /https:?/;

/**
 *
 * @param {http.ClientRequestArgs} options
 * @param {AxiosProxyConfig} proxy
 * @param {string} location
 */
function setProxy(options, proxy, location) {
  options.hostname = proxy.host;
  options.host = proxy.host;
  options.port = proxy.port;
  options.path = location;

  // Basic proxy authorization
  if (proxy.auth) {
    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');
    options.headers['Proxy-Authorization'] = 'Basic ' + base64;
  }

  // If a proxy is used, any redirects must also pass through the proxy
  options.beforeRedirect = function beforeRedirect(redirection) {
    redirection.headers.host = redirection.host;
    setProxy(redirection, proxy, redirection.href);
  };
}

/*eslint consistent-return:0*/
module.exports = function httpAdapter(config) {
  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {
    var resolve = function resolve(value) {
      resolvePromise(value);
    };
    var reject = function reject(value) {
      rejectPromise(value);
    };
    var data = config.data;
    var headers = config.headers;

    // Set User-Agent (required by some servers)
    // See https://github.com/axios/axios/issues/69
    if ('User-Agent' in headers || 'user-agent' in headers) {
      // User-Agent is specified; handle case where no UA header is desired
      if (!headers['User-Agent'] && !headers['user-agent']) {
        delete headers['User-Agent'];
        delete headers['user-agent'];
      }
      // Otherwise, use specified value
    } else {
      // Only set header if it hasn't been set in config
      headers['User-Agent'] = 'axios/' + pkg.version;
    }

    if (data && !utils.isStream(data)) {
      if (Buffer.isBuffer(data)) {
        // Nothing to do...
      } else if (utils.isArrayBuffer(data)) {
        data = Buffer.from(new Uint8Array(data));
      } else if (utils.isString(data)) {
        data = Buffer.from(data, 'utf-8');
      } else {
        return reject(createError(
          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',
          config
        ));
      }

      // Add Content-Length header if data exists
      headers['Content-Length'] = data.length;
    }

    // HTTP basic authentication
    var auth = undefined;
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      auth = username + ':' + password;
    }

    // Parse url
    var fullPath = buildFullPath(config.baseURL, config.url);
    var parsed = url.parse(fullPath);
    var protocol = parsed.protocol || 'http:';

    if (!auth && parsed.auth) {
      var urlAuth = parsed.auth.split(':');
      var urlUsername = urlAuth[0] || '';
      var urlPassword = urlAuth[1] || '';
      auth = urlUsername + ':' + urlPassword;
    }

    if (auth) {
      delete headers.Authorization;
    }

    var isHttpsRequest = isHttps.test(protocol);
    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;

    var options = {
      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, ''),
      method: config.method.toUpperCase(),
      headers: headers,
      agent: agent,
      agents: { http: config.httpAgent, https: config.httpsAgent },
      auth: auth
    };

    if (config.socketPath) {
      options.socketPath = config.socketPath;
    } else {
      options.hostname = parsed.hostname;
      options.port = parsed.port;
    }

    var proxy = config.proxy;
    if (!proxy && proxy !== false) {
      var proxyEnv = protocol.slice(0, -1) + '_proxy';
      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];
      if (proxyUrl) {
        var parsedProxyUrl = url.parse(proxyUrl);
        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;
        var shouldProxy = true;

        if (noProxyEnv) {
          var noProxy = noProxyEnv.split(',').map(function trim(s) {
            return s.trim();
          });

          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {
            if (!proxyElement) {
              return false;
            }
            if (proxyElement === '*') {
              return true;
            }
            if (proxyElement[0] === '.' &&
                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {
              return true;
            }

            return parsed.hostname === proxyElement;
          });
        }

        if (shouldProxy) {
          proxy = {
            host: parsedProxyUrl.hostname,
            port: parsedProxyUrl.port,
            protocol: parsedProxyUrl.protocol
          };

          if (parsedProxyUrl.auth) {
            var proxyUrlAuth = parsedProxyUrl.auth.split(':');
            proxy.auth = {
              username: proxyUrlAuth[0],
              password: proxyUrlAuth[1]
            };
          }
        }
      }
    }

    if (proxy) {
      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');
      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);
    }

    var transport;
    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);
    if (config.transport) {
      transport = config.transport;
    } else if (config.maxRedirects === 0) {
      transport = isHttpsProxy ? https : http;
    } else {
      if (config.maxRedirects) {
        options.maxRedirects = config.maxRedirects;
      }
      transport = isHttpsProxy ? httpsFollow : httpFollow;
    }

    if (config.maxBodyLength > -1) {
      options.maxBodyLength = config.maxBodyLength;
    }

    // Create the request
    var req = transport.request(options, function handleResponse(res) {
      if (req.aborted) return;

      // uncompress the response body transparently if required
      var stream = res;

      // return the last request in case of redirects
      var lastRequest = res.req || req;


      // if no content, is HEAD request or decompress disabled we should not decompress
      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {
        switch (res.headers['content-encoding']) {
        /*eslint default-case:0*/
        case 'gzip':
        case 'compress':
        case 'deflate':
        // add the unzipper to the body stream processing pipeline
          stream = stream.pipe(zlib.createUnzip());

          // remove the content-encoding in order to not confuse downstream operations
          delete res.headers['content-encoding'];
          break;
        }
      }

      var response = {
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: res.headers,
        config: config,
        request: lastRequest
      };

      if (config.responseType === 'stream') {
        response.data = stream;
        settle(resolve, reject, response);
      } else {
        var responseBuffer = [];
        var totalResponseBytes = 0;
        stream.on('data', function handleStreamData(chunk) {
          responseBuffer.push(chunk);
          totalResponseBytes += chunk.length;

          // make sure the content length is not over the maxContentLength if specified
          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {
            stream.destroy();
            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',
              config, null, lastRequest));
          }
        });

        stream.on('error', function handleStreamError(err) {
          if (req.aborted) return;
          reject(enhanceError(err, config, null, lastRequest));
        });

        stream.on('end', function handleStreamEnd() {
          var responseData = Buffer.concat(responseBuffer);
          if (config.responseType !== 'arraybuffer') {
            responseData = responseData.toString(config.responseEncoding);
            if (!config.responseEncoding || config.responseEncoding === 'utf8') {
              responseData = utils.stripBOM(responseData);
            }
          }

          response.data = responseData;
          settle(resolve, reject, response);
        });
      }
    });

    // Handle errors
    req.on('error', function handleRequestError(err) {
      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;
      reject(enhanceError(err, config, null, req));
    });

    // Handle request timeout
    if (config.timeout) {
      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.
      var timeout = parseInt(config.timeout, 10);

      if (isNaN(timeout)) {
        reject(createError(
          'error trying to parse `config.timeout` to int',
          config,
          'ERR_PARSE_TIMEOUT',
          req
        ));

        return;
      }

      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.
      // And timer callback will be fired, and abort() will be invoked before connection, then get "socket hang up" and code ECONNRESET.
      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.
      // And then these socket which be hang up will devoring CPU little by little.
      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.
      req.setTimeout(timeout, function handleRequestTimeout() {
        req.abort();
        reject(createError(
          'timeout of ' + timeout + 'ms exceeded',
          config,
          config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',
          req
        ));
      });
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (req.aborted) return;

        req.abort();
        reject(cancel);
      });
    }

    // Send the request
    if (utils.isStream(data)) {
      data.on('error', function handleStreamError(err) {
        reject(enhanceError(err, config, null, req));
      }).pipe(req);
    } else {
      req.end(data);
    }
  });
};


/***/ }),

/***/ 3454:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);
var settle = __nccwpck_require__(13211);
var cookies = __nccwpck_require__(21545);
var buildURL = __nccwpck_require__(30646);
var buildFullPath = __nccwpck_require__(41934);
var parseHeaders = __nccwpck_require__(86455);
var isURLSameOrigin = __nccwpck_require__(33608);
var createError = __nccwpck_require__(15226);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    var responseType = config.responseType;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?
        request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(
        timeoutErrorMessage,
        config,
        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ 52618:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);
var bind = __nccwpck_require__(77065);
var Axios = __nccwpck_require__(98178);
var mergeConfig = __nccwpck_require__(74831);
var defaults = __nccwpck_require__(98190);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __nccwpck_require__(98875);
axios.CancelToken = __nccwpck_require__(71587);
axios.isCancel = __nccwpck_require__(64057);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __nccwpck_require__(74850);

// Expose isAxiosError
axios.isAxiosError = __nccwpck_require__(60650);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports["default"] = axios;


/***/ }),

/***/ 98875:
/***/ ((module) => {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ 71587:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Cancel = __nccwpck_require__(98875);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ 64057:
/***/ ((module) => {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ 98178:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);
var buildURL = __nccwpck_require__(30646);
var InterceptorManager = __nccwpck_require__(3214);
var dispatchRequest = __nccwpck_require__(85062);
var mergeConfig = __nccwpck_require__(74831);
var validator = __nccwpck_require__(51632);

var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  var transitional = config.transitional;

  if (transitional !== undefined) {
    validator.assertOptions(transitional, {
      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),
      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),
      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')
    }, false);
  }

  // filter out skipped interceptors
  var requestInterceptorChain = [];
  var synchronousRequestInterceptors = true;
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
      return;
    }

    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;

    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  var responseInterceptorChain = [];
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
  });

  var promise;

  if (!synchronousRequestInterceptors) {
    var chain = [dispatchRequest, undefined];

    Array.prototype.unshift.apply(chain, requestInterceptorChain);
    chain = chain.concat(responseInterceptorChain);

    promise = Promise.resolve(config);
    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  }


  var newConfig = config;
  while (requestInterceptorChain.length) {
    var onFulfilled = requestInterceptorChain.shift();
    var onRejected = requestInterceptorChain.shift();
    try {
      newConfig = onFulfilled(newConfig);
    } catch (error) {
      onRejected(error);
      break;
    }
  }

  try {
    promise = dispatchRequest(newConfig);
  } catch (error) {
    return Promise.reject(error);
  }

  while (responseInterceptorChain.length) {
    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ 3214:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected,
    synchronous: options ? options.synchronous : false,
    runWhen: options ? options.runWhen : null
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ 41934:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var isAbsoluteURL = __nccwpck_require__(41301);
var combineURLs = __nccwpck_require__(57189);

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ 15226:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var enhanceError = __nccwpck_require__(21516);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ 85062:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);
var transformData = __nccwpck_require__(19812);
var isCancel = __nccwpck_require__(64057);
var defaults = __nccwpck_require__(98190);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData.call(
    config,
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData.call(
      config,
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ 21516:
/***/ ((module) => {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),

/***/ 74831:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};


/***/ }),

/***/ 13211:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var createError = __nccwpck_require__(15226);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ 19812:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);
var defaults = __nccwpck_require__(98190);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  var context = this || defaults;
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn.call(context, data, headers);
  });

  return data;
};


/***/ }),

/***/ 98190:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);
var normalizeHeaderName = __nccwpck_require__(36240);
var enhanceError = __nccwpck_require__(21516);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __nccwpck_require__(3454);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __nccwpck_require__(68104);
  }
  return adapter;
}

function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

var defaults = {

  transitional: {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
  },

  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {
      setContentTypeIfUnset(headers, 'application/json');
      return stringifySafely(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional;
    var silentJSONParsing = transitional && transitional.silentJSONParsing;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';

    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw enhanceError(e, this, 'E_JSON_PARSE');
          }
          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),

/***/ 77065:
/***/ ((module) => {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ 30646:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ 57189:
/***/ ((module) => {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ 21545:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ 41301:
/***/ ((module) => {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ 60650:
/***/ ((module) => {

"use strict";


/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};


/***/ }),

/***/ 33608:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ 36240:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ 86455:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var utils = __nccwpck_require__(20328);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ 74850:
/***/ ((module) => {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ 51632:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var pkg = __nccwpck_require__(88593);

var validators = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {
  validators[type] = function validator(thing) {
    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});

var deprecatedWarnings = {};
var currentVerArr = pkg.version.split('.');

/**
 * Compare package versions
 * @param {string} version
 * @param {string?} thanVersion
 * @returns {boolean}
 */
function isOlderVersion(version, thanVersion) {
  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;
  var destVer = version.split('.');
  for (var i = 0; i < 3; i++) {
    if (pkgVersionArr[i] > destVer[i]) {
      return true;
    } else if (pkgVersionArr[i] < destVer[i]) {
      return false;
    }
  }
  return false;
}

/**
 * Transitional option validator
 * @param {function|boolean?} validator
 * @param {string?} version
 * @param {string} message
 * @returns {function}
 */
validators.transitional = function transitional(validator, version, message) {
  var isDeprecated = version && isOlderVersion(version);

  function formatMessage(opt, desc) {
    return '[Axios v' + pkg.version + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return function(value, opt, opts) {
    if (validator === false) {
      throw new Error(formatMessage(opt, ' has been removed in ' + version));
    }

    if (isDeprecated && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' + version + ' and will be removed in the near future'
        )
      );
    }

    return validator ? validator(value, opt, opts) : true;
  };
};

/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */

function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new TypeError('options must be an object');
  }
  var keys = Object.keys(options);
  var i = keys.length;
  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];
    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new TypeError('option ' + opt + ' must be ' + result);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw Error('Unknown option ' + opt);
    }
  }
}

module.exports = {
  isOlderVersion: isOlderVersion,
  assertOptions: assertOptions,
  validators: validators
};


/***/ }),

/***/ 20328:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var bind = __nccwpck_require__(77065);

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};


/***/ }),

/***/ 52087:
/***/ ((module) => {

"use strict";


function padWithZeros(vNumber, width) {
  var numAsString = vNumber.toString();
  while (numAsString.length < width) {
    numAsString = "0" + numAsString;
  }
  return numAsString;
}

function addZero(vNumber) {
  return padWithZeros(vNumber, 2);
}

/**
 * Formats the TimeOffset
 * Thanks to http://www.svendtofte.com/code/date_format/
 * @private
 */
function offset(timezoneOffset) {
  var os = Math.abs(timezoneOffset);
  var h = String(Math.floor(os / 60));
  var m = String(os % 60);
  h = ("0" + h).slice(-2);
  m = ("0" + m).slice(-2);
  return timezoneOffset === 0 ? "Z" : (timezoneOffset < 0 ? "+" : "-") + h + ":" + m;
}

function asString(format, date) {
  if (typeof format !== "string") {
    date = format;
    format = module.exports.ISO8601_FORMAT;
  }
  if (!date) {
    date = module.exports.now();
  }

  // Issue # 14 - Per ISO8601 standard, the time string should be local time
  // with timezone info.
  // See https://en.wikipedia.org/wiki/ISO_8601 section "Time offsets from UTC"

  var vDay = addZero(date.getDate());
  var vMonth = addZero(date.getMonth() + 1);
  var vYearLong = addZero(date.getFullYear());
  var vYearShort = addZero(vYearLong.substring(2, 4));
  var vYear = format.indexOf("yyyy") > -1 ? vYearLong : vYearShort;
  var vHour = addZero(date.getHours());
  var vMinute = addZero(date.getMinutes());
  var vSecond = addZero(date.getSeconds());
  var vMillisecond = padWithZeros(date.getMilliseconds(), 3);
  var vTimeZone = offset(date.getTimezoneOffset());
  var formatted = format
    .replace(/dd/g, vDay)
    .replace(/MM/g, vMonth)
    .replace(/y{1,4}/g, vYear)
    .replace(/hh/g, vHour)
    .replace(/mm/g, vMinute)
    .replace(/ss/g, vSecond)
    .replace(/SSS/g, vMillisecond)
    .replace(/O/g, vTimeZone);
  return formatted;
}

function setDatePart(date, part, value, local) {
  date['set' + (local ? '' : 'UTC') + part](value);
}

function extractDateParts(pattern, str, missingValuesDate) {
  // Javascript Date object doesn't support custom timezone.  Sets all felds as
  // GMT based to begin with.  If the timezone offset is provided, then adjust
  // it using provided timezone, otherwise, adjust it with the system timezone.
  var local = pattern.indexOf('O') < 0;
  var monthOverflow = false;
  var matchers = [
    {
      pattern: /y{1,4}/,
      regexp: "\\d{1,4}",
      fn: function(date, value) {
        setDatePart(date, 'FullYear', value, local);
      }
    },
    {
      pattern: /MM/,
      regexp: "\\d{1,2}",
      fn: function(date, value) {
        setDatePart(date, 'Month', (value - 1), local);
        if (date.getMonth() !== (value - 1)) {
          // in the event of 31 May --> 31 Feb --> 3 Mar
          // this is correct behavior if no Date is involved
          monthOverflow = true;
        }
      }
    },
    {
      pattern: /dd/,
      regexp: "\\d{1,2}",
      fn: function(date, value) {
        // in the event of 31 May --> 31 Feb --> 3 Mar
        // reset Mar back to Feb, before setting the Date
        if (monthOverflow) {
          setDatePart(date, 'Month', (date.getMonth() - 1), local);
        }
        setDatePart(date, 'Date', value, local);
      }
    },
    {
      pattern: /hh/,
      regexp: "\\d{1,2}",
      fn: function(date, value) {
        setDatePart(date, 'Hours', value, local);
      }
    },
    {
      pattern: /mm/,
      regexp: "\\d\\d",
      fn: function(date, value) {
        setDatePart(date, 'Minutes', value, local);
      }
    },
    {
      pattern: /ss/,
      regexp: "\\d\\d",
      fn: function(date, value) {
        setDatePart(date, 'Seconds', value, local);
      }
    },
    {
      pattern: /SSS/,
      regexp: "\\d\\d\\d",
      fn: function(date, value) {
        setDatePart(date, 'Milliseconds', value, local);
      }
    },
    {
      pattern: /O/,
      regexp: "[+-]\\d{1,2}:?\\d{2}?|Z",
      fn: function(date, value) {
        if (value === "Z") {
          value = 0;
        }
        else {
          value = value.replace(":", "");
        }
        var offset = Math.abs(value);
        var timezoneOffset = (value > 0 ? -1 :  1 ) * ((offset % 100) + Math.floor(offset / 100) * 60);
        // Per ISO8601 standard: UTC = local time - offset
        //
        // For example, 2000-01-01T01:00:00-0700
        //   local time: 2000-01-01T01:00:00
        //   ==> UTC   : 2000-01-01T08:00:00 ( 01 - (-7) = 8 )
        //
        // To make it even more confusing, the date.getTimezoneOffset() is
        // opposite sign of offset string in the ISO8601 standard.  So if offset
        // is '-0700' the getTimezoneOffset() would be (+)420. The line above
        // calculates timezoneOffset to matche Javascript's behavior.
        //
        // The date/time of the input is actually the local time, so the date
        // object that was constructed is actually local time even thought the
        // UTC setters are used.  This means the date object's internal UTC
        // representation was wrong.  It needs to be fixed by substracting the
        // offset (or adding the offset minutes as they are opposite sign).
        //
        // Note: the time zone has to be processed after all other fields are
        // set.  The result would be incorrect if the offset was calculated
        // first then overriden by the other filed setters.
        date.setUTCMinutes(date.getUTCMinutes() + timezoneOffset);
      }
    }
  ];

  var parsedPattern = matchers.reduce(
    function(p, m) {
      if (m.pattern.test(p.regexp)) {
        m.index = p.regexp.match(m.pattern).index;
        p.regexp = p.regexp.replace(m.pattern, "(" + m.regexp + ")");
      } else {
        m.index = -1;
      }
      return p;
    },
    { regexp: pattern, index: [] }
  );

  var dateFns = matchers.filter(function(m) {
    return m.index > -1;
  });
  dateFns.sort(function(a, b) {
    return a.index - b.index;
  });

  var matcher = new RegExp(parsedPattern.regexp);
  var matches = matcher.exec(str);
  if (matches) {
    var date = missingValuesDate || module.exports.now();
    dateFns.forEach(function(f, i) {
      f.fn(date, matches[i + 1]);
    });

    return date;
  }

  throw new Error(
    "String '" + str + "' could not be parsed as '" + pattern + "'"
  );
}

function parse(pattern, str, missingValuesDate) {
  if (!pattern) {
    throw new Error("pattern must be supplied");
  }

  return extractDateParts(pattern, str, missingValuesDate);
}

/**
 * Used for testing - replace this function with a fixed date.
 */
function now() {
  return new Date();
}

module.exports = asString;
module.exports.asString = asString;
module.exports.parse = parse;
module.exports.now = now;
module.exports.ISO8601_FORMAT = "yyyy-MM-ddThh:mm:ss.SSS";
module.exports.ISO8601_WITH_TZ_OFFSET_FORMAT = "yyyy-MM-ddThh:mm:ss.SSSO";
module.exports.DATETIME_FORMAT = "dd MM yyyy hh:mm:ss.SSS";
module.exports.ABSOLUTETIME_FORMAT = "hh:mm:ss.SSS";


/***/ }),

/***/ 28222:
/***/ ((module, exports, __nccwpck_require__) => {

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = __nccwpck_require__(46243)(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};


/***/ }),

/***/ 46243:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = __nccwpck_require__(80900);
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;
		let namespacesCache;
		let enabledCache;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => {
				if (enableOverride !== null) {
					return enableOverride;
				}
				if (namespacesCache !== createDebug.namespaces) {
					namespacesCache = createDebug.namespaces;
					enabledCache = createDebug.enabled(namespace);
				}

				return enabledCache;
			},
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);
		createDebug.namespaces = namespaces;

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;


/***/ }),

/***/ 38237:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = __nccwpck_require__(28222);
} else {
	module.exports = __nccwpck_require__(35332);
}


/***/ }),

/***/ 35332:
/***/ ((module, exports, __nccwpck_require__) => {

/**
 * Module dependencies.
 */

const tty = __nccwpck_require__(76224);
const util = __nccwpck_require__(73837);

/**
 * This is the Node.js implementation of `debug()`.
 */

exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.destroy = util.deprecate(
	() => {},
	'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
);

/**
 * Colors.
 */

exports.colors = [6, 2, 3, 4, 5, 1];

try {
	// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)
	// eslint-disable-next-line import/no-extraneous-dependencies
	const supportsColor = __nccwpck_require__(59318);

	if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
		exports.colors = [
			20,
			21,
			26,
			27,
			32,
			33,
			38,
			39,
			40,
			41,
			42,
			43,
			44,
			45,
			56,
			57,
			62,
			63,
			68,
			69,
			74,
			75,
			76,
			77,
			78,
			79,
			80,
			81,
			92,
			93,
			98,
			99,
			112,
			113,
			128,
			129,
			134,
			135,
			148,
			149,
			160,
			161,
			162,
			163,
			164,
			165,
			166,
			167,
			168,
			169,
			170,
			171,
			172,
			173,
			178,
			179,
			184,
			185,
			196,
			197,
			198,
			199,
			200,
			201,
			202,
			203,
			204,
			205,
			206,
			207,
			208,
			209,
			214,
			215,
			220,
			221
		];
	}
} catch (error) {
	// Swallow - we only care if `supports-color` is available; it doesn't have to be.
}

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(key => {
	return /^debug_/i.test(key);
}).reduce((obj, key) => {
	// Camel-case
	const prop = key
		.substring(6)
		.toLowerCase()
		.replace(/_([a-z])/g, (_, k) => {
			return k.toUpperCase();
		});

	// Coerce string value into JS value
	let val = process.env[key];
	if (/^(yes|on|true|enabled)$/i.test(val)) {
		val = true;
	} else if (/^(no|off|false|disabled)$/i.test(val)) {
		val = false;
	} else if (val === 'null') {
		val = null;
	} else {
		val = Number(val);
	}

	obj[prop] = val;
	return obj;
}, {});

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
	return 'colors' in exports.inspectOpts ?
		Boolean(exports.inspectOpts.colors) :
		tty.isatty(process.stderr.fd);
}

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	const {namespace: name, useColors} = this;

	if (useColors) {
		const c = this.color;
		const colorCode = '\u001B[3' + (c < 8 ? c : '8;5;' + c);
		const prefix = `  ${colorCode};1m${name} \u001B[0m`;

		args[0] = prefix + args[0].split('\n').join('\n' + prefix);
		args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\u001B[0m');
	} else {
		args[0] = getDate() + name + ' ' + args[0];
	}
}

function getDate() {
	if (exports.inspectOpts.hideDate) {
		return '';
	}
	return new Date().toISOString() + ' ';
}

/**
 * Invokes `util.format()` with the specified arguments and writes to stderr.
 */

function log(...args) {
	return process.stderr.write(util.format(...args) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	if (namespaces) {
		process.env.DEBUG = namespaces;
	} else {
		// If you set a process.env field to null or undefined, it gets cast to the
		// string 'null' or 'undefined'. Just delete instead.
		delete process.env.DEBUG;
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
	return process.env.DEBUG;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init(debug) {
	debug.inspectOpts = {};

	const keys = Object.keys(exports.inspectOpts);
	for (let i = 0; i < keys.length; i++) {
		debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
	}
}

module.exports = __nccwpck_require__(46243)(exports);

const {formatters} = module.exports;

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

formatters.o = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts)
		.split('\n')
		.map(str => str.trim())
		.join(' ');
};

/**
 * Map %O to `util.inspect()`, allowing multiple lines if needed.
 */

formatters.O = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts);
};


/***/ }),

/***/ 31133:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var debug;

module.exports = function () {
  if (!debug) {
    try {
      /* eslint global-require: off */
      debug = __nccwpck_require__(38237)("follow-redirects");
    }
    catch (error) { /* */ }
    if (typeof debug !== "function") {
      debug = function () { /* */ };
    }
  }
  debug.apply(null, arguments);
};


/***/ }),

/***/ 67707:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var url = __nccwpck_require__(57310);
var URL = url.URL;
var http = __nccwpck_require__(13685);
var https = __nccwpck_require__(95687);
var Writable = (__nccwpck_require__(12781).Writable);
var assert = __nccwpck_require__(39491);
var debug = __nccwpck_require__(31133);

// Create handlers that pass events from native requests
var events = ["abort", "aborted", "connect", "error", "socket", "timeout"];
var eventHandlers = Object.create(null);
events.forEach(function (event) {
  eventHandlers[event] = function (arg1, arg2, arg3) {
    this._redirectable.emit(event, arg1, arg2, arg3);
  };
});

// Error types with codes
var RedirectionError = createErrorType(
  "ERR_FR_REDIRECTION_FAILURE",
  "Redirected request failed"
);
var TooManyRedirectsError = createErrorType(
  "ERR_FR_TOO_MANY_REDIRECTS",
  "Maximum number of redirects exceeded"
);
var MaxBodyLengthExceededError = createErrorType(
  "ERR_FR_MAX_BODY_LENGTH_EXCEEDED",
  "Request body larger than maxBodyLength limit"
);
var WriteAfterEndError = createErrorType(
  "ERR_STREAM_WRITE_AFTER_END",
  "write after end"
);

// An HTTP(S) request that can be redirected
function RedirectableRequest(options, responseCallback) {
  // Initialize the request
  Writable.call(this);
  this._sanitizeOptions(options);
  this._options = options;
  this._ended = false;
  this._ending = false;
  this._redirectCount = 0;
  this._redirects = [];
  this._requestBodyLength = 0;
  this._requestBodyBuffers = [];

  // Attach a callback if passed
  if (responseCallback) {
    this.on("response", responseCallback);
  }

  // React to responses of native requests
  var self = this;
  this._onNativeResponse = function (response) {
    self._processResponse(response);
  };

  // Perform the first request
  this._performRequest();
}
RedirectableRequest.prototype = Object.create(Writable.prototype);

RedirectableRequest.prototype.abort = function () {
  abortRequest(this._currentRequest);
  this.emit("abort");
};

// Writes buffered data to the current native request
RedirectableRequest.prototype.write = function (data, encoding, callback) {
  // Writing is not allowed if end has been called
  if (this._ending) {
    throw new WriteAfterEndError();
  }

  // Validate input and shift parameters if necessary
  if (!(typeof data === "string" || typeof data === "object" && ("length" in data))) {
    throw new TypeError("data should be a string, Buffer or Uint8Array");
  }
  if (typeof encoding === "function") {
    callback = encoding;
    encoding = null;
  }

  // Ignore empty buffers, since writing them doesn't invoke the callback
  // https://github.com/nodejs/node/issues/22066
  if (data.length === 0) {
    if (callback) {
      callback();
    }
    return;
  }
  // Only write when we don't exceed the maximum body length
  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
    this._requestBodyLength += data.length;
    this._requestBodyBuffers.push({ data: data, encoding: encoding });
    this._currentRequest.write(data, encoding, callback);
  }
  // Error when we exceed the maximum body length
  else {
    this.emit("error", new MaxBodyLengthExceededError());
    this.abort();
  }
};

// Ends the current native request
RedirectableRequest.prototype.end = function (data, encoding, callback) {
  // Shift parameters if necessary
  if (typeof data === "function") {
    callback = data;
    data = encoding = null;
  }
  else if (typeof encoding === "function") {
    callback = encoding;
    encoding = null;
  }

  // Write data if needed and end
  if (!data) {
    this._ended = this._ending = true;
    this._currentRequest.end(null, null, callback);
  }
  else {
    var self = this;
    var currentRequest = this._currentRequest;
    this.write(data, encoding, function () {
      self._ended = true;
      currentRequest.end(null, null, callback);
    });
    this._ending = true;
  }
};

// Sets a header value on the current native request
RedirectableRequest.prototype.setHeader = function (name, value) {
  this._options.headers[name] = value;
  this._currentRequest.setHeader(name, value);
};

// Clears a header value on the current native request
RedirectableRequest.prototype.removeHeader = function (name) {
  delete this._options.headers[name];
  this._currentRequest.removeHeader(name);
};

// Global timeout for all underlying requests
RedirectableRequest.prototype.setTimeout = function (msecs, callback) {
  var self = this;

  // Destroys the socket on timeout
  function destroyOnTimeout(socket) {
    socket.setTimeout(msecs);
    socket.removeListener("timeout", socket.destroy);
    socket.addListener("timeout", socket.destroy);
  }

  // Sets up a timer to trigger a timeout event
  function startTimer(socket) {
    if (self._timeout) {
      clearTimeout(self._timeout);
    }
    self._timeout = setTimeout(function () {
      self.emit("timeout");
      clearTimer();
    }, msecs);
    destroyOnTimeout(socket);
  }

  // Stops a timeout from triggering
  function clearTimer() {
    // Clear the timeout
    if (self._timeout) {
      clearTimeout(self._timeout);
      self._timeout = null;
    }

    // Clean up all attached listeners
    self.removeListener("abort", clearTimer);
    self.removeListener("error", clearTimer);
    self.removeListener("response", clearTimer);
    if (callback) {
      self.removeListener("timeout", callback);
    }
    if (!self.socket) {
      self._currentRequest.removeListener("socket", startTimer);
    }
  }

  // Attach callback if passed
  if (callback) {
    this.on("timeout", callback);
  }

  // Start the timer if or when the socket is opened
  if (this.socket) {
    startTimer(this.socket);
  }
  else {
    this._currentRequest.once("socket", startTimer);
  }

  // Clean up on events
  this.on("socket", destroyOnTimeout);
  this.on("abort", clearTimer);
  this.on("error", clearTimer);
  this.on("response", clearTimer);

  return this;
};

// Proxy all other public ClientRequest methods
[
  "flushHeaders", "getHeader",
  "setNoDelay", "setSocketKeepAlive",
].forEach(function (method) {
  RedirectableRequest.prototype[method] = function (a, b) {
    return this._currentRequest[method](a, b);
  };
});

// Proxy all public ClientRequest properties
["aborted", "connection", "socket"].forEach(function (property) {
  Object.defineProperty(RedirectableRequest.prototype, property, {
    get: function () { return this._currentRequest[property]; },
  });
});

RedirectableRequest.prototype._sanitizeOptions = function (options) {
  // Ensure headers are always present
  if (!options.headers) {
    options.headers = {};
  }

  // Since http.request treats host as an alias of hostname,
  // but the url module interprets host as hostname plus port,
  // eliminate the host property to avoid confusion.
  if (options.host) {
    // Use hostname if set, because it has precedence
    if (!options.hostname) {
      options.hostname = options.host;
    }
    delete options.host;
  }

  // Complete the URL object when necessary
  if (!options.pathname && options.path) {
    var searchPos = options.path.indexOf("?");
    if (searchPos < 0) {
      options.pathname = options.path;
    }
    else {
      options.pathname = options.path.substring(0, searchPos);
      options.search = options.path.substring(searchPos);
    }
  }
};


// Executes the next native request (initial or redirect)
RedirectableRequest.prototype._performRequest = function () {
  // Load the native protocol
  var protocol = this._options.protocol;
  var nativeProtocol = this._options.nativeProtocols[protocol];
  if (!nativeProtocol) {
    this.emit("error", new TypeError("Unsupported protocol " + protocol));
    return;
  }

  // If specified, use the agent corresponding to the protocol
  // (HTTP and HTTPS use different types of agents)
  if (this._options.agents) {
    var scheme = protocol.slice(0, -1);
    this._options.agent = this._options.agents[scheme];
  }

  // Create the native request and set up its event handlers
  var request = this._currentRequest =
        nativeProtocol.request(this._options, this._onNativeResponse);
  request._redirectable = this;
  for (var event of events) {
    request.on(event, eventHandlers[event]);
  }

  // RFC7230§5.3.1: When making a request directly to an origin server, […]
  // a client MUST send only the absolute path […] as the request-target.
  this._currentUrl = /^\//.test(this._options.path) ?
    url.format(this._options) :
    // When making a request to a proxy, […]
    // a client MUST send the target URI in absolute-form […].
    this._currentUrl = this._options.path;

  // End a redirected request
  // (The first request must be ended explicitly with RedirectableRequest#end)
  if (this._isRedirect) {
    // Write the request entity and end
    var i = 0;
    var self = this;
    var buffers = this._requestBodyBuffers;
    (function writeNext(error) {
      // Only write if this request has not been redirected yet
      /* istanbul ignore else */
      if (request === self._currentRequest) {
        // Report any write errors
        /* istanbul ignore if */
        if (error) {
          self.emit("error", error);
        }
        // Write the next buffer if there are still left
        else if (i < buffers.length) {
          var buffer = buffers[i++];
          /* istanbul ignore else */
          if (!request.finished) {
            request.write(buffer.data, buffer.encoding, writeNext);
          }
        }
        // End the request if `end` has been called on us
        else if (self._ended) {
          request.end();
        }
      }
    }());
  }
};

// Processes a response from the current native request
RedirectableRequest.prototype._processResponse = function (response) {
  // Store the redirected response
  var statusCode = response.statusCode;
  if (this._options.trackRedirects) {
    this._redirects.push({
      url: this._currentUrl,
      headers: response.headers,
      statusCode: statusCode,
    });
  }

  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates
  // that further action needs to be taken by the user agent in order to
  // fulfill the request. If a Location header field is provided,
  // the user agent MAY automatically redirect its request to the URI
  // referenced by the Location field value,
  // even if the specific status code is not understood.

  // If the response is not a redirect; return it as-is
  var location = response.headers.location;
  if (!location || this._options.followRedirects === false ||
      statusCode < 300 || statusCode >= 400) {
    response.responseUrl = this._currentUrl;
    response.redirects = this._redirects;
    this.emit("response", response);

    // Clean up
    this._requestBodyBuffers = [];
    return;
  }

  // The response is a redirect, so abort the current request
  abortRequest(this._currentRequest);
  // Discard the remainder of the response to avoid waiting for data
  response.destroy();

  // RFC7231§6.4: A client SHOULD detect and intervene
  // in cyclical redirections (i.e., "infinite" redirection loops).
  if (++this._redirectCount > this._options.maxRedirects) {
    this.emit("error", new TooManyRedirectsError());
    return;
  }

  // Store the request headers if applicable
  var requestHeaders;
  var beforeRedirect = this._options.beforeRedirect;
  if (beforeRedirect) {
    requestHeaders = Object.assign({
      // The Host header was set by nativeProtocol.request
      Host: response.req.getHeader("host"),
    }, this._options.headers);
  }

  // RFC7231§6.4: Automatic redirection needs to done with
  // care for methods not known to be safe, […]
  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change
  // the request method from POST to GET for the subsequent request.
  var method = this._options.method;
  if ((statusCode === 301 || statusCode === 302) && this._options.method === "POST" ||
      // RFC7231§6.4.4: The 303 (See Other) status code indicates that
      // the server is redirecting the user agent to a different resource […]
      // A user agent can perform a retrieval request targeting that URI
      // (a GET or HEAD request if using HTTP) […]
      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {
    this._options.method = "GET";
    // Drop a possible entity and headers related to it
    this._requestBodyBuffers = [];
    removeMatchingHeaders(/^content-/i, this._options.headers);
  }

  // Drop the Host header, as the redirect might lead to a different host
  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);

  // If the redirect is relative, carry over the host of the last request
  var currentUrlParts = url.parse(this._currentUrl);
  var currentHost = currentHostHeader || currentUrlParts.host;
  var currentUrl = /^\w+:/.test(location) ? this._currentUrl :
    url.format(Object.assign(currentUrlParts, { host: currentHost }));

  // Determine the URL of the redirection
  var redirectUrl;
  try {
    redirectUrl = url.resolve(currentUrl, location);
  }
  catch (cause) {
    this.emit("error", new RedirectionError(cause));
    return;
  }

  // Create the redirected request
  debug("redirecting to", redirectUrl);
  this._isRedirect = true;
  var redirectUrlParts = url.parse(redirectUrl);
  Object.assign(this._options, redirectUrlParts);

  // Drop confidential headers when redirecting to a less secure protocol
  // or to a different domain that is not a superdomain
  if (redirectUrlParts.protocol !== currentUrlParts.protocol &&
     redirectUrlParts.protocol !== "https:" ||
     redirectUrlParts.host !== currentHost &&
     !isSubdomain(redirectUrlParts.host, currentHost)) {
    removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);
  }

  // Evaluate the beforeRedirect callback
  if (typeof beforeRedirect === "function") {
    var responseDetails = {
      headers: response.headers,
      statusCode: statusCode,
    };
    var requestDetails = {
      url: currentUrl,
      method: method,
      headers: requestHeaders,
    };
    try {
      beforeRedirect(this._options, responseDetails, requestDetails);
    }
    catch (err) {
      this.emit("error", err);
      return;
    }
    this._sanitizeOptions(this._options);
  }

  // Perform the redirected request
  try {
    this._performRequest();
  }
  catch (cause) {
    this.emit("error", new RedirectionError(cause));
  }
};

// Wraps the key/value object of protocols with redirect functionality
function wrap(protocols) {
  // Default settings
  var exports = {
    maxRedirects: 21,
    maxBodyLength: 10 * 1024 * 1024,
  };

  // Wrap each protocol
  var nativeProtocols = {};
  Object.keys(protocols).forEach(function (scheme) {
    var protocol = scheme + ":";
    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);

    // Executes a request, following redirects
    function request(input, options, callback) {
      // Parse parameters
      if (typeof input === "string") {
        var urlStr = input;
        try {
          input = urlToOptions(new URL(urlStr));
        }
        catch (err) {
          /* istanbul ignore next */
          input = url.parse(urlStr);
        }
      }
      else if (URL && (input instanceof URL)) {
        input = urlToOptions(input);
      }
      else {
        callback = options;
        options = input;
        input = { protocol: protocol };
      }
      if (typeof options === "function") {
        callback = options;
        options = null;
      }

      // Set defaults
      options = Object.assign({
        maxRedirects: exports.maxRedirects,
        maxBodyLength: exports.maxBodyLength,
      }, input, options);
      options.nativeProtocols = nativeProtocols;

      assert.equal(options.protocol, protocol, "protocol mismatch");
      debug("options", options);
      return new RedirectableRequest(options, callback);
    }

    // Executes a GET request, following redirects
    function get(input, options, callback) {
      var wrappedRequest = wrappedProtocol.request(input, options, callback);
      wrappedRequest.end();
      return wrappedRequest;
    }

    // Expose the properties on the wrapped protocol
    Object.defineProperties(wrappedProtocol, {
      request: { value: request, configurable: true, enumerable: true, writable: true },
      get: { value: get, configurable: true, enumerable: true, writable: true },
    });
  });
  return exports;
}

/* istanbul ignore next */
function noop() { /* empty */ }

// from https://github.com/nodejs/node/blob/master/lib/internal/url.js
function urlToOptions(urlObject) {
  var options = {
    protocol: urlObject.protocol,
    hostname: urlObject.hostname.startsWith("[") ?
      /* istanbul ignore next */
      urlObject.hostname.slice(1, -1) :
      urlObject.hostname,
    hash: urlObject.hash,
    search: urlObject.search,
    pathname: urlObject.pathname,
    path: urlObject.pathname + urlObject.search,
    href: urlObject.href,
  };
  if (urlObject.port !== "") {
    options.port = Number(urlObject.port);
  }
  return options;
}

function removeMatchingHeaders(regex, headers) {
  var lastValue;
  for (var header in headers) {
    if (regex.test(header)) {
      lastValue = headers[header];
      delete headers[header];
    }
  }
  return (lastValue === null || typeof lastValue === "undefined") ?
    undefined : String(lastValue).trim();
}

function createErrorType(code, defaultMessage) {
  function CustomError(cause) {
    Error.captureStackTrace(this, this.constructor);
    if (!cause) {
      this.message = defaultMessage;
    }
    else {
      this.message = defaultMessage + ": " + cause.message;
      this.cause = cause;
    }
  }
  CustomError.prototype = new Error();
  CustomError.prototype.constructor = CustomError;
  CustomError.prototype.name = "Error [" + code + "]";
  CustomError.prototype.code = code;
  return CustomError;
}

function abortRequest(request) {
  for (var event of events) {
    request.removeListener(event, eventHandlers[event]);
  }
  request.on("error", noop);
  request.abort();
}

function isSubdomain(subdomain, domain) {
  const dot = subdomain.length - domain.length - 1;
  return dot > 0 && subdomain[dot] === "." && subdomain.endsWith(domain);
}

// Exports
module.exports = wrap({ http: http, https: https });
module.exports.wrap = wrap;


/***/ }),

/***/ 89618:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(71017)
const mkdirsSync = (__nccwpck_require__(98605).mkdirsSync)
const utimesMillisSync = (__nccwpck_require__(52548).utimesMillisSync)
const stat = __nccwpck_require__(73901)

function copySync (src, dest, opts) {
  if (typeof opts === 'function') {
    opts = { filter: opts }
  }

  opts = opts || {}
  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now
  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber

  // Warn about using preserveTimestamps on 32-bit node
  if (opts.preserveTimestamps && process.arch === 'ia32') {
    process.emitWarning(
      'Using the preserveTimestamps option in 32-bit node is not recommended;\n\n' +
      '\tsee https://github.com/jprichardson/node-fs-extra/issues/269',
      'Warning', 'fs-extra-WARN0002'
    )
  }

  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy', opts)
  stat.checkParentPathsSync(src, srcStat, dest, 'copy')
  return handleFilterAndCopy(destStat, src, dest, opts)
}

function handleFilterAndCopy (destStat, src, dest, opts) {
  if (opts.filter && !opts.filter(src, dest)) return
  const destParent = path.dirname(dest)
  if (!fs.existsSync(destParent)) mkdirsSync(destParent)
  return getStats(destStat, src, dest, opts)
}

function startCopy (destStat, src, dest, opts) {
  if (opts.filter && !opts.filter(src, dest)) return
  return getStats(destStat, src, dest, opts)
}

function getStats (destStat, src, dest, opts) {
  const statSync = opts.dereference ? fs.statSync : fs.lstatSync
  const srcStat = statSync(src)

  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)
  else if (srcStat.isFile() ||
           srcStat.isCharacterDevice() ||
           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)
  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)
  else if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`)
  else if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`)
  throw new Error(`Unknown file: ${src}`)
}

function onFile (srcStat, destStat, src, dest, opts) {
  if (!destStat) return copyFile(srcStat, src, dest, opts)
  return mayCopyFile(srcStat, src, dest, opts)
}

function mayCopyFile (srcStat, src, dest, opts) {
  if (opts.overwrite) {
    fs.unlinkSync(dest)
    return copyFile(srcStat, src, dest, opts)
  } else if (opts.errorOnExist) {
    throw new Error(`'${dest}' already exists`)
  }
}

function copyFile (srcStat, src, dest, opts) {
  fs.copyFileSync(src, dest)
  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest)
  return setDestMode(dest, srcStat.mode)
}

function handleTimestamps (srcMode, src, dest) {
  // Make sure the file is writable before setting the timestamp
  // otherwise open fails with EPERM when invoked with 'r+'
  // (through utimes call)
  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode)
  return setDestTimestamps(src, dest)
}

function fileIsNotWritable (srcMode) {
  return (srcMode & 0o200) === 0
}

function makeFileWritable (dest, srcMode) {
  return setDestMode(dest, srcMode | 0o200)
}

function setDestMode (dest, srcMode) {
  return fs.chmodSync(dest, srcMode)
}

function setDestTimestamps (src, dest) {
  // The initial srcStat.atime cannot be trusted
  // because it is modified by the read(2) system call
  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)
  const updatedSrcStat = fs.statSync(src)
  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime)
}

function onDir (srcStat, destStat, src, dest, opts) {
  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts)
  return copyDir(src, dest, opts)
}

function mkDirAndCopy (srcMode, src, dest, opts) {
  fs.mkdirSync(dest)
  copyDir(src, dest, opts)
  return setDestMode(dest, srcMode)
}

function copyDir (src, dest, opts) {
  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))
}

function copyDirItem (item, src, dest, opts) {
  const srcItem = path.join(src, item)
  const destItem = path.join(dest, item)
  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy', opts)
  return startCopy(destStat, srcItem, destItem, opts)
}

function onLink (destStat, src, dest, opts) {
  let resolvedSrc = fs.readlinkSync(src)
  if (opts.dereference) {
    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)
  }

  if (!destStat) {
    return fs.symlinkSync(resolvedSrc, dest)
  } else {
    let resolvedDest
    try {
      resolvedDest = fs.readlinkSync(dest)
    } catch (err) {
      // dest exists and is a regular file or directory,
      // Windows may throw UNKNOWN error. If dest already exists,
      // fs throws error anyway, so no need to guard against it here.
      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)
      throw err
    }
    if (opts.dereference) {
      resolvedDest = path.resolve(process.cwd(), resolvedDest)
    }
    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {
      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)
    }

    // prevent copy if src is a subdir of dest since unlinking
    // dest in this case would result in removing src contents
    // and therefore a broken symlink would be created.
    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {
      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)
    }
    return copyLink(resolvedSrc, dest)
  }
}

function copyLink (resolvedSrc, dest) {
  fs.unlinkSync(dest)
  return fs.symlinkSync(resolvedSrc, dest)
}

module.exports = copySync


/***/ }),

/***/ 38834:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(71017)
const mkdirs = (__nccwpck_require__(98605).mkdirs)
const pathExists = (__nccwpck_require__(43835).pathExists)
const utimesMillis = (__nccwpck_require__(52548).utimesMillis)
const stat = __nccwpck_require__(73901)

function copy (src, dest, opts, cb) {
  if (typeof opts === 'function' && !cb) {
    cb = opts
    opts = {}
  } else if (typeof opts === 'function') {
    opts = { filter: opts }
  }

  cb = cb || function () {}
  opts = opts || {}

  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now
  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber

  // Warn about using preserveTimestamps on 32-bit node
  if (opts.preserveTimestamps && process.arch === 'ia32') {
    process.emitWarning(
      'Using the preserveTimestamps option in 32-bit node is not recommended;\n\n' +
      '\tsee https://github.com/jprichardson/node-fs-extra/issues/269',
      'Warning', 'fs-extra-WARN0001'
    )
  }

  stat.checkPaths(src, dest, 'copy', opts, (err, stats) => {
    if (err) return cb(err)
    const { srcStat, destStat } = stats
    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {
      if (err) return cb(err)
      if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)
      return checkParentDir(destStat, src, dest, opts, cb)
    })
  })
}

function checkParentDir (destStat, src, dest, opts, cb) {
  const destParent = path.dirname(dest)
  pathExists(destParent, (err, dirExists) => {
    if (err) return cb(err)
    if (dirExists) return getStats(destStat, src, dest, opts, cb)
    mkdirs(destParent, err => {
      if (err) return cb(err)
      return getStats(destStat, src, dest, opts, cb)
    })
  })
}

function handleFilter (onInclude, destStat, src, dest, opts, cb) {
  Promise.resolve(opts.filter(src, dest)).then(include => {
    if (include) return onInclude(destStat, src, dest, opts, cb)
    return cb()
  }, error => cb(error))
}

function startCopy (destStat, src, dest, opts, cb) {
  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)
  return getStats(destStat, src, dest, opts, cb)
}

function getStats (destStat, src, dest, opts, cb) {
  const stat = opts.dereference ? fs.stat : fs.lstat
  stat(src, (err, srcStat) => {
    if (err) return cb(err)

    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)
    else if (srcStat.isFile() ||
             srcStat.isCharacterDevice() ||
             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)
    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)
    else if (srcStat.isSocket()) return cb(new Error(`Cannot copy a socket file: ${src}`))
    else if (srcStat.isFIFO()) return cb(new Error(`Cannot copy a FIFO pipe: ${src}`))
    return cb(new Error(`Unknown file: ${src}`))
  })
}

function onFile (srcStat, destStat, src, dest, opts, cb) {
  if (!destStat) return copyFile(srcStat, src, dest, opts, cb)
  return mayCopyFile(srcStat, src, dest, opts, cb)
}

function mayCopyFile (srcStat, src, dest, opts, cb) {
  if (opts.overwrite) {
    fs.unlink(dest, err => {
      if (err) return cb(err)
      return copyFile(srcStat, src, dest, opts, cb)
    })
  } else if (opts.errorOnExist) {
    return cb(new Error(`'${dest}' already exists`))
  } else return cb()
}

function copyFile (srcStat, src, dest, opts, cb) {
  fs.copyFile(src, dest, err => {
    if (err) return cb(err)
    if (opts.preserveTimestamps) return handleTimestampsAndMode(srcStat.mode, src, dest, cb)
    return setDestMode(dest, srcStat.mode, cb)
  })
}

function handleTimestampsAndMode (srcMode, src, dest, cb) {
  // Make sure the file is writable before setting the timestamp
  // otherwise open fails with EPERM when invoked with 'r+'
  // (through utimes call)
  if (fileIsNotWritable(srcMode)) {
    return makeFileWritable(dest, srcMode, err => {
      if (err) return cb(err)
      return setDestTimestampsAndMode(srcMode, src, dest, cb)
    })
  }
  return setDestTimestampsAndMode(srcMode, src, dest, cb)
}

function fileIsNotWritable (srcMode) {
  return (srcMode & 0o200) === 0
}

function makeFileWritable (dest, srcMode, cb) {
  return setDestMode(dest, srcMode | 0o200, cb)
}

function setDestTimestampsAndMode (srcMode, src, dest, cb) {
  setDestTimestamps(src, dest, err => {
    if (err) return cb(err)
    return setDestMode(dest, srcMode, cb)
  })
}

function setDestMode (dest, srcMode, cb) {
  return fs.chmod(dest, srcMode, cb)
}

function setDestTimestamps (src, dest, cb) {
  // The initial srcStat.atime cannot be trusted
  // because it is modified by the read(2) system call
  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)
  fs.stat(src, (err, updatedSrcStat) => {
    if (err) return cb(err)
    return utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime, cb)
  })
}

function onDir (srcStat, destStat, src, dest, opts, cb) {
  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts, cb)
  return copyDir(src, dest, opts, cb)
}

function mkDirAndCopy (srcMode, src, dest, opts, cb) {
  fs.mkdir(dest, err => {
    if (err) return cb(err)
    copyDir(src, dest, opts, err => {
      if (err) return cb(err)
      return setDestMode(dest, srcMode, cb)
    })
  })
}

function copyDir (src, dest, opts, cb) {
  fs.readdir(src, (err, items) => {
    if (err) return cb(err)
    return copyDirItems(items, src, dest, opts, cb)
  })
}

function copyDirItems (items, src, dest, opts, cb) {
  const item = items.pop()
  if (!item) return cb()
  return copyDirItem(items, item, src, dest, opts, cb)
}

function copyDirItem (items, item, src, dest, opts, cb) {
  const srcItem = path.join(src, item)
  const destItem = path.join(dest, item)
  stat.checkPaths(srcItem, destItem, 'copy', opts, (err, stats) => {
    if (err) return cb(err)
    const { destStat } = stats
    startCopy(destStat, srcItem, destItem, opts, err => {
      if (err) return cb(err)
      return copyDirItems(items, src, dest, opts, cb)
    })
  })
}

function onLink (destStat, src, dest, opts, cb) {
  fs.readlink(src, (err, resolvedSrc) => {
    if (err) return cb(err)
    if (opts.dereference) {
      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)
    }

    if (!destStat) {
      return fs.symlink(resolvedSrc, dest, cb)
    } else {
      fs.readlink(dest, (err, resolvedDest) => {
        if (err) {
          // dest exists and is a regular file or directory,
          // Windows may throw UNKNOWN error. If dest already exists,
          // fs throws error anyway, so no need to guard against it here.
          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)
          return cb(err)
        }
        if (opts.dereference) {
          resolvedDest = path.resolve(process.cwd(), resolvedDest)
        }
        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {
          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))
        }

        // do not copy if src is a subdir of dest since unlinking
        // dest in this case would result in removing src contents
        // and therefore a broken symlink would be created.
        if (destStat.isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {
          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))
        }
        return copyLink(resolvedSrc, dest, cb)
      })
    }
  })
}

function copyLink (resolvedSrc, dest, cb) {
  fs.unlink(dest, err => {
    if (err) return cb(err)
    return fs.symlink(resolvedSrc, dest, cb)
  })
}

module.exports = copy


/***/ }),

/***/ 61335:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = (__nccwpck_require__(9046).fromCallback)
module.exports = {
  copy: u(__nccwpck_require__(38834)),
  copySync: __nccwpck_require__(89618)
}


/***/ }),

/***/ 96970:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = (__nccwpck_require__(9046).fromPromise)
const fs = __nccwpck_require__(61176)
const path = __nccwpck_require__(71017)
const mkdir = __nccwpck_require__(98605)
const remove = __nccwpck_require__(47357)

const emptyDir = u(async function emptyDir (dir) {
  let items
  try {
    items = await fs.readdir(dir)
  } catch {
    return mkdir.mkdirs(dir)
  }

  return Promise.all(items.map(item => remove.remove(path.join(dir, item))))
})

function emptyDirSync (dir) {
  let items
  try {
    items = fs.readdirSync(dir)
  } catch {
    return mkdir.mkdirsSync(dir)
  }

  items.forEach(item => {
    item = path.join(dir, item)
    remove.removeSync(item)
  })
}

module.exports = {
  emptyDirSync,
  emptydirSync: emptyDirSync,
  emptyDir,
  emptydir: emptyDir
}


/***/ }),

/***/ 2164:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = (__nccwpck_require__(9046).fromCallback)
const path = __nccwpck_require__(71017)
const fs = __nccwpck_require__(77758)
const mkdir = __nccwpck_require__(98605)

function createFile (file, callback) {
  function makeFile () {
    fs.writeFile(file, '', err => {
      if (err) return callback(err)
      callback()
    })
  }

  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err
    if (!err && stats.isFile()) return callback()
    const dir = path.dirname(file)
    fs.stat(dir, (err, stats) => {
      if (err) {
        // if the directory doesn't exist, make it
        if (err.code === 'ENOENT') {
          return mkdir.mkdirs(dir, err => {
            if (err) return callback(err)
            makeFile()
          })
        }
        return callback(err)
      }

      if (stats.isDirectory()) makeFile()
      else {
        // parent is not a directory
        // This is just to cause an internal ENOTDIR error to be thrown
        fs.readdir(dir, err => {
          if (err) return callback(err)
        })
      }
    })
  })
}

function createFileSync (file) {
  let stats
  try {
    stats = fs.statSync(file)
  } catch {}
  if (stats && stats.isFile()) return

  const dir = path.dirname(file)
  try {
    if (!fs.statSync(dir).isDirectory()) {
      // parent is not a directory
      // This is just to cause an internal ENOTDIR error to be thrown
      fs.readdirSync(dir)
    }
  } catch (err) {
    // If the stat call above failed because the directory doesn't exist, create it
    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir)
    else throw err
  }

  fs.writeFileSync(file, '')
}

module.exports = {
  createFile: u(createFile),
  createFileSync
}


/***/ }),

/***/ 40055:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { createFile, createFileSync } = __nccwpck_require__(2164)
const { createLink, createLinkSync } = __nccwpck_require__(53797)
const { createSymlink, createSymlinkSync } = __nccwpck_require__(72549)

module.exports = {
  // file
  createFile,
  createFileSync,
  ensureFile: createFile,
  ensureFileSync: createFileSync,
  // link
  createLink,
  createLinkSync,
  ensureLink: createLink,
  ensureLinkSync: createLinkSync,
  // symlink
  createSymlink,
  createSymlinkSync,
  ensureSymlink: createSymlink,
  ensureSymlinkSync: createSymlinkSync
}


/***/ }),

/***/ 53797:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = (__nccwpck_require__(9046).fromCallback)
const path = __nccwpck_require__(71017)
const fs = __nccwpck_require__(77758)
const mkdir = __nccwpck_require__(98605)
const pathExists = (__nccwpck_require__(43835).pathExists)
const { areIdentical } = __nccwpck_require__(73901)

function createLink (srcpath, dstpath, callback) {
  function makeLink (srcpath, dstpath) {
    fs.link(srcpath, dstpath, err => {
      if (err) return callback(err)
      callback(null)
    })
  }

  fs.lstat(dstpath, (_, dstStat) => {
    fs.lstat(srcpath, (err, srcStat) => {
      if (err) {
        err.message = err.message.replace('lstat', 'ensureLink')
        return callback(err)
      }
      if (dstStat && areIdentical(srcStat, dstStat)) return callback(null)

      const dir = path.dirname(dstpath)
      pathExists(dir, (err, dirExists) => {
        if (err) return callback(err)
        if (dirExists) return makeLink(srcpath, dstpath)
        mkdir.mkdirs(dir, err => {
          if (err) return callback(err)
          makeLink(srcpath, dstpath)
        })
      })
    })
  })
}

function createLinkSync (srcpath, dstpath) {
  let dstStat
  try {
    dstStat = fs.lstatSync(dstpath)
  } catch {}

  try {
    const srcStat = fs.lstatSync(srcpath)
    if (dstStat && areIdentical(srcStat, dstStat)) return
  } catch (err) {
    err.message = err.message.replace('lstat', 'ensureLink')
    throw err
  }

  const dir = path.dirname(dstpath)
  const dirExists = fs.existsSync(dir)
  if (dirExists) return fs.linkSync(srcpath, dstpath)
  mkdir.mkdirsSync(dir)

  return fs.linkSync(srcpath, dstpath)
}

module.exports = {
  createLink: u(createLink),
  createLinkSync
}


/***/ }),

/***/ 53727:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(71017)
const fs = __nccwpck_require__(77758)
const pathExists = (__nccwpck_require__(43835).pathExists)

/**
 * Function that returns two types of paths, one relative to symlink, and one
 * relative to the current working directory. Checks if path is absolute or
 * relative. If the path is relative, this function checks if the path is
 * relative to symlink or relative to current working directory. This is an
 * initiative to find a smarter `srcpath` to supply when building symlinks.
 * This allows you to determine which path to use out of one of three possible
 * types of source paths. The first is an absolute path. This is detected by
 * `path.isAbsolute()`. When an absolute path is provided, it is checked to
 * see if it exists. If it does it's used, if not an error is returned
 * (callback)/ thrown (sync). The other two options for `srcpath` are a
 * relative url. By default Node's `fs.symlink` works by creating a symlink
 * using `dstpath` and expects the `srcpath` to be relative to the newly
 * created symlink. If you provide a `srcpath` that does not exist on the file
 * system it results in a broken symlink. To minimize this, the function
 * checks to see if the 'relative to symlink' source file exists, and if it
 * does it will use it. If it does not, it checks if there's a file that
 * exists that is relative to the current working directory, if does its used.
 * This preserves the expectations of the original fs.symlink spec and adds
 * the ability to pass in `relative to current working direcotry` paths.
 */

function symlinkPaths (srcpath, dstpath, callback) {
  if (path.isAbsolute(srcpath)) {
    return fs.lstat(srcpath, (err) => {
      if (err) {
        err.message = err.message.replace('lstat', 'ensureSymlink')
        return callback(err)
      }
      return callback(null, {
        toCwd: srcpath,
        toDst: srcpath
      })
    })
  } else {
    const dstdir = path.dirname(dstpath)
    const relativeToDst = path.join(dstdir, srcpath)
    return pathExists(relativeToDst, (err, exists) => {
      if (err) return callback(err)
      if (exists) {
        return callback(null, {
          toCwd: relativeToDst,
          toDst: srcpath
        })
      } else {
        return fs.lstat(srcpath, (err) => {
          if (err) {
            err.message = err.message.replace('lstat', 'ensureSymlink')
            return callback(err)
          }
          return callback(null, {
            toCwd: srcpath,
            toDst: path.relative(dstdir, srcpath)
          })
        })
      }
    })
  }
}

function symlinkPathsSync (srcpath, dstpath) {
  let exists
  if (path.isAbsolute(srcpath)) {
    exists = fs.existsSync(srcpath)
    if (!exists) throw new Error('absolute srcpath does not exist')
    return {
      toCwd: srcpath,
      toDst: srcpath
    }
  } else {
    const dstdir = path.dirname(dstpath)
    const relativeToDst = path.join(dstdir, srcpath)
    exists = fs.existsSync(relativeToDst)
    if (exists) {
      return {
        toCwd: relativeToDst,
        toDst: srcpath
      }
    } else {
      exists = fs.existsSync(srcpath)
      if (!exists) throw new Error('relative srcpath does not exist')
      return {
        toCwd: srcpath,
        toDst: path.relative(dstdir, srcpath)
      }
    }
  }
}

module.exports = {
  symlinkPaths,
  symlinkPathsSync
}


/***/ }),

/***/ 18254:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)

function symlinkType (srcpath, type, callback) {
  callback = (typeof type === 'function') ? type : callback
  type = (typeof type === 'function') ? false : type
  if (type) return callback(null, type)
  fs.lstat(srcpath, (err, stats) => {
    if (err) return callback(null, 'file')
    type = (stats && stats.isDirectory()) ? 'dir' : 'file'
    callback(null, type)
  })
}

function symlinkTypeSync (srcpath, type) {
  let stats

  if (type) return type
  try {
    stats = fs.lstatSync(srcpath)
  } catch {
    return 'file'
  }
  return (stats && stats.isDirectory()) ? 'dir' : 'file'
}

module.exports = {
  symlinkType,
  symlinkTypeSync
}


/***/ }),

/***/ 72549:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = (__nccwpck_require__(9046).fromCallback)
const path = __nccwpck_require__(71017)
const fs = __nccwpck_require__(61176)
const _mkdirs = __nccwpck_require__(98605)
const mkdirs = _mkdirs.mkdirs
const mkdirsSync = _mkdirs.mkdirsSync

const _symlinkPaths = __nccwpck_require__(53727)
const symlinkPaths = _symlinkPaths.symlinkPaths
const symlinkPathsSync = _symlinkPaths.symlinkPathsSync

const _symlinkType = __nccwpck_require__(18254)
const symlinkType = _symlinkType.symlinkType
const symlinkTypeSync = _symlinkType.symlinkTypeSync

const pathExists = (__nccwpck_require__(43835).pathExists)

const { areIdentical } = __nccwpck_require__(73901)

function createSymlink (srcpath, dstpath, type, callback) {
  callback = (typeof type === 'function') ? type : callback
  type = (typeof type === 'function') ? false : type

  fs.lstat(dstpath, (err, stats) => {
    if (!err && stats.isSymbolicLink()) {
      Promise.all([
        fs.stat(srcpath),
        fs.stat(dstpath)
      ]).then(([srcStat, dstStat]) => {
        if (areIdentical(srcStat, dstStat)) return callback(null)
        _createSymlink(srcpath, dstpath, type, callback)
      })
    } else _createSymlink(srcpath, dstpath, type, callback)
  })
}

function _createSymlink (srcpath, dstpath, type, callback) {
  symlinkPaths(srcpath, dstpath, (err, relative) => {
    if (err) return callback(err)
    srcpath = relative.toDst
    symlinkType(relative.toCwd, type, (err, type) => {
      if (err) return callback(err)
      const dir = path.dirname(dstpath)
      pathExists(dir, (err, dirExists) => {
        if (err) return callback(err)
        if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)
        mkdirs(dir, err => {
          if (err) return callback(err)
          fs.symlink(srcpath, dstpath, type, callback)
        })
      })
    })
  })
}

function createSymlinkSync (srcpath, dstpath, type) {
  let stats
  try {
    stats = fs.lstatSync(dstpath)
  } catch {}
  if (stats && stats.isSymbolicLink()) {
    const srcStat = fs.statSync(srcpath)
    const dstStat = fs.statSync(dstpath)
    if (areIdentical(srcStat, dstStat)) return
  }

  const relative = symlinkPathsSync(srcpath, dstpath)
  srcpath = relative.toDst
  type = symlinkTypeSync(relative.toCwd, type)
  const dir = path.dirname(dstpath)
  const exists = fs.existsSync(dir)
  if (exists) return fs.symlinkSync(srcpath, dstpath, type)
  mkdirsSync(dir)
  return fs.symlinkSync(srcpath, dstpath, type)
}

module.exports = {
  createSymlink: u(createSymlink),
  createSymlinkSync
}


/***/ }),

/***/ 61176:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// This is adapted from https://github.com/normalize/mz
// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors
const u = (__nccwpck_require__(9046).fromCallback)
const fs = __nccwpck_require__(77758)

const api = [
  'access',
  'appendFile',
  'chmod',
  'chown',
  'close',
  'copyFile',
  'fchmod',
  'fchown',
  'fdatasync',
  'fstat',
  'fsync',
  'ftruncate',
  'futimes',
  'lchmod',
  'lchown',
  'link',
  'lstat',
  'mkdir',
  'mkdtemp',
  'open',
  'opendir',
  'readdir',
  'readFile',
  'readlink',
  'realpath',
  'rename',
  'rm',
  'rmdir',
  'stat',
  'symlink',
  'truncate',
  'unlink',
  'utimes',
  'writeFile'
].filter(key => {
  // Some commands are not available on some systems. Ex:
  // fs.opendir was added in Node.js v12.12.0
  // fs.rm was added in Node.js v14.14.0
  // fs.lchown is not available on at least some Linux
  return typeof fs[key] === 'function'
})

// Export cloned fs:
Object.assign(exports, fs)

// Universalify async methods:
api.forEach(method => {
  exports[method] = u(fs[method])
})

// We differ from mz/fs in that we still ship the old, broken, fs.exists()
// since we are a drop-in replacement for the native module
exports.exists = function (filename, callback) {
  if (typeof callback === 'function') {
    return fs.exists(filename, callback)
  }
  return new Promise(resolve => {
    return fs.exists(filename, resolve)
  })
}

// fs.read(), fs.write(), & fs.writev() need special treatment due to multiple callback args

exports.read = function (fd, buffer, offset, length, position, callback) {
  if (typeof callback === 'function') {
    return fs.read(fd, buffer, offset, length, position, callback)
  }
  return new Promise((resolve, reject) => {
    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {
      if (err) return reject(err)
      resolve({ bytesRead, buffer })
    })
  })
}

// Function signature can be
// fs.write(fd, buffer[, offset[, length[, position]]], callback)
// OR
// fs.write(fd, string[, position[, encoding]], callback)
// We need to handle both cases, so we use ...args
exports.write = function (fd, buffer, ...args) {
  if (typeof args[args.length - 1] === 'function') {
    return fs.write(fd, buffer, ...args)
  }

  return new Promise((resolve, reject) => {
    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {
      if (err) return reject(err)
      resolve({ bytesWritten, buffer })
    })
  })
}

// fs.writev only available in Node v12.9.0+
if (typeof fs.writev === 'function') {
  // Function signature is
  // s.writev(fd, buffers[, position], callback)
  // We need to handle the optional arg, so we use ...args
  exports.writev = function (fd, buffers, ...args) {
    if (typeof args[args.length - 1] === 'function') {
      return fs.writev(fd, buffers, ...args)
    }

    return new Promise((resolve, reject) => {
      fs.writev(fd, buffers, ...args, (err, bytesWritten, buffers) => {
        if (err) return reject(err)
        resolve({ bytesWritten, buffers })
      })
    })
  }
}

// fs.realpath.native sometimes not available if fs is monkey-patched
if (typeof fs.realpath.native === 'function') {
  exports.realpath.native = u(fs.realpath.native)
} else {
  process.emitWarning(
    'fs.realpath.native is not a function. Is fs being monkey-patched?',
    'Warning', 'fs-extra-WARN0003'
  )
}


/***/ }),

/***/ 5630:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


module.exports = {
  // Export promiseified graceful-fs:
  ...__nccwpck_require__(61176),
  // Export extra methods:
  ...__nccwpck_require__(61335),
  ...__nccwpck_require__(96970),
  ...__nccwpck_require__(40055),
  ...__nccwpck_require__(40213),
  ...__nccwpck_require__(98605),
  ...__nccwpck_require__(41497),
  ...__nccwpck_require__(91832),
  ...__nccwpck_require__(43835),
  ...__nccwpck_require__(47357)
}


/***/ }),

/***/ 40213:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = (__nccwpck_require__(9046).fromPromise)
const jsonFile = __nccwpck_require__(18970)

jsonFile.outputJson = u(__nccwpck_require__(60531))
jsonFile.outputJsonSync = __nccwpck_require__(19421)
// aliases
jsonFile.outputJSON = jsonFile.outputJson
jsonFile.outputJSONSync = jsonFile.outputJsonSync
jsonFile.writeJSON = jsonFile.writeJson
jsonFile.writeJSONSync = jsonFile.writeJsonSync
jsonFile.readJSON = jsonFile.readJson
jsonFile.readJSONSync = jsonFile.readJsonSync

module.exports = jsonFile


/***/ }),

/***/ 18970:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const jsonFile = __nccwpck_require__(26160)

module.exports = {
  // jsonfile exports
  readJson: jsonFile.readFile,
  readJsonSync: jsonFile.readFileSync,
  writeJson: jsonFile.writeFile,
  writeJsonSync: jsonFile.writeFileSync
}


/***/ }),

/***/ 19421:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { stringify } = __nccwpck_require__(35902)
const { outputFileSync } = __nccwpck_require__(91832)

function outputJsonSync (file, data, options) {
  const str = stringify(data, options)

  outputFileSync(file, str, options)
}

module.exports = outputJsonSync


/***/ }),

/***/ 60531:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const { stringify } = __nccwpck_require__(35902)
const { outputFile } = __nccwpck_require__(91832)

async function outputJson (file, data, options = {}) {
  const str = stringify(data, options)

  await outputFile(file, str, options)
}

module.exports = outputJson


/***/ }),

/***/ 98605:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const u = (__nccwpck_require__(9046).fromPromise)
const { makeDir: _makeDir, makeDirSync } = __nccwpck_require__(52751)
const makeDir = u(_makeDir)

module.exports = {
  mkdirs: makeDir,
  mkdirsSync: makeDirSync,
  // alias
  mkdirp: makeDir,
  mkdirpSync: makeDirSync,
  ensureDir: makeDir,
  ensureDirSync: makeDirSync
}


/***/ }),

/***/ 52751:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const fs = __nccwpck_require__(61176)
const { checkPath } = __nccwpck_require__(59907)

const getMode = options => {
  const defaults = { mode: 0o777 }
  if (typeof options === 'number') return options
  return ({ ...defaults, ...options }).mode
}

module.exports.makeDir = async (dir, options) => {
  checkPath(dir)

  return fs.mkdir(dir, {
    mode: getMode(options),
    recursive: true
  })
}

module.exports.makeDirSync = (dir, options) => {
  checkPath(dir)

  return fs.mkdirSync(dir, {
    mode: getMode(options),
    recursive: true
  })
}


/***/ }),

/***/ 59907:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
// Adapted from https://github.com/sindresorhus/make-dir
// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

const path = __nccwpck_require__(71017)

// https://github.com/nodejs/node/issues/8987
// https://github.com/libuv/libuv/pull/1088
module.exports.checkPath = function checkPath (pth) {
  if (process.platform === 'win32') {
    const pathHasInvalidWinCharacters = /[<>:"|?*]/.test(pth.replace(path.parse(pth).root, ''))

    if (pathHasInvalidWinCharacters) {
      const error = new Error(`Path contains invalid characters: ${pth}`)
      error.code = 'EINVAL'
      throw error
    }
  }
}


/***/ }),

/***/ 41497:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = (__nccwpck_require__(9046).fromCallback)
module.exports = {
  move: u(__nccwpck_require__(72231)),
  moveSync: __nccwpck_require__(42047)
}


/***/ }),

/***/ 42047:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(71017)
const copySync = (__nccwpck_require__(61335).copySync)
const removeSync = (__nccwpck_require__(47357).removeSync)
const mkdirpSync = (__nccwpck_require__(98605).mkdirpSync)
const stat = __nccwpck_require__(73901)

function moveSync (src, dest, opts) {
  opts = opts || {}
  const overwrite = opts.overwrite || opts.clobber || false

  const { srcStat, isChangingCase = false } = stat.checkPathsSync(src, dest, 'move', opts)
  stat.checkParentPathsSync(src, srcStat, dest, 'move')
  if (!isParentRoot(dest)) mkdirpSync(path.dirname(dest))
  return doRename(src, dest, overwrite, isChangingCase)
}

function isParentRoot (dest) {
  const parent = path.dirname(dest)
  const parsedPath = path.parse(parent)
  return parsedPath.root === parent
}

function doRename (src, dest, overwrite, isChangingCase) {
  if (isChangingCase) return rename(src, dest, overwrite)
  if (overwrite) {
    removeSync(dest)
    return rename(src, dest, overwrite)
  }
  if (fs.existsSync(dest)) throw new Error('dest already exists.')
  return rename(src, dest, overwrite)
}

function rename (src, dest, overwrite) {
  try {
    fs.renameSync(src, dest)
  } catch (err) {
    if (err.code !== 'EXDEV') throw err
    return moveAcrossDevice(src, dest, overwrite)
  }
}

function moveAcrossDevice (src, dest, overwrite) {
  const opts = {
    overwrite,
    errorOnExist: true
  }
  copySync(src, dest, opts)
  return removeSync(src)
}

module.exports = moveSync


/***/ }),

/***/ 72231:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(71017)
const copy = (__nccwpck_require__(61335).copy)
const remove = (__nccwpck_require__(47357).remove)
const mkdirp = (__nccwpck_require__(98605).mkdirp)
const pathExists = (__nccwpck_require__(43835).pathExists)
const stat = __nccwpck_require__(73901)

function move (src, dest, opts, cb) {
  if (typeof opts === 'function') {
    cb = opts
    opts = {}
  }

  opts = opts || {}

  const overwrite = opts.overwrite || opts.clobber || false

  stat.checkPaths(src, dest, 'move', opts, (err, stats) => {
    if (err) return cb(err)
    const { srcStat, isChangingCase = false } = stats
    stat.checkParentPaths(src, srcStat, dest, 'move', err => {
      if (err) return cb(err)
      if (isParentRoot(dest)) return doRename(src, dest, overwrite, isChangingCase, cb)
      mkdirp(path.dirname(dest), err => {
        if (err) return cb(err)
        return doRename(src, dest, overwrite, isChangingCase, cb)
      })
    })
  })
}

function isParentRoot (dest) {
  const parent = path.dirname(dest)
  const parsedPath = path.parse(parent)
  return parsedPath.root === parent
}

function doRename (src, dest, overwrite, isChangingCase, cb) {
  if (isChangingCase) return rename(src, dest, overwrite, cb)
  if (overwrite) {
    return remove(dest, err => {
      if (err) return cb(err)
      return rename(src, dest, overwrite, cb)
    })
  }
  pathExists(dest, (err, destExists) => {
    if (err) return cb(err)
    if (destExists) return cb(new Error('dest already exists.'))
    return rename(src, dest, overwrite, cb)
  })
}

function rename (src, dest, overwrite, cb) {
  fs.rename(src, dest, err => {
    if (!err) return cb()
    if (err.code !== 'EXDEV') return cb(err)
    return moveAcrossDevice(src, dest, overwrite, cb)
  })
}

function moveAcrossDevice (src, dest, overwrite, cb) {
  const opts = {
    overwrite,
    errorOnExist: true
  }
  copy(src, dest, opts, err => {
    if (err) return cb(err)
    return remove(src, cb)
  })
}

module.exports = move


/***/ }),

/***/ 91832:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = (__nccwpck_require__(9046).fromCallback)
const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(71017)
const mkdir = __nccwpck_require__(98605)
const pathExists = (__nccwpck_require__(43835).pathExists)

function outputFile (file, data, encoding, callback) {
  if (typeof encoding === 'function') {
    callback = encoding
    encoding = 'utf8'
  }

  const dir = path.dirname(file)
  pathExists(dir, (err, itDoes) => {
    if (err) return callback(err)
    if (itDoes) return fs.writeFile(file, data, encoding, callback)

    mkdir.mkdirs(dir, err => {
      if (err) return callback(err)

      fs.writeFile(file, data, encoding, callback)
    })
  })
}

function outputFileSync (file, ...args) {
  const dir = path.dirname(file)
  if (fs.existsSync(dir)) {
    return fs.writeFileSync(file, ...args)
  }
  mkdir.mkdirsSync(dir)
  fs.writeFileSync(file, ...args)
}

module.exports = {
  outputFile: u(outputFile),
  outputFileSync
}


/***/ }),

/***/ 43835:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const u = (__nccwpck_require__(9046).fromPromise)
const fs = __nccwpck_require__(61176)

function pathExists (path) {
  return fs.access(path).then(() => true).catch(() => false)
}

module.exports = {
  pathExists: u(pathExists),
  pathExistsSync: fs.existsSync
}


/***/ }),

/***/ 47357:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const u = (__nccwpck_require__(9046).fromCallback)
const rimraf = __nccwpck_require__(38761)

function remove (path, callback) {
  // Node 14.14.0+
  if (fs.rm) return fs.rm(path, { recursive: true, force: true }, callback)
  rimraf(path, callback)
}

function removeSync (path) {
  // Node 14.14.0+
  if (fs.rmSync) return fs.rmSync(path, { recursive: true, force: true })
  rimraf.sync(path)
}

module.exports = {
  remove: u(remove),
  removeSync
}


/***/ }),

/***/ 38761:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(71017)
const assert = __nccwpck_require__(39491)

const isWindows = (process.platform === 'win32')

function defaults (options) {
  const methods = [
    'unlink',
    'chmod',
    'stat',
    'lstat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(m => {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })

  options.maxBusyTries = options.maxBusyTries || 3
}

function rimraf (p, options, cb) {
  let busyTries = 0

  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  assert(p, 'rimraf: missing path')
  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')
  assert.strictEqual(typeof cb, 'function', 'rimraf: callback function required')
  assert(options, 'rimraf: invalid options argument provided')
  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')

  defaults(options)

  rimraf_(p, options, function CB (er) {
    if (er) {
      if ((er.code === 'EBUSY' || er.code === 'ENOTEMPTY' || er.code === 'EPERM') &&
          busyTries < options.maxBusyTries) {
        busyTries++
        const time = busyTries * 100
        // try again, with the same exact callback as this one.
        return setTimeout(() => rimraf_(p, options, CB), time)
      }

      // already gone
      if (er.code === 'ENOENT') er = null
    }

    cb(er)
  })
}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
function rimraf_ (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // sunos lets the root user unlink directories, which is... weird.
  // so we have to lstat here and make sure it's not a dir.
  options.lstat(p, (er, st) => {
    if (er && er.code === 'ENOENT') {
      return cb(null)
    }

    // Windows can EPERM on stat.  Life is suffering.
    if (er && er.code === 'EPERM' && isWindows) {
      return fixWinEPERM(p, options, er, cb)
    }

    if (st && st.isDirectory()) {
      return rmdir(p, options, er, cb)
    }

    options.unlink(p, er => {
      if (er) {
        if (er.code === 'ENOENT') {
          return cb(null)
        }
        if (er.code === 'EPERM') {
          return (isWindows)
            ? fixWinEPERM(p, options, er, cb)
            : rmdir(p, options, er, cb)
        }
        if (er.code === 'EISDIR') {
          return rmdir(p, options, er, cb)
        }
      }
      return cb(er)
    })
  })
}

function fixWinEPERM (p, options, er, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.chmod(p, 0o666, er2 => {
    if (er2) {
      cb(er2.code === 'ENOENT' ? null : er)
    } else {
      options.stat(p, (er3, stats) => {
        if (er3) {
          cb(er3.code === 'ENOENT' ? null : er)
        } else if (stats.isDirectory()) {
          rmdir(p, options, er, cb)
        } else {
          options.unlink(p, cb)
        }
      })
    }
  })
}

function fixWinEPERMSync (p, options, er) {
  let stats

  assert(p)
  assert(options)

  try {
    options.chmodSync(p, 0o666)
  } catch (er2) {
    if (er2.code === 'ENOENT') {
      return
    } else {
      throw er
    }
  }

  try {
    stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === 'ENOENT') {
      return
    } else {
      throw er
    }
  }

  if (stats.isDirectory()) {
    rmdirSync(p, options, er)
  } else {
    options.unlinkSync(p)
  }
}

function rmdir (p, options, originalEr, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, er => {
    if (er && (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM')) {
      rmkids(p, options, cb)
    } else if (er && er.code === 'ENOTDIR') {
      cb(originalEr)
    } else {
      cb(er)
    }
  })
}

function rmkids (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, (er, files) => {
    if (er) return cb(er)

    let n = files.length
    let errState

    if (n === 0) return options.rmdir(p, cb)

    files.forEach(f => {
      rimraf(path.join(p, f), options, er => {
        if (errState) {
          return
        }
        if (er) return cb(errState = er)
        if (--n === 0) {
          options.rmdir(p, cb)
        }
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
function rimrafSync (p, options) {
  let st

  options = options || {}
  defaults(options)

  assert(p, 'rimraf: missing path')
  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')
  assert(options, 'rimraf: missing options')
  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')

  try {
    st = options.lstatSync(p)
  } catch (er) {
    if (er.code === 'ENOENT') {
      return
    }

    // Windows can EPERM on stat.  Life is suffering.
    if (er.code === 'EPERM' && isWindows) {
      fixWinEPERMSync(p, options, er)
    }
  }

  try {
    // sunos lets the root user unlink directories, which is... weird.
    if (st && st.isDirectory()) {
      rmdirSync(p, options, null)
    } else {
      options.unlinkSync(p)
    }
  } catch (er) {
    if (er.code === 'ENOENT') {
      return
    } else if (er.code === 'EPERM') {
      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
    } else if (er.code !== 'EISDIR') {
      throw er
    }
    rmdirSync(p, options, er)
  }
}

function rmdirSync (p, options, originalEr) {
  assert(p)
  assert(options)

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === 'ENOTDIR') {
      throw originalEr
    } else if (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM') {
      rmkidsSync(p, options)
    } else if (er.code !== 'ENOENT') {
      throw er
    }
  }
}

function rmkidsSync (p, options) {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(f => rimrafSync(path.join(p, f), options))

  if (isWindows) {
    // We only end up here once we got ENOTEMPTY at least once, and
    // at this point, we are guaranteed to have removed all the kids.
    // So, we know that it won't be ENOENT or ENOTDIR or anything else.
    // try really hard to delete stuff on windows, because it has a
    // PROFOUNDLY annoying habit of not closing handles promptly when
    // files are deleted, resulting in spurious ENOTEMPTY errors.
    const startTime = Date.now()
    do {
      try {
        const ret = options.rmdirSync(p, options)
        return ret
      } catch {}
    } while (Date.now() - startTime < 500) // give up after 500ms
  } else {
    const ret = options.rmdirSync(p, options)
    return ret
  }
}

module.exports = rimraf
rimraf.sync = rimrafSync


/***/ }),

/***/ 73901:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(61176)
const path = __nccwpck_require__(71017)
const util = __nccwpck_require__(73837)

function getStats (src, dest, opts) {
  const statFunc = opts.dereference
    ? (file) => fs.stat(file, { bigint: true })
    : (file) => fs.lstat(file, { bigint: true })
  return Promise.all([
    statFunc(src),
    statFunc(dest).catch(err => {
      if (err.code === 'ENOENT') return null
      throw err
    })
  ]).then(([srcStat, destStat]) => ({ srcStat, destStat }))
}

function getStatsSync (src, dest, opts) {
  let destStat
  const statFunc = opts.dereference
    ? (file) => fs.statSync(file, { bigint: true })
    : (file) => fs.lstatSync(file, { bigint: true })
  const srcStat = statFunc(src)
  try {
    destStat = statFunc(dest)
  } catch (err) {
    if (err.code === 'ENOENT') return { srcStat, destStat: null }
    throw err
  }
  return { srcStat, destStat }
}

function checkPaths (src, dest, funcName, opts, cb) {
  util.callbackify(getStats)(src, dest, opts, (err, stats) => {
    if (err) return cb(err)
    const { srcStat, destStat } = stats

    if (destStat) {
      if (areIdentical(srcStat, destStat)) {
        const srcBaseName = path.basename(src)
        const destBaseName = path.basename(dest)
        if (funcName === 'move' &&
          srcBaseName !== destBaseName &&
          srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {
          return cb(null, { srcStat, destStat, isChangingCase: true })
        }
        return cb(new Error('Source and destination must not be the same.'))
      }
      if (srcStat.isDirectory() && !destStat.isDirectory()) {
        return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))
      }
      if (!srcStat.isDirectory() && destStat.isDirectory()) {
        return cb(new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`))
      }
    }

    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {
      return cb(new Error(errMsg(src, dest, funcName)))
    }
    return cb(null, { srcStat, destStat })
  })
}

function checkPathsSync (src, dest, funcName, opts) {
  const { srcStat, destStat } = getStatsSync(src, dest, opts)

  if (destStat) {
    if (areIdentical(srcStat, destStat)) {
      const srcBaseName = path.basename(src)
      const destBaseName = path.basename(dest)
      if (funcName === 'move' &&
        srcBaseName !== destBaseName &&
        srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {
        return { srcStat, destStat, isChangingCase: true }
      }
      throw new Error('Source and destination must not be the same.')
    }
    if (srcStat.isDirectory() && !destStat.isDirectory()) {
      throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)
    }
    if (!srcStat.isDirectory() && destStat.isDirectory()) {
      throw new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`)
    }
  }

  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {
    throw new Error(errMsg(src, dest, funcName))
  }
  return { srcStat, destStat }
}

// recursively check if dest parent is a subdirectory of src.
// It works for all file types including symlinks since it
// checks the src and dest inodes. It starts from the deepest
// parent and stops once it reaches the src parent or the root path.
function checkParentPaths (src, srcStat, dest, funcName, cb) {
  const srcParent = path.resolve(path.dirname(src))
  const destParent = path.resolve(path.dirname(dest))
  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()
  fs.stat(destParent, { bigint: true }, (err, destStat) => {
    if (err) {
      if (err.code === 'ENOENT') return cb()
      return cb(err)
    }
    if (areIdentical(srcStat, destStat)) {
      return cb(new Error(errMsg(src, dest, funcName)))
    }
    return checkParentPaths(src, srcStat, destParent, funcName, cb)
  })
}

function checkParentPathsSync (src, srcStat, dest, funcName) {
  const srcParent = path.resolve(path.dirname(src))
  const destParent = path.resolve(path.dirname(dest))
  if (destParent === srcParent || destParent === path.parse(destParent).root) return
  let destStat
  try {
    destStat = fs.statSync(destParent, { bigint: true })
  } catch (err) {
    if (err.code === 'ENOENT') return
    throw err
  }
  if (areIdentical(srcStat, destStat)) {
    throw new Error(errMsg(src, dest, funcName))
  }
  return checkParentPathsSync(src, srcStat, destParent, funcName)
}

function areIdentical (srcStat, destStat) {
  return destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev
}

// return true if dest is a subdir of src, otherwise false.
// It only checks the path strings.
function isSrcSubdir (src, dest) {
  const srcArr = path.resolve(src).split(path.sep).filter(i => i)
  const destArr = path.resolve(dest).split(path.sep).filter(i => i)
  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)
}

function errMsg (src, dest, funcName) {
  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`
}

module.exports = {
  checkPaths,
  checkPathsSync,
  checkParentPaths,
  checkParentPathsSync,
  isSrcSubdir,
  areIdentical
}


/***/ }),

/***/ 52548:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)

function utimesMillis (path, atime, mtime, callback) {
  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)
  fs.open(path, 'r+', (err, fd) => {
    if (err) return callback(err)
    fs.futimes(fd, atime, mtime, futimesErr => {
      fs.close(fd, closeErr => {
        if (callback) callback(futimesErr || closeErr)
      })
    })
  })
}

function utimesMillisSync (path, atime, mtime) {
  const fd = fs.openSync(path, 'r+')
  fs.futimesSync(fd, atime, mtime)
  return fs.closeSync(fd)
}

module.exports = {
  utimesMillis,
  utimesMillisSync
}


/***/ }),

/***/ 67356:
/***/ ((module) => {

"use strict";


module.exports = clone

var getPrototypeOf = Object.getPrototypeOf || function (obj) {
  return obj.__proto__
}

function clone (obj) {
  if (obj === null || typeof obj !== 'object')
    return obj

  if (obj instanceof Object)
    var copy = { __proto__: getPrototypeOf(obj) }
  else
    var copy = Object.create(null)

  Object.getOwnPropertyNames(obj).forEach(function (key) {
    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))
  })

  return copy
}


/***/ }),

/***/ 77758:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var fs = __nccwpck_require__(57147)
var polyfills = __nccwpck_require__(20263)
var legacy = __nccwpck_require__(73086)
var clone = __nccwpck_require__(67356)

var util = __nccwpck_require__(73837)

/* istanbul ignore next - node 0.x polyfill */
var gracefulQueue
var previousSymbol

/* istanbul ignore else - node 0.x polyfill */
if (typeof Symbol === 'function' && typeof Symbol.for === 'function') {
  gracefulQueue = Symbol.for('graceful-fs.queue')
  // This is used in testing by future versions
  previousSymbol = Symbol.for('graceful-fs.previous')
} else {
  gracefulQueue = '___graceful-fs.queue'
  previousSymbol = '___graceful-fs.previous'
}

function noop () {}

function publishQueue(context, queue) {
  Object.defineProperty(context, gracefulQueue, {
    get: function() {
      return queue
    }
  })
}

var debug = noop
if (util.debuglog)
  debug = util.debuglog('gfs4')
else if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || ''))
  debug = function() {
    var m = util.format.apply(util, arguments)
    m = 'GFS4: ' + m.split(/\n/).join('\nGFS4: ')
    console.error(m)
  }

// Once time initialization
if (!fs[gracefulQueue]) {
  // This queue can be shared by multiple loaded instances
  var queue = global[gracefulQueue] || []
  publishQueue(fs, queue)

  // Patch fs.close/closeSync to shared queue version, because we need
  // to retry() whenever a close happens *anywhere* in the program.
  // This is essential when multiple graceful-fs instances are
  // in play at the same time.
  fs.close = (function (fs$close) {
    function close (fd, cb) {
      return fs$close.call(fs, fd, function (err) {
        // This function uses the graceful-fs shared queue
        if (!err) {
          resetQueue()
        }

        if (typeof cb === 'function')
          cb.apply(this, arguments)
      })
    }

    Object.defineProperty(close, previousSymbol, {
      value: fs$close
    })
    return close
  })(fs.close)

  fs.closeSync = (function (fs$closeSync) {
    function closeSync (fd) {
      // This function uses the graceful-fs shared queue
      fs$closeSync.apply(fs, arguments)
      resetQueue()
    }

    Object.defineProperty(closeSync, previousSymbol, {
      value: fs$closeSync
    })
    return closeSync
  })(fs.closeSync)

  if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || '')) {
    process.on('exit', function() {
      debug(fs[gracefulQueue])
      __nccwpck_require__(39491).equal(fs[gracefulQueue].length, 0)
    })
  }
}

if (!global[gracefulQueue]) {
  publishQueue(global, fs[gracefulQueue]);
}

module.exports = patch(clone(fs))
if (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {
    module.exports = patch(fs)
    fs.__patched = true;
}

function patch (fs) {
  // Everything that references the open() function needs to be in here
  polyfills(fs)
  fs.gracefulify = patch

  fs.createReadStream = createReadStream
  fs.createWriteStream = createWriteStream
  var fs$readFile = fs.readFile
  fs.readFile = readFile
  function readFile (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$readFile(path, options, cb)

    function go$readFile (path, options, cb, startTime) {
      return fs$readFile(path, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$writeFile = fs.writeFile
  fs.writeFile = writeFile
  function writeFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$writeFile(path, data, options, cb)

    function go$writeFile (path, data, options, cb, startTime) {
      return fs$writeFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$appendFile = fs.appendFile
  if (fs$appendFile)
    fs.appendFile = appendFile
  function appendFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$appendFile(path, data, options, cb)

    function go$appendFile (path, data, options, cb, startTime) {
      return fs$appendFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$copyFile = fs.copyFile
  if (fs$copyFile)
    fs.copyFile = copyFile
  function copyFile (src, dest, flags, cb) {
    if (typeof flags === 'function') {
      cb = flags
      flags = 0
    }
    return go$copyFile(src, dest, flags, cb)

    function go$copyFile (src, dest, flags, cb, startTime) {
      return fs$copyFile(src, dest, flags, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$readdir = fs.readdir
  fs.readdir = readdir
  var noReaddirOptionVersions = /^v[0-5]\./
  function readdir (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    var go$readdir = noReaddirOptionVersions.test(process.version)
      ? function go$readdir (path, options, cb, startTime) {
        return fs$readdir(path, fs$readdirCallback(
          path, options, cb, startTime
        ))
      }
      : function go$readdir (path, options, cb, startTime) {
        return fs$readdir(path, options, fs$readdirCallback(
          path, options, cb, startTime
        ))
      }

    return go$readdir(path, options, cb)

    function fs$readdirCallback (path, options, cb, startTime) {
      return function (err, files) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([
            go$readdir,
            [path, options, cb],
            err,
            startTime || Date.now(),
            Date.now()
          ])
        else {
          if (files && files.sort)
            files.sort()

          if (typeof cb === 'function')
            cb.call(this, err, files)
        }
      }
    }
  }

  if (process.version.substr(0, 4) === 'v0.8') {
    var legStreams = legacy(fs)
    ReadStream = legStreams.ReadStream
    WriteStream = legStreams.WriteStream
  }

  var fs$ReadStream = fs.ReadStream
  if (fs$ReadStream) {
    ReadStream.prototype = Object.create(fs$ReadStream.prototype)
    ReadStream.prototype.open = ReadStream$open
  }

  var fs$WriteStream = fs.WriteStream
  if (fs$WriteStream) {
    WriteStream.prototype = Object.create(fs$WriteStream.prototype)
    WriteStream.prototype.open = WriteStream$open
  }

  Object.defineProperty(fs, 'ReadStream', {
    get: function () {
      return ReadStream
    },
    set: function (val) {
      ReadStream = val
    },
    enumerable: true,
    configurable: true
  })
  Object.defineProperty(fs, 'WriteStream', {
    get: function () {
      return WriteStream
    },
    set: function (val) {
      WriteStream = val
    },
    enumerable: true,
    configurable: true
  })

  // legacy names
  var FileReadStream = ReadStream
  Object.defineProperty(fs, 'FileReadStream', {
    get: function () {
      return FileReadStream
    },
    set: function (val) {
      FileReadStream = val
    },
    enumerable: true,
    configurable: true
  })
  var FileWriteStream = WriteStream
  Object.defineProperty(fs, 'FileWriteStream', {
    get: function () {
      return FileWriteStream
    },
    set: function (val) {
      FileWriteStream = val
    },
    enumerable: true,
    configurable: true
  })

  function ReadStream (path, options) {
    if (this instanceof ReadStream)
      return fs$ReadStream.apply(this, arguments), this
    else
      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)
  }

  function ReadStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        if (that.autoClose)
          that.destroy()

        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
        that.read()
      }
    })
  }

  function WriteStream (path, options) {
    if (this instanceof WriteStream)
      return fs$WriteStream.apply(this, arguments), this
    else
      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)
  }

  function WriteStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        that.destroy()
        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
      }
    })
  }

  function createReadStream (path, options) {
    return new fs.ReadStream(path, options)
  }

  function createWriteStream (path, options) {
    return new fs.WriteStream(path, options)
  }

  var fs$open = fs.open
  fs.open = open
  function open (path, flags, mode, cb) {
    if (typeof mode === 'function')
      cb = mode, mode = null

    return go$open(path, flags, mode, cb)

    function go$open (path, flags, mode, cb, startTime) {
      return fs$open(path, flags, mode, function (err, fd) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  return fs
}

function enqueue (elem) {
  debug('ENQUEUE', elem[0].name, elem[1])
  fs[gracefulQueue].push(elem)
  retry()
}

// keep track of the timeout between retry() calls
var retryTimer

// reset the startTime and lastTime to now
// this resets the start of the 60 second overall timeout as well as the
// delay between attempts so that we'll retry these jobs sooner
function resetQueue () {
  var now = Date.now()
  for (var i = 0; i < fs[gracefulQueue].length; ++i) {
    // entries that are only a length of 2 are from an older version, don't
    // bother modifying those since they'll be retried anyway.
    if (fs[gracefulQueue][i].length > 2) {
      fs[gracefulQueue][i][3] = now // startTime
      fs[gracefulQueue][i][4] = now // lastTime
    }
  }
  // call retry to make sure we're actively processing the queue
  retry()
}

function retry () {
  // clear the timer and remove it to help prevent unintended concurrency
  clearTimeout(retryTimer)
  retryTimer = undefined

  if (fs[gracefulQueue].length === 0)
    return

  var elem = fs[gracefulQueue].shift()
  var fn = elem[0]
  var args = elem[1]
  // these items may be unset if they were added by an older graceful-fs
  var err = elem[2]
  var startTime = elem[3]
  var lastTime = elem[4]

  // if we don't have a startTime we have no way of knowing if we've waited
  // long enough, so go ahead and retry this item now
  if (startTime === undefined) {
    debug('RETRY', fn.name, args)
    fn.apply(null, args)
  } else if (Date.now() - startTime >= 60000) {
    // it's been more than 60 seconds total, bail now
    debug('TIMEOUT', fn.name, args)
    var cb = args.pop()
    if (typeof cb === 'function')
      cb.call(null, err)
  } else {
    // the amount of time between the last attempt and right now
    var sinceAttempt = Date.now() - lastTime
    // the amount of time between when we first tried, and when we last tried
    // rounded up to at least 1
    var sinceStart = Math.max(lastTime - startTime, 1)
    // backoff. wait longer than the total time we've been retrying, but only
    // up to a maximum of 100ms
    var desiredDelay = Math.min(sinceStart * 1.2, 100)
    // it's been long enough since the last retry, do it again
    if (sinceAttempt >= desiredDelay) {
      debug('RETRY', fn.name, args)
      fn.apply(null, args.concat([startTime]))
    } else {
      // if we can't do this job yet, push it to the end of the queue
      // and let the next iteration check again
      fs[gracefulQueue].push(elem)
    }
  }

  // schedule our next run if one isn't already scheduled
  if (retryTimer === undefined) {
    retryTimer = setTimeout(retry, 0)
  }
}


/***/ }),

/***/ 73086:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var Stream = (__nccwpck_require__(12781).Stream)

module.exports = legacy

function legacy (fs) {
  return {
    ReadStream: ReadStream,
    WriteStream: WriteStream
  }

  function ReadStream (path, options) {
    if (!(this instanceof ReadStream)) return new ReadStream(path, options);

    Stream.call(this);

    var self = this;

    this.path = path;
    this.fd = null;
    this.readable = true;
    this.paused = false;

    this.flags = 'r';
    this.mode = 438; /*=0666*/
    this.bufferSize = 64 * 1024;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.encoding) this.setEncoding(this.encoding);

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.end === undefined) {
        this.end = Infinity;
      } else if ('number' !== typeof this.end) {
        throw TypeError('end must be a Number');
      }

      if (this.start > this.end) {
        throw new Error('start must be <= end');
      }

      this.pos = this.start;
    }

    if (this.fd !== null) {
      process.nextTick(function() {
        self._read();
      });
      return;
    }

    fs.open(this.path, this.flags, this.mode, function (err, fd) {
      if (err) {
        self.emit('error', err);
        self.readable = false;
        return;
      }

      self.fd = fd;
      self.emit('open', fd);
      self._read();
    })
  }

  function WriteStream (path, options) {
    if (!(this instanceof WriteStream)) return new WriteStream(path, options);

    Stream.call(this);

    this.path = path;
    this.fd = null;
    this.writable = true;

    this.flags = 'w';
    this.encoding = 'binary';
    this.mode = 438; /*=0666*/
    this.bytesWritten = 0;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.start < 0) {
        throw new Error('start must be >= zero');
      }

      this.pos = this.start;
    }

    this.busy = false;
    this._queue = [];

    if (this.fd === null) {
      this._open = fs.open;
      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);
      this.flush();
    }
  }
}


/***/ }),

/***/ 20263:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var constants = __nccwpck_require__(22057)

var origCwd = process.cwd
var cwd = null

var platform = process.env.GRACEFUL_FS_PLATFORM || process.platform

process.cwd = function() {
  if (!cwd)
    cwd = origCwd.call(process)
  return cwd
}
try {
  process.cwd()
} catch (er) {}

// This check is needed until node.js 12 is required
if (typeof process.chdir === 'function') {
  var chdir = process.chdir
  process.chdir = function (d) {
    cwd = null
    chdir.call(process, d)
  }
  if (Object.setPrototypeOf) Object.setPrototypeOf(process.chdir, chdir)
}

module.exports = patch

function patch (fs) {
  // (re-)implement some things that are known busted or missing.

  // lchmod, broken prior to 0.6.2
  // back-port the fix here.
  if (constants.hasOwnProperty('O_SYMLINK') &&
      process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)) {
    patchLchmod(fs)
  }

  // lutimes implementation, or no-op
  if (!fs.lutimes) {
    patchLutimes(fs)
  }

  // https://github.com/isaacs/node-graceful-fs/issues/4
  // Chown should not fail on einval or eperm if non-root.
  // It should not fail on enosys ever, as this just indicates
  // that a fs doesn't support the intended operation.

  fs.chown = chownFix(fs.chown)
  fs.fchown = chownFix(fs.fchown)
  fs.lchown = chownFix(fs.lchown)

  fs.chmod = chmodFix(fs.chmod)
  fs.fchmod = chmodFix(fs.fchmod)
  fs.lchmod = chmodFix(fs.lchmod)

  fs.chownSync = chownFixSync(fs.chownSync)
  fs.fchownSync = chownFixSync(fs.fchownSync)
  fs.lchownSync = chownFixSync(fs.lchownSync)

  fs.chmodSync = chmodFixSync(fs.chmodSync)
  fs.fchmodSync = chmodFixSync(fs.fchmodSync)
  fs.lchmodSync = chmodFixSync(fs.lchmodSync)

  fs.stat = statFix(fs.stat)
  fs.fstat = statFix(fs.fstat)
  fs.lstat = statFix(fs.lstat)

  fs.statSync = statFixSync(fs.statSync)
  fs.fstatSync = statFixSync(fs.fstatSync)
  fs.lstatSync = statFixSync(fs.lstatSync)

  // if lchmod/lchown do not exist, then make them no-ops
  if (fs.chmod && !fs.lchmod) {
    fs.lchmod = function (path, mode, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchmodSync = function () {}
  }
  if (fs.chown && !fs.lchown) {
    fs.lchown = function (path, uid, gid, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchownSync = function () {}
  }

  // on Windows, A/V software can lock the directory, causing this
  // to fail with an EACCES or EPERM if the directory contains newly
  // created files.  Try again on failure, for up to 60 seconds.

  // Set the timeout this long because some Windows Anti-Virus, such as Parity
  // bit9, may lock files for up to a minute, causing npm package install
  // failures. Also, take care to yield the scheduler. Windows scheduling gives
  // CPU to a busy looping process, which can cause the program causing the lock
  // contention to be starved of CPU by node, so the contention doesn't resolve.
  if (platform === "win32") {
    fs.rename = typeof fs.rename !== 'function' ? fs.rename
    : (function (fs$rename) {
      function rename (from, to, cb) {
        var start = Date.now()
        var backoff = 0;
        fs$rename(from, to, function CB (er) {
          if (er
              && (er.code === "EACCES" || er.code === "EPERM")
              && Date.now() - start < 60000) {
            setTimeout(function() {
              fs.stat(to, function (stater, st) {
                if (stater && stater.code === "ENOENT")
                  fs$rename(from, to, CB);
                else
                  cb(er)
              })
            }, backoff)
            if (backoff < 100)
              backoff += 10;
            return;
          }
          if (cb) cb(er)
        })
      }
      if (Object.setPrototypeOf) Object.setPrototypeOf(rename, fs$rename)
      return rename
    })(fs.rename)
  }

  // if read() returns EAGAIN, then just try it again.
  fs.read = typeof fs.read !== 'function' ? fs.read
  : (function (fs$read) {
    function read (fd, buffer, offset, length, position, callback_) {
      var callback
      if (callback_ && typeof callback_ === 'function') {
        var eagCounter = 0
        callback = function (er, _, __) {
          if (er && er.code === 'EAGAIN' && eagCounter < 10) {
            eagCounter ++
            return fs$read.call(fs, fd, buffer, offset, length, position, callback)
          }
          callback_.apply(this, arguments)
        }
      }
      return fs$read.call(fs, fd, buffer, offset, length, position, callback)
    }

    // This ensures `util.promisify` works as it does for native `fs.read`.
    if (Object.setPrototypeOf) Object.setPrototypeOf(read, fs$read)
    return read
  })(fs.read)

  fs.readSync = typeof fs.readSync !== 'function' ? fs.readSync
  : (function (fs$readSync) { return function (fd, buffer, offset, length, position) {
    var eagCounter = 0
    while (true) {
      try {
        return fs$readSync.call(fs, fd, buffer, offset, length, position)
      } catch (er) {
        if (er.code === 'EAGAIN' && eagCounter < 10) {
          eagCounter ++
          continue
        }
        throw er
      }
    }
  }})(fs.readSync)

  function patchLchmod (fs) {
    fs.lchmod = function (path, mode, callback) {
      fs.open( path
             , constants.O_WRONLY | constants.O_SYMLINK
             , mode
             , function (err, fd) {
        if (err) {
          if (callback) callback(err)
          return
        }
        // prefer to return the chmod error, if one occurs,
        // but still try to close, and report closing errors if they occur.
        fs.fchmod(fd, mode, function (err) {
          fs.close(fd, function(err2) {
            if (callback) callback(err || err2)
          })
        })
      })
    }

    fs.lchmodSync = function (path, mode) {
      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)

      // prefer to return the chmod error, if one occurs,
      // but still try to close, and report closing errors if they occur.
      var threw = true
      var ret
      try {
        ret = fs.fchmodSync(fd, mode)
        threw = false
      } finally {
        if (threw) {
          try {
            fs.closeSync(fd)
          } catch (er) {}
        } else {
          fs.closeSync(fd)
        }
      }
      return ret
    }
  }

  function patchLutimes (fs) {
    if (constants.hasOwnProperty("O_SYMLINK") && fs.futimes) {
      fs.lutimes = function (path, at, mt, cb) {
        fs.open(path, constants.O_SYMLINK, function (er, fd) {
          if (er) {
            if (cb) cb(er)
            return
          }
          fs.futimes(fd, at, mt, function (er) {
            fs.close(fd, function (er2) {
              if (cb) cb(er || er2)
            })
          })
        })
      }

      fs.lutimesSync = function (path, at, mt) {
        var fd = fs.openSync(path, constants.O_SYMLINK)
        var ret
        var threw = true
        try {
          ret = fs.futimesSync(fd, at, mt)
          threw = false
        } finally {
          if (threw) {
            try {
              fs.closeSync(fd)
            } catch (er) {}
          } else {
            fs.closeSync(fd)
          }
        }
        return ret
      }

    } else if (fs.futimes) {
      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }
      fs.lutimesSync = function () {}
    }
  }

  function chmodFix (orig) {
    if (!orig) return orig
    return function (target, mode, cb) {
      return orig.call(fs, target, mode, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chmodFixSync (orig) {
    if (!orig) return orig
    return function (target, mode) {
      try {
        return orig.call(fs, target, mode)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }


  function chownFix (orig) {
    if (!orig) return orig
    return function (target, uid, gid, cb) {
      return orig.call(fs, target, uid, gid, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chownFixSync (orig) {
    if (!orig) return orig
    return function (target, uid, gid) {
      try {
        return orig.call(fs, target, uid, gid)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }

  function statFix (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, options, cb) {
      if (typeof options === 'function') {
        cb = options
        options = null
      }
      function callback (er, stats) {
        if (stats) {
          if (stats.uid < 0) stats.uid += 0x100000000
          if (stats.gid < 0) stats.gid += 0x100000000
        }
        if (cb) cb.apply(this, arguments)
      }
      return options ? orig.call(fs, target, options, callback)
        : orig.call(fs, target, callback)
    }
  }

  function statFixSync (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, options) {
      var stats = options ? orig.call(fs, target, options)
        : orig.call(fs, target)
      if (stats) {
        if (stats.uid < 0) stats.uid += 0x100000000
        if (stats.gid < 0) stats.gid += 0x100000000
      }
      return stats;
    }
  }

  // ENOSYS means that the fs doesn't support the op. Just ignore
  // that, because it doesn't matter.
  //
  // if there's no getuid, or if getuid() is something other
  // than 0, and the error is EINVAL or EPERM, then just ignore
  // it.
  //
  // This specific case is a silent failure in cp, install, tar,
  // and most other unix tools that manage permissions.
  //
  // When running as root, or if other types of errors are
  // encountered, then it's strict.
  function chownErOk (er) {
    if (!er)
      return true

    if (er.code === "ENOSYS")
      return true

    var nonroot = !process.getuid || process.getuid() !== 0
    if (nonroot) {
      if (er.code === "EINVAL" || er.code === "EPERM")
        return true
    }

    return false
  }
}


/***/ }),

/***/ 31621:
/***/ ((module) => {

"use strict";


module.exports = (flag, argv = process.argv) => {
	const prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');
	const position = argv.indexOf(prefix + flag);
	const terminatorPosition = argv.indexOf('--');
	return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);
};


/***/ }),

/***/ 15098:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const net_1 = __importDefault(__nccwpck_require__(41808));
const tls_1 = __importDefault(__nccwpck_require__(24404));
const url_1 = __importDefault(__nccwpck_require__(57310));
const assert_1 = __importDefault(__nccwpck_require__(39491));
const debug_1 = __importDefault(__nccwpck_require__(38237));
const agent_base_1 = __nccwpck_require__(49690);
const parse_proxy_response_1 = __importDefault(__nccwpck_require__(595));
const debug = debug_1.default('https-proxy-agent:agent');
/**
 * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to
 * the specified "HTTP(s) proxy server" in order to proxy HTTPS requests.
 *
 * Outgoing HTTP requests are first tunneled through the proxy server using the
 * `CONNECT` HTTP request method to establish a connection to the proxy server,
 * and then the proxy server connects to the destination target and issues the
 * HTTP request from the proxy server.
 *
 * `https:` requests have their socket connection upgraded to TLS once
 * the connection to the proxy server has been established.
 *
 * @api public
 */
class HttpsProxyAgent extends agent_base_1.Agent {
    constructor(_opts) {
        let opts;
        if (typeof _opts === 'string') {
            opts = url_1.default.parse(_opts);
        }
        else {
            opts = _opts;
        }
        if (!opts) {
            throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');
        }
        debug('creating new HttpsProxyAgent instance: %o', opts);
        super(opts);
        const proxy = Object.assign({}, opts);
        // If `true`, then connect to the proxy server over TLS.
        // Defaults to `false`.
        this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);
        // Prefer `hostname` over `host`, and set the `port` if needed.
        proxy.host = proxy.hostname || proxy.host;
        if (typeof proxy.port === 'string') {
            proxy.port = parseInt(proxy.port, 10);
        }
        if (!proxy.port && proxy.host) {
            proxy.port = this.secureProxy ? 443 : 80;
        }
        // ALPN is supported by Node.js >= v5.
        // attempt to negotiate http/1.1 for proxy servers that support http/2
        if (this.secureProxy && !('ALPNProtocols' in proxy)) {
            proxy.ALPNProtocols = ['http 1.1'];
        }
        if (proxy.host && proxy.path) {
            // If both a `host` and `path` are specified then it's most likely
            // the result of a `url.parse()` call... we need to remove the
            // `path` portion so that `net.connect()` doesn't attempt to open
            // that as a Unix socket file.
            delete proxy.path;
            delete proxy.pathname;
        }
        this.proxy = proxy;
    }
    /**
     * Called when the node-core HTTP client library is creating a
     * new HTTP request.
     *
     * @api protected
     */
    callback(req, opts) {
        return __awaiter(this, void 0, void 0, function* () {
            const { proxy, secureProxy } = this;
            // Create a socket connection to the proxy server.
            let socket;
            if (secureProxy) {
                debug('Creating `tls.Socket`: %o', proxy);
                socket = tls_1.default.connect(proxy);
            }
            else {
                debug('Creating `net.Socket`: %o', proxy);
                socket = net_1.default.connect(proxy);
            }
            const headers = Object.assign({}, proxy.headers);
            const hostname = `${opts.host}:${opts.port}`;
            let payload = `CONNECT ${hostname} HTTP/1.1\r\n`;
            // Inject the `Proxy-Authorization` header if necessary.
            if (proxy.auth) {
                headers['Proxy-Authorization'] = `Basic ${Buffer.from(proxy.auth).toString('base64')}`;
            }
            // The `Host` header should only include the port
            // number when it is not the default port.
            let { host, port, secureEndpoint } = opts;
            if (!isDefaultPort(port, secureEndpoint)) {
                host += `:${port}`;
            }
            headers.Host = host;
            headers.Connection = 'close';
            for (const name of Object.keys(headers)) {
                payload += `${name}: ${headers[name]}\r\n`;
            }
            const proxyResponsePromise = parse_proxy_response_1.default(socket);
            socket.write(`${payload}\r\n`);
            const { statusCode, buffered } = yield proxyResponsePromise;
            if (statusCode === 200) {
                req.once('socket', resume);
                if (opts.secureEndpoint) {
                    // The proxy is connecting to a TLS server, so upgrade
                    // this socket connection to a TLS connection.
                    debug('Upgrading socket connection to TLS');
                    const servername = opts.servername || opts.host;
                    return tls_1.default.connect(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), { socket,
                        servername }));
                }
                return socket;
            }
            // Some other status code that's not 200... need to re-play the HTTP
            // header "data" events onto the socket once the HTTP machinery is
            // attached so that the node core `http` can parse and handle the
            // error status code.
            // Close the original socket, and a new "fake" socket is returned
            // instead, so that the proxy doesn't get the HTTP request
            // written to it (which may contain `Authorization` headers or other
            // sensitive data).
            //
            // See: https://hackerone.com/reports/541502
            socket.destroy();
            const fakeSocket = new net_1.default.Socket({ writable: false });
            fakeSocket.readable = true;
            // Need to wait for the "socket" event to re-play the "data" events.
            req.once('socket', (s) => {
                debug('replaying proxy buffer for failed request');
                assert_1.default(s.listenerCount('data') > 0);
                // Replay the "buffered" Buffer onto the fake `socket`, since at
                // this point the HTTP module machinery has been hooked up for
                // the user.
                s.push(buffered);
                s.push(null);
            });
            return fakeSocket;
        });
    }
}
exports["default"] = HttpsProxyAgent;
function resume(socket) {
    socket.resume();
}
function isDefaultPort(port, secure) {
    return Boolean((!secure && port === 80) || (secure && port === 443));
}
function isHTTPS(protocol) {
    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;
}
function omit(obj, ...keys) {
    const ret = {};
    let key;
    for (key in obj) {
        if (!keys.includes(key)) {
            ret[key] = obj[key];
        }
    }
    return ret;
}
//# sourceMappingURL=agent.js.map

/***/ }),

/***/ 77219:
/***/ (function(module, __unused_webpack_exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const agent_1 = __importDefault(__nccwpck_require__(15098));
function createHttpsProxyAgent(opts) {
    return new agent_1.default(opts);
}
(function (createHttpsProxyAgent) {
    createHttpsProxyAgent.HttpsProxyAgent = agent_1.default;
    createHttpsProxyAgent.prototype = agent_1.default.prototype;
})(createHttpsProxyAgent || (createHttpsProxyAgent = {}));
module.exports = createHttpsProxyAgent;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 595:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const debug_1 = __importDefault(__nccwpck_require__(38237));
const debug = debug_1.default('https-proxy-agent:parse-proxy-response');
function parseProxyResponse(socket) {
    return new Promise((resolve, reject) => {
        // we need to buffer any HTTP traffic that happens with the proxy before we get
        // the CONNECT response, so that if the response is anything other than an "200"
        // response code, then we can re-play the "data" events on the socket once the
        // HTTP parser is hooked up...
        let buffersLength = 0;
        const buffers = [];
        function read() {
            const b = socket.read();
            if (b)
                ondata(b);
            else
                socket.once('readable', read);
        }
        function cleanup() {
            socket.removeListener('end', onend);
            socket.removeListener('error', onerror);
            socket.removeListener('close', onclose);
            socket.removeListener('readable', read);
        }
        function onclose(err) {
            debug('onclose had error %o', err);
        }
        function onend() {
            debug('onend');
        }
        function onerror(err) {
            cleanup();
            debug('onerror %o', err);
            reject(err);
        }
        function ondata(b) {
            buffers.push(b);
            buffersLength += b.length;
            const buffered = Buffer.concat(buffers, buffersLength);
            const endOfHeaders = buffered.indexOf('\r\n\r\n');
            if (endOfHeaders === -1) {
                // keep buffering
                debug('have not received end of HTTP headers yet...');
                read();
                return;
            }
            const firstLine = buffered.toString('ascii', 0, buffered.indexOf('\r\n'));
            const statusCode = +firstLine.split(' ')[1];
            debug('got proxy server response: %o', firstLine);
            resolve({
                statusCode,
                buffered
            });
        }
        socket.on('error', onerror);
        socket.on('close', onclose);
        socket.on('end', onend);
        read();
    });
}
exports["default"] = parseProxyResponse;
//# sourceMappingURL=parse-proxy-response.js.map

/***/ }),

/***/ 26160:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

let _fs
try {
  _fs = __nccwpck_require__(77758)
} catch (_) {
  _fs = __nccwpck_require__(57147)
}
const universalify = __nccwpck_require__(9046)
const { stringify, stripBom } = __nccwpck_require__(35902)

async function _readFile (file, options = {}) {
  if (typeof options === 'string') {
    options = { encoding: options }
  }

  const fs = options.fs || _fs

  const shouldThrow = 'throws' in options ? options.throws : true

  let data = await universalify.fromCallback(fs.readFile)(file, options)

  data = stripBom(data)

  let obj
  try {
    obj = JSON.parse(data, options ? options.reviver : null)
  } catch (err) {
    if (shouldThrow) {
      err.message = `${file}: ${err.message}`
      throw err
    } else {
      return null
    }
  }

  return obj
}

const readFile = universalify.fromPromise(_readFile)

function readFileSync (file, options = {}) {
  if (typeof options === 'string') {
    options = { encoding: options }
  }

  const fs = options.fs || _fs

  const shouldThrow = 'throws' in options ? options.throws : true

  try {
    let content = fs.readFileSync(file, options)
    content = stripBom(content)
    return JSON.parse(content, options.reviver)
  } catch (err) {
    if (shouldThrow) {
      err.message = `${file}: ${err.message}`
      throw err
    } else {
      return null
    }
  }
}

async function _writeFile (file, obj, options = {}) {
  const fs = options.fs || _fs

  const str = stringify(obj, options)

  await universalify.fromCallback(fs.writeFile)(file, str, options)
}

const writeFile = universalify.fromPromise(_writeFile)

function writeFileSync (file, obj, options = {}) {
  const fs = options.fs || _fs

  const str = stringify(obj, options)
  // not sure if fs.writeFileSync returns anything, but just in case
  return fs.writeFileSync(file, str, options)
}

const jsonfile = {
  readFile,
  readFileSync,
  writeFile,
  writeFileSync
}

module.exports = jsonfile


/***/ }),

/***/ 35902:
/***/ ((module) => {

function stringify (obj, { EOL = '\n', finalEOL = true, replacer = null, spaces } = {}) {
  const EOF = finalEOL ? EOL : ''
  const str = JSON.stringify(obj, replacer, spaces)

  return str.replace(/\n/g, EOL) + EOF
}

function stripBom (content) {
  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified
  if (Buffer.isBuffer(content)) content = content.toString('utf8')
  return content.replace(/^\uFEFF/, '')
}

module.exports = { stringify, stripBom }


/***/ }),

/***/ 90250:
/***/ (function(module, exports, __nccwpck_require__) {

/* module decorator */ module = __nccwpck_require__.nmd(module);
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    define(function() {
      return _;
    });
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));


/***/ }),

/***/ 59060:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const flatted = __nccwpck_require__(98048);
const levels = __nccwpck_require__(57117);

/**
 * @name LoggingEvent
 * @namespace Log4js
 */
class LoggingEvent {
  /**
   * Models a logging event.
   * @constructor
   * @param {string} categoryName name of category
   * @param {Log4js.Level} level level of message
   * @param {Array} data objects to log
   * @author Seth Chisamore
   */
  constructor(categoryName, level, data, context, location) {
    this.startTime = new Date();
    this.categoryName = categoryName;
    this.data = data;
    this.level = level;
    this.context = Object.assign({}, context); // eslint-disable-line prefer-object-spread
    this.pid = process.pid;

    if (location) {
      this.functionName = location.functionName;
      this.fileName = location.fileName;
      this.lineNumber = location.lineNumber;
      this.columnNumber = location.columnNumber;
      this.callStack = location.callStack;
    }
  }

  serialise() {
    return flatted.stringify(this, (key, value) => {
      // JSON.stringify(new Error('test')) returns {}, which is not really useful for us.
      // The following allows us to serialize errors correctly.
      // duck-typing for Error object
      if (value && value.message && value.stack) {
        // eslint-disable-next-line prefer-object-spread
        value = Object.assign(
          { message: value.message, stack: value.stack },
          value
        );
      }
      // JSON.stringify({a: parseInt('abc'), b: 1/0, c: -1/0}) returns {a: null, b: null, c: null}.
      // The following allows us to serialize to NaN, Infinity and -Infinity correctly.
      else if (
        typeof value === 'number' &&
        (Number.isNaN(value) || !Number.isFinite(value))
      ) {
        value = value.toString();
      }
      // JSON.stringify([undefined]) returns [null].
      // The following allows us to serialize to undefined correctly.
      else if (typeof value === 'undefined') {
        value = typeof value;
      }
      return value;
    });
  }

  static deserialise(serialised) {
    let event;
    try {
      const rehydratedEvent = flatted.parse(serialised, (key, value) => {
        if (value && value.message && value.stack) {
          const fakeError = new Error(value);
          Object.keys(value).forEach((k) => {
            fakeError[k] = value[k];
          });
          value = fakeError;
        }
        return value;
      });
      rehydratedEvent.location = {
        functionName: rehydratedEvent.functionName,
        fileName: rehydratedEvent.fileName,
        lineNumber: rehydratedEvent.lineNumber,
        columnNumber: rehydratedEvent.columnNumber,
        callStack: rehydratedEvent.callStack,
      };
      event = new LoggingEvent(
        rehydratedEvent.categoryName,
        levels.getLevel(rehydratedEvent.level.levelStr),
        rehydratedEvent.data,
        rehydratedEvent.context,
        rehydratedEvent.location
      );
      event.startTime = new Date(rehydratedEvent.startTime);
      event.pid = rehydratedEvent.pid;
      event.cluster = rehydratedEvent.cluster;
    } catch (e) {
      event = new LoggingEvent('log4js', levels.ERROR, [
        'Unable to parse log:',
        serialised,
        'because: ',
        e,
      ]);
    }

    return event;
  }
}

module.exports = LoggingEvent;


/***/ }),

/***/ 13915:
/***/ ((module) => {

function maxFileSizeUnitTransform(maxLogSize) {
  if (typeof maxLogSize === 'number' && Number.isInteger(maxLogSize)) {
    return maxLogSize;
  }

  const units = {
    K: 1024,
    M: 1024 * 1024,
    G: 1024 * 1024 * 1024,
  };
  const validUnit = Object.keys(units);
  const unit = maxLogSize.slice(-1).toLocaleUpperCase();
  const value = maxLogSize.slice(0, -1).trim();

  if (validUnit.indexOf(unit) < 0 || !Number.isInteger(Number(value))) {
    throw Error(`maxLogSize: "${maxLogSize}" is invalid`);
  } else {
    return value * units[unit];
  }
}

function adapter(configAdapter, config) {
  const newConfig = Object.assign({}, config); // eslint-disable-line prefer-object-spread
  Object.keys(configAdapter).forEach((key) => {
    if (newConfig[key]) {
      newConfig[key] = configAdapter[key](config[key]);
    }
  });
  return newConfig;
}

function fileAppenderAdapter(config) {
  const configAdapter = {
    maxLogSize: maxFileSizeUnitTransform,
  };
  return adapter(configAdapter, config);
}

const adapters = {
  dateFile: fileAppenderAdapter,
  file: fileAppenderAdapter,
  fileSync: fileAppenderAdapter,
};

module.exports.modifyConfig = (config) =>
  adapters[config.type] ? adapters[config.type](config) : config;


/***/ }),

/***/ 98712:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)('log4js:categoryFilter');

function categoryFilter(excludes, appender) {
  if (typeof excludes === 'string') excludes = [excludes];
  return (logEvent) => {
    debug(`Checking ${logEvent.categoryName} against ${excludes}`);
    if (excludes.indexOf(logEvent.categoryName) === -1) {
      debug('Not excluded, sending to appender');
      appender(logEvent);
    }
  };
}

function configure(config, layouts, findAppender) {
  const appender = findAppender(config.appender);
  return categoryFilter(config.exclude, appender);
}

module.exports.configure = configure;


/***/ }),

/***/ 34813:
/***/ ((module) => {

// eslint-disable-next-line no-console
const consoleLog = console.log.bind(console);

function consoleAppender(layout, timezoneOffset) {
  return (loggingEvent) => {
    consoleLog(layout(loggingEvent, timezoneOffset));
  };
}

function configure(config, layouts) {
  let layout = layouts.colouredLayout;
  if (config.layout) {
    layout = layouts.layout(config.layout.type, config.layout);
  }
  return consoleAppender(layout, config.timezoneOffset);
}

module.exports.configure = configure;


/***/ }),

/***/ 11339:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const streams = __nccwpck_require__(85735);
const os = __nccwpck_require__(22037);

const eol = os.EOL;

function openTheStream(filename, pattern, options) {
  const stream = new streams.DateRollingFileStream(filename, pattern, options);
  stream.on('error', (err) => {
    // eslint-disable-next-line no-console
    console.error(
      'log4js.dateFileAppender - Writing to file %s, error happened ',
      filename,
      err
    );
  });
  stream.on('drain', () => {
    process.emit('log4js:pause', false);
  });
  return stream;
}

/**
 * File appender that rolls files according to a date pattern.
 * @param filename base filename.
 * @param pattern the format that will be added to the end of filename when rolling,
 *          also used to check when to roll files - defaults to '.yyyy-MM-dd'
 * @param layout layout function for log messages - defaults to basicLayout
 * @param options - options to be passed to the underlying stream
 * @param timezoneOffset - optional timezone offset in minutes (default system local)
 */
function appender(filename, pattern, layout, options, timezoneOffset) {
  // the options for file appender use maxLogSize, but the docs say any file appender
  // options should work for dateFile as well.
  options.maxSize = options.maxLogSize;

  const writer = openTheStream(filename, pattern, options);

  const app = function (logEvent) {
    if (!writer.writable) {
      return;
    }
    if (!writer.write(layout(logEvent, timezoneOffset) + eol, 'utf8')) {
      process.emit('log4js:pause', true);
    }
  };

  app.shutdown = function (complete) {
    writer.end('', 'utf-8', complete);
  };

  return app;
}

function configure(config, layouts) {
  let layout = layouts.basicLayout;
  if (config.layout) {
    layout = layouts.layout(config.layout.type, config.layout);
  }

  if (!config.alwaysIncludePattern) {
    config.alwaysIncludePattern = false;
  }

  // security default (instead of relying on streamroller default)
  config.mode = config.mode || 0o600;

  return appender(
    config.filename,
    config.pattern,
    layout,
    config,
    config.timezoneOffset
  );
}

module.exports.configure = configure;


/***/ }),

/***/ 99128:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)('log4js:file');
const path = __nccwpck_require__(71017);
const streams = __nccwpck_require__(85735);
const os = __nccwpck_require__(22037);

const eol = os.EOL;

let mainSighupListenerStarted = false;
const sighupListeners = new Set();
function mainSighupHandler() {
  sighupListeners.forEach((app) => {
    app.sighupHandler();
  });
}

/**
 * File Appender writing the logs to a text file. Supports rolling of logs by size.
 *
 * @param file the file log messages will be written to
 * @param layout a function that takes a logEvent and returns a string
 *   (defaults to basicLayout).
 * @param logSize - the maximum size (in bytes) for a log file,
 *   if not provided then logs won't be rotated.
 * @param numBackups - the number of log files to keep after logSize
 *   has been reached (default 5)
 * @param options - options to be passed to the underlying stream
 * @param timezoneOffset - optional timezone offset in minutes (default system local)
 */
function fileAppender(
  file,
  layout,
  logSize,
  numBackups,
  options,
  timezoneOffset
) {
  if (typeof file !== 'string' || file.length === 0) {
    throw new Error(`Invalid filename: ${file}`);
  } else if (file.endsWith(path.sep)) {
    throw new Error(`Filename is a directory: ${file}`);
  } else {
    // handle ~ expansion: https://github.com/nodejs/node/issues/684
    // exclude ~ and ~filename as these can be valid files
    file = file.replace(new RegExp(`^~(?=${path.sep}.+)`), os.homedir());
  }
  file = path.normalize(file);
  numBackups = !numBackups && numBackups !== 0 ? 5 : numBackups;

  debug(
    'Creating file appender (',
    file,
    ', ',
    logSize,
    ', ',
    numBackups,
    ', ',
    options,
    ', ',
    timezoneOffset,
    ')'
  );

  function openTheStream(filePath, fileSize, numFiles, opt) {
    const stream = new streams.RollingFileStream(
      filePath,
      fileSize,
      numFiles,
      opt
    );
    stream.on('error', (err) => {
      // eslint-disable-next-line no-console
      console.error(
        'log4js.fileAppender - Writing to file %s, error happened ',
        filePath,
        err
      );
    });
    stream.on('drain', () => {
      process.emit('log4js:pause', false);
    });
    return stream;
  }

  let writer = openTheStream(file, logSize, numBackups, options);

  const app = function (loggingEvent) {
    if (!writer.writable) {
      return;
    }
    if (options.removeColor === true) {
      // eslint-disable-next-line no-control-regex
      const regex = /\x1b[[0-9;]*m/g;
      loggingEvent.data = loggingEvent.data.map((d) => {
        if (typeof d === 'string') return d.replace(regex, '');
        return d;
      });
    }
    if (!writer.write(layout(loggingEvent, timezoneOffset) + eol, 'utf8')) {
      process.emit('log4js:pause', true);
    }
  };

  app.reopen = function () {
    writer.end(() => {
      writer = openTheStream(file, logSize, numBackups, options);
    });
  };

  app.sighupHandler = function () {
    debug('SIGHUP handler called.');
    app.reopen();
  };

  app.shutdown = function (complete) {
    sighupListeners.delete(app);
    if (sighupListeners.size === 0 && mainSighupListenerStarted) {
      process.removeListener('SIGHUP', mainSighupHandler);
      mainSighupListenerStarted = false;
    }
    writer.end('', 'utf-8', complete);
  };

  // On SIGHUP, close and reopen all files. This allows this appender to work with
  // logrotate. Note that if you are using logrotate, you should not set
  // `logSize`.
  sighupListeners.add(app);
  if (!mainSighupListenerStarted) {
    process.on('SIGHUP', mainSighupHandler);
    mainSighupListenerStarted = true;
  }

  return app;
}

function configure(config, layouts) {
  let layout = layouts.basicLayout;
  if (config.layout) {
    layout = layouts.layout(config.layout.type, config.layout);
  }

  // security default (instead of relying on streamroller default)
  config.mode = config.mode || 0o600;

  return fileAppender(
    config.filename,
    layout,
    config.maxLogSize,
    config.backups,
    config,
    config.timezoneOffset
  );
}

module.exports.configure = configure;


/***/ }),

/***/ 8910:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)('log4js:fileSync');
const path = __nccwpck_require__(71017);
const fs = __nccwpck_require__(57147);
const os = __nccwpck_require__(22037);

const eol = os.EOL;

function touchFile(file, options) {
  // attempt to create the directory
  const mkdir = (dir) => {
    try {
      return fs.mkdirSync(dir, { recursive: true });
    } catch (e) {
      // backward-compatible fs.mkdirSync for nodejs pre-10.12.0 (without recursive option)
      // recursive creation of parent first
      if (e.code === 'ENOENT') {
        mkdir(path.dirname(dir));
        return mkdir(dir);
      }

      // throw error for all except EEXIST and EROFS (read-only filesystem)
      if (e.code !== 'EEXIST' && e.code !== 'EROFS') {
        throw e;
      }

      // EEXIST: throw if file and not directory
      // EROFS : throw if directory not found
      else {
        try {
          if (fs.statSync(dir).isDirectory()) {
            return dir;
          }
          throw e;
        } catch (err) {
          throw e;
        }
      }
    }
  };
  mkdir(path.dirname(file));

  // try to throw EISDIR, EROFS, EACCES
  fs.appendFileSync(file, '', { mode: options.mode, flag: options.flags });
}

class RollingFileSync {
  constructor(filename, maxLogSize, backups, options) {
    debug('In RollingFileStream');

    if (maxLogSize < 0) {
      throw new Error(`maxLogSize (${maxLogSize}) should be > 0`);
    }

    this.filename = filename;
    this.size = maxLogSize;
    this.backups = backups;
    this.options = options;
    this.currentSize = 0;

    function currentFileSize(file) {
      let fileSize = 0;

      try {
        fileSize = fs.statSync(file).size;
      } catch (e) {
        // file does not exist
        touchFile(file, options);
      }
      return fileSize;
    }

    this.currentSize = currentFileSize(this.filename);
  }

  shouldRoll() {
    debug(
      'should roll with current size %d, and max size %d',
      this.currentSize,
      this.size
    );
    return this.currentSize >= this.size;
  }

  roll(filename) {
    const that = this;
    const nameMatcher = new RegExp(`^${path.basename(filename)}`);

    function justTheseFiles(item) {
      return nameMatcher.test(item);
    }

    function index(filename_) {
      return (
        parseInt(filename_.slice(`${path.basename(filename)}.`.length), 10) || 0
      );
    }

    function byIndex(a, b) {
      return index(a) - index(b);
    }

    function increaseFileIndex(fileToRename) {
      const idx = index(fileToRename);
      debug(`Index of ${fileToRename} is ${idx}`);
      if (that.backups === 0) {
        fs.truncateSync(filename, 0);
      } else if (idx < that.backups) {
        // on windows, you can get a EEXIST error if you rename a file to an existing file
        // so, we'll try to delete the file we're renaming to first
        try {
          fs.unlinkSync(`${filename}.${idx + 1}`);
        } catch (e) {
          // ignore err: if we could not delete, it's most likely that it doesn't exist
        }

        debug(`Renaming ${fileToRename} -> ${filename}.${idx + 1}`);
        fs.renameSync(
          path.join(path.dirname(filename), fileToRename),
          `${filename}.${idx + 1}`
        );
      }
    }

    function renameTheFiles() {
      // roll the backups (rename file.n to file.n+1, where n <= numBackups)
      debug('Renaming the old files');

      const files = fs.readdirSync(path.dirname(filename));
      files
        .filter(justTheseFiles)
        .sort(byIndex)
        .reverse()
        .forEach(increaseFileIndex);
    }

    debug('Rolling, rolling, rolling');
    renameTheFiles();
  }

  // eslint-disable-next-line no-unused-vars
  write(chunk, encoding) {
    const that = this;

    function writeTheChunk() {
      debug('writing the chunk to the file');
      that.currentSize += chunk.length;
      fs.appendFileSync(that.filename, chunk);
    }

    debug('in write');

    if (this.shouldRoll()) {
      this.currentSize = 0;
      this.roll(this.filename);
    }

    writeTheChunk();
  }
}

/**
 * File Appender writing the logs to a text file. Supports rolling of logs by size.
 *
 * @param file the file log messages will be written to
 * @param layout a function that takes a logevent and returns a string
 *   (defaults to basicLayout).
 * @param logSize - the maximum size (in bytes) for a log file,
 *   if not provided then logs won't be rotated.
 * @param numBackups - the number of log files to keep after logSize
 *   has been reached (default 5)
 * @param options - options to be passed to the underlying stream
 * @param timezoneOffset - optional timezone offset in minutes (default system local)
 */
function fileAppender(
  file,
  layout,
  logSize,
  numBackups,
  options,
  timezoneOffset
) {
  if (typeof file !== 'string' || file.length === 0) {
    throw new Error(`Invalid filename: ${file}`);
  } else if (file.endsWith(path.sep)) {
    throw new Error(`Filename is a directory: ${file}`);
  } else {
    // handle ~ expansion: https://github.com/nodejs/node/issues/684
    // exclude ~ and ~filename as these can be valid files
    file = file.replace(new RegExp(`^~(?=${path.sep}.+)`), os.homedir());
  }
  file = path.normalize(file);
  numBackups = !numBackups && numBackups !== 0 ? 5 : numBackups;

  debug(
    'Creating fileSync appender (',
    file,
    ', ',
    logSize,
    ', ',
    numBackups,
    ', ',
    options,
    ', ',
    timezoneOffset,
    ')'
  );

  function openTheStream(filePath, fileSize, numFiles) {
    let stream;

    if (fileSize) {
      stream = new RollingFileSync(filePath, fileSize, numFiles, options);
    } else {
      stream = ((f) => {
        // touch the file to apply flags (like w to truncate the file)
        touchFile(f, options);

        return {
          write(data) {
            fs.appendFileSync(f, data);
          },
        };
      })(filePath);
    }

    return stream;
  }

  const logFile = openTheStream(file, logSize, numBackups);

  return (loggingEvent) => {
    logFile.write(layout(loggingEvent, timezoneOffset) + eol);
  };
}

function configure(config, layouts) {
  let layout = layouts.basicLayout;
  if (config.layout) {
    layout = layouts.layout(config.layout.type, config.layout);
  }

  const options = {
    flags: config.flags || 'a',
    encoding: config.encoding || 'utf8',
    mode: config.mode || 0o600,
  };

  return fileAppender(
    config.filename,
    layout,
    config.maxLogSize,
    config.backups,
    options,
    config.timezoneOffset
  );
}

module.exports.configure = configure;


/***/ }),

/***/ 5709:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const path = __nccwpck_require__(71017);
const debug = __nccwpck_require__(38237)('log4js:appenders');
const configuration = __nccwpck_require__(65813);
const clustering = __nccwpck_require__(2560);
const levels = __nccwpck_require__(57117);
const layouts = __nccwpck_require__(22680);
const adapters = __nccwpck_require__(13915);

// pre-load the core appenders so that webpack can find them
const coreAppenders = new Map();
coreAppenders.set('console', __nccwpck_require__(34813));
coreAppenders.set('stdout', __nccwpck_require__(19601));
coreAppenders.set('stderr', __nccwpck_require__(46451));
coreAppenders.set('logLevelFilter', __nccwpck_require__(20790));
coreAppenders.set('categoryFilter', __nccwpck_require__(98712));
coreAppenders.set('noLogFilter', __nccwpck_require__(3164));
coreAppenders.set('file', __nccwpck_require__(99128));
coreAppenders.set('dateFile', __nccwpck_require__(11339));
coreAppenders.set('fileSync', __nccwpck_require__(8910));
coreAppenders.set('tcp', __nccwpck_require__(22957));

const appenders = new Map();

const tryLoading = (modulePath, config) => {
  let resolvedPath;
  try {
    const modulePathCJS = `${modulePath}.cjs`;
    resolvedPath = require.resolve(modulePathCJS);
    debug('Loading module from ', modulePathCJS);
  } catch (e) {
    resolvedPath = modulePath;
    debug('Loading module from ', modulePath);
  }
  try {
    // eslint-disable-next-line global-require, import/no-dynamic-require
    return require(resolvedPath);
  } catch (e) {
    // if the module was found, and we still got an error, then raise it
    configuration.throwExceptionIf(
      config,
      e.code !== 'MODULE_NOT_FOUND',
      `appender "${modulePath}" could not be loaded (error was: ${e})`
    );
    return undefined;
  }
};

const loadAppenderModule = (type, config) =>
  coreAppenders.get(type) ||
  tryLoading(`./${type}`, config) ||
  tryLoading(type, config) ||
  (require.main &&
    require.main.filename &&
    tryLoading(path.join(path.dirname(require.main.filename), type), config)) ||
  tryLoading(path.join(process.cwd(), type), config);

const appendersLoading = new Set();

const getAppender = (name, config) => {
  if (appenders.has(name)) return appenders.get(name);
  if (!config.appenders[name]) return false;
  if (appendersLoading.has(name))
    throw new Error(`Dependency loop detected for appender ${name}.`);
  appendersLoading.add(name);

  debug(`Creating appender ${name}`);
  // eslint-disable-next-line no-use-before-define
  const appender = createAppender(name, config);
  appendersLoading.delete(name);
  appenders.set(name, appender);
  return appender;
};

const createAppender = (name, config) => {
  const appenderConfig = config.appenders[name];
  const appenderModule = appenderConfig.type.configure
    ? appenderConfig.type
    : loadAppenderModule(appenderConfig.type, config);
  configuration.throwExceptionIf(
    config,
    configuration.not(appenderModule),
    `appender "${name}" is not valid (type "${appenderConfig.type}" could not be found)`
  );
  if (appenderModule.appender) {
    process.emitWarning(
      `Appender ${appenderConfig.type} exports an appender function.`,
      'DeprecationWarning',
      'log4js-node-DEP0001'
    );
    debug(
      '[log4js-node-DEP0001]',
      `DEPRECATION: Appender ${appenderConfig.type} exports an appender function.`
    );
  }
  if (appenderModule.shutdown) {
    process.emitWarning(
      `Appender ${appenderConfig.type} exports a shutdown function.`,
      'DeprecationWarning',
      'log4js-node-DEP0002'
    );
    debug(
      '[log4js-node-DEP0002]',
      `DEPRECATION: Appender ${appenderConfig.type} exports a shutdown function.`
    );
  }

  debug(`${name}: clustering.isMaster ? ${clustering.isMaster()}`);
  debug(
    // eslint-disable-next-line global-require
    `${name}: appenderModule is ${(__nccwpck_require__(73837).inspect)(appenderModule)}`
  );
  return clustering.onlyOnMaster(
    () => {
      debug(
        `calling appenderModule.configure for ${name} / ${appenderConfig.type}`
      );
      return appenderModule.configure(
        adapters.modifyConfig(appenderConfig),
        layouts,
        (appender) => getAppender(appender, config),
        levels
      );
    },
    /* istanbul ignore next: fn never gets called by non-master yet needed to pass config validation */ () => {}
  );
};

const setup = (config) => {
  appenders.clear();
  appendersLoading.clear();
  if (!config) {
    return;
  }

  const usedAppenders = [];
  Object.values(config.categories).forEach((category) => {
    usedAppenders.push(...category.appenders);
  });
  Object.keys(config.appenders).forEach((name) => {
    // dodgy hard-coding of special case for tcp-server and multiprocess which may not have
    // any categories associated with it, but needs to be started up anyway
    if (
      usedAppenders.includes(name) ||
      config.appenders[name].type === 'tcp-server' ||
      config.appenders[name].type === 'multiprocess'
    ) {
      getAppender(name, config);
    }
  });
};

const init = () => {
  setup();
};
init();

configuration.addListener((config) => {
  configuration.throwExceptionIf(
    config,
    configuration.not(configuration.anObject(config.appenders)),
    'must have a property "appenders" of type object.'
  );
  const appenderNames = Object.keys(config.appenders);
  configuration.throwExceptionIf(
    config,
    configuration.not(appenderNames.length),
    'must define at least one appender.'
  );

  appenderNames.forEach((name) => {
    configuration.throwExceptionIf(
      config,
      configuration.not(config.appenders[name].type),
      `appender "${name}" is not valid (must be an object with property "type")`
    );
  });
});

configuration.addListener(setup);

module.exports = appenders;
module.exports.init = init;


/***/ }),

/***/ 20790:
/***/ ((module) => {

function logLevelFilter(minLevelString, maxLevelString, appender, levels) {
  const minLevel = levels.getLevel(minLevelString);
  const maxLevel = levels.getLevel(maxLevelString, levels.FATAL);
  return (logEvent) => {
    const eventLevel = logEvent.level;
    if (
      minLevel.isLessThanOrEqualTo(eventLevel) &&
      maxLevel.isGreaterThanOrEqualTo(eventLevel)
    ) {
      appender(logEvent);
    }
  };
}

function configure(config, layouts, findAppender, levels) {
  const appender = findAppender(config.appender);
  return logLevelFilter(config.level, config.maxLevel, appender, levels);
}

module.exports.configure = configure;


/***/ }),

/***/ 3164:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)('log4js:noLogFilter');

/**
 * The function removes empty or null regexp from the array
 * @param {string[]} regexp
 * @returns {string[]} a filtered string array with not empty or null regexp
 */
function removeNullOrEmptyRegexp(regexp) {
  const filtered = regexp.filter((el) => el != null && el !== '');
  return filtered;
}

/**
 * Returns a function that will exclude the events in case they match
 * with the regular expressions provided
 * @param {(string|string[])} filters contains the regexp that will be used for the evaluation
 * @param {*} appender
 * @returns {function}
 */
function noLogFilter(filters, appender) {
  return (logEvent) => {
    debug(`Checking data: ${logEvent.data} against filters: ${filters}`);
    if (typeof filters === 'string') {
      filters = [filters];
    }
    filters = removeNullOrEmptyRegexp(filters);
    const regex = new RegExp(filters.join('|'), 'i');
    if (
      filters.length === 0 ||
      logEvent.data.findIndex((value) => regex.test(value)) < 0
    ) {
      debug('Not excluded, sending to appender');
      appender(logEvent);
    }
  };
}

function configure(config, layouts, findAppender) {
  const appender = findAppender(config.appender);
  return noLogFilter(config.exclude, appender);
}

module.exports.configure = configure;


/***/ }),

/***/ 578:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)('log4js:recording');

const recordedEvents = [];

function configure() {
  return function (logEvent) {
    debug(
      `received logEvent, number of events now ${recordedEvents.length + 1}`
    );
    debug('log event was ', logEvent);
    recordedEvents.push(logEvent);
  };
}

function replay() {
  return recordedEvents.slice();
}

function reset() {
  recordedEvents.length = 0;
}

module.exports = {
  configure,
  replay,
  playback: replay,
  reset,
  erase: reset,
};


/***/ }),

/***/ 46451:
/***/ ((module) => {

function stderrAppender(layout, timezoneOffset) {
  return (loggingEvent) => {
    process.stderr.write(`${layout(loggingEvent, timezoneOffset)}\n`);
  };
}

function configure(config, layouts) {
  let layout = layouts.colouredLayout;
  if (config.layout) {
    layout = layouts.layout(config.layout.type, config.layout);
  }
  return stderrAppender(layout, config.timezoneOffset);
}

module.exports.configure = configure;


/***/ }),

/***/ 19601:
/***/ ((__unused_webpack_module, exports) => {

function stdoutAppender(layout, timezoneOffset) {
  return (loggingEvent) => {
    process.stdout.write(`${layout(loggingEvent, timezoneOffset)}\n`);
  };
}

function configure(config, layouts) {
  let layout = layouts.colouredLayout;
  if (config.layout) {
    layout = layouts.layout(config.layout.type, config.layout);
  }
  return stdoutAppender(layout, config.timezoneOffset);
}

exports.configure = configure;


/***/ }),

/***/ 22957:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)('log4js:tcp');
const net = __nccwpck_require__(41808);

function appender(config, layout) {
  let canWrite = false;
  const buffer = [];
  let socket;
  let shutdownAttempts = 3;
  let endMsg = '__LOG4JS__';

  function write(loggingEvent) {
    debug('Writing log event to socket');
    canWrite = socket.write(`${layout(loggingEvent)}${endMsg}`, 'utf8');
  }

  function emptyBuffer() {
    let evt;
    debug('emptying buffer');
    while ((evt = buffer.shift())) {
      write(evt);
    }
  }

  function createSocket() {
    debug(
      `appender creating socket to ${config.host || 'localhost'}:${
        config.port || 5000
      }`
    );
    endMsg = `${config.endMsg || '__LOG4JS__'}`;
    socket = net.createConnection(
      config.port || 5000,
      config.host || 'localhost'
    );
    socket.on('connect', () => {
      debug('socket connected');
      emptyBuffer();
      canWrite = true;
    });
    socket.on('drain', () => {
      debug('drain event received, emptying buffer');
      canWrite = true;
      emptyBuffer();
    });
    socket.on('timeout', socket.end.bind(socket));
    socket.on('error', (e) => {
      debug('connection error', e);
      canWrite = false;
      emptyBuffer();
    });
    socket.on('close', createSocket);
  }

  createSocket();

  function log(loggingEvent) {
    if (canWrite) {
      write(loggingEvent);
    } else {
      debug('buffering log event because it cannot write at the moment');
      buffer.push(loggingEvent);
    }
  }

  log.shutdown = function (cb) {
    debug('shutdown called');
    if (buffer.length && shutdownAttempts) {
      debug('buffer has items, waiting 100ms to empty');
      shutdownAttempts -= 1;
      setTimeout(() => {
        log.shutdown(cb);
      }, 100);
    } else {
      socket.removeAllListeners('close');
      socket.end(cb);
    }
  };
  return log;
}

function configure(config, layouts) {
  debug(`configure with config = ${config}`);
  let layout = function (loggingEvent) {
    return loggingEvent.serialise();
  };
  if (config.layout) {
    layout = layouts.layout(config.layout.type, config.layout);
  }
  return appender(config, layout);
}

module.exports.configure = configure;


/***/ }),

/***/ 45798:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)('log4js:categories');
const configuration = __nccwpck_require__(65813);
const levels = __nccwpck_require__(57117);
const appenders = __nccwpck_require__(5709);

const categories = new Map();

/**
 * Add inherited config to this category.  That includes extra appenders from parent,
 * and level, if none is set on this category.
 * This is recursive, so each parent also gets loaded with inherited appenders.
 * Inheritance is blocked if a category has inherit=false
 * @param  {*} config
 * @param  {*} category the child category
 * @param  {string} categoryName dotted path to category
 * @return {void}
 */
function inheritFromParent(config, category, categoryName) {
  if (category.inherit === false) return;
  const lastDotIndex = categoryName.lastIndexOf('.');
  if (lastDotIndex < 0) return; // category is not a child
  const parentCategoryName = categoryName.slice(0, lastDotIndex);
  let parentCategory = config.categories[parentCategoryName];

  if (!parentCategory) {
    // parent is missing, so implicitly create it, so that it can inherit from its parents
    parentCategory = { inherit: true, appenders: [] };
  }

  // make sure parent has had its inheritance taken care of before pulling its properties to this child
  inheritFromParent(config, parentCategory, parentCategoryName);

  // if the parent is not in the config (because we just created it above),
  // and it inherited a valid configuration, add it to config.categories
  if (
    !config.categories[parentCategoryName] &&
    parentCategory.appenders &&
    parentCategory.appenders.length &&
    parentCategory.level
  ) {
    config.categories[parentCategoryName] = parentCategory;
  }

  category.appenders = category.appenders || [];
  category.level = category.level || parentCategory.level;

  // merge in appenders from parent (parent is already holding its inherited appenders)
  parentCategory.appenders.forEach((ap) => {
    if (!category.appenders.includes(ap)) {
      category.appenders.push(ap);
    }
  });
  category.parent = parentCategory;
}

/**
 * Walk all categories in the config, and pull down any configuration from parent to child.
 * This includes inherited appenders, and level, where level is not set.
 * Inheritance is skipped where a category has inherit=false.
 * @param  {*} config
 */
function addCategoryInheritance(config) {
  if (!config.categories) return;
  const categoryNames = Object.keys(config.categories);
  categoryNames.forEach((name) => {
    const category = config.categories[name];
    // add inherited appenders and level to this category
    inheritFromParent(config, category, name);
  });
}

configuration.addPreProcessingListener((config) =>
  addCategoryInheritance(config)
);

configuration.addListener((config) => {
  configuration.throwExceptionIf(
    config,
    configuration.not(configuration.anObject(config.categories)),
    'must have a property "categories" of type object.'
  );

  const categoryNames = Object.keys(config.categories);
  configuration.throwExceptionIf(
    config,
    configuration.not(categoryNames.length),
    'must define at least one category.'
  );

  categoryNames.forEach((name) => {
    const category = config.categories[name];
    configuration.throwExceptionIf(
      config,
      [
        configuration.not(category.appenders),
        configuration.not(category.level),
      ],
      `category "${name}" is not valid (must be an object with properties "appenders" and "level")`
    );

    configuration.throwExceptionIf(
      config,
      configuration.not(Array.isArray(category.appenders)),
      `category "${name}" is not valid (appenders must be an array of appender names)`
    );

    configuration.throwExceptionIf(
      config,
      configuration.not(category.appenders.length),
      `category "${name}" is not valid (appenders must contain at least one appender name)`
    );

    if (Object.prototype.hasOwnProperty.call(category, 'enableCallStack')) {
      configuration.throwExceptionIf(
        config,
        typeof category.enableCallStack !== 'boolean',
        `category "${name}" is not valid (enableCallStack must be boolean type)`
      );
    }

    category.appenders.forEach((appender) => {
      configuration.throwExceptionIf(
        config,
        configuration.not(appenders.get(appender)),
        `category "${name}" is not valid (appender "${appender}" is not defined)`
      );
    });

    configuration.throwExceptionIf(
      config,
      configuration.not(levels.getLevel(category.level)),
      `category "${name}" is not valid (level "${category.level}" not recognised;` +
        ` valid levels are ${levels.levels.join(', ')})`
    );
  });

  configuration.throwExceptionIf(
    config,
    configuration.not(config.categories.default),
    'must define a "default" category.'
  );
});

const setup = (config) => {
  categories.clear();
  if (!config) {
    return;
  }

  const categoryNames = Object.keys(config.categories);
  categoryNames.forEach((name) => {
    const category = config.categories[name];
    const categoryAppenders = [];
    category.appenders.forEach((appender) => {
      categoryAppenders.push(appenders.get(appender));
      debug(`Creating category ${name}`);
      categories.set(name, {
        appenders: categoryAppenders,
        level: levels.getLevel(category.level),
        enableCallStack: category.enableCallStack || false,
      });
    });
  });
};

const init = () => {
  setup();
};
init();

configuration.addListener(setup);

const configForCategory = (category) => {
  debug(`configForCategory: searching for config for ${category}`);
  if (categories.has(category)) {
    debug(`configForCategory: ${category} exists in config, returning it`);
    return categories.get(category);
  }

  let sourceCategoryConfig;
  if (category.indexOf('.') > 0) {
    debug(`configForCategory: ${category} has hierarchy, cloning from parents`);
    sourceCategoryConfig = {
      ...configForCategory(category.slice(0, category.lastIndexOf('.'))),
    };
  } else {
    if (!categories.has('default')) {
      setup({ categories: { default: { appenders: ['out'], level: 'OFF' } } });
    }
    debug('configForCategory: cloning default category');
    sourceCategoryConfig = { ...categories.get('default') };
  }
  categories.set(category, sourceCategoryConfig);
  return sourceCategoryConfig;
};

const appendersForCategory = (category) =>
  configForCategory(category).appenders;

const getLevelForCategory = (category) => configForCategory(category).level;
const setLevelForCategory = (category, level) => {
  configForCategory(category).level = level;
};

const getEnableCallStackForCategory = (category) =>
  configForCategory(category).enableCallStack === true;
const setEnableCallStackForCategory = (category, useCallStack) => {
  configForCategory(category).enableCallStack = useCallStack;
};

module.exports = categories;
module.exports = Object.assign(module.exports, {
  appendersForCategory,
  getLevelForCategory,
  setLevelForCategory,
  getEnableCallStackForCategory,
  setEnableCallStackForCategory,
  init,
});


/***/ }),

/***/ 2560:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)('log4js:clustering');
const LoggingEvent = __nccwpck_require__(59060);
const configuration = __nccwpck_require__(65813);

let disabled = false;
let cluster = null;
try {
  // eslint-disable-next-line global-require
  cluster = __nccwpck_require__(35001);
} catch (e) {
  debug('cluster module not present');
  disabled = true;
}

const listeners = [];

let pm2 = false;
let pm2InstanceVar = 'NODE_APP_INSTANCE';

const isPM2Master = () => pm2 && process.env[pm2InstanceVar] === '0';
const isMaster = () =>
  disabled || (cluster && cluster.isMaster) || isPM2Master();

const sendToListeners = (logEvent) => {
  listeners.forEach((l) => l(logEvent));
};

// in a multi-process node environment, worker loggers will use
// process.send
const receiver = (worker, message) => {
  // prior to node v6, the worker parameter was not passed (args were message, handle)
  debug('cluster message received from worker ', worker, ': ', message);
  if (worker.topic && worker.data) {
    message = worker;
    worker = undefined;
  }
  if (message && message.topic && message.topic === 'log4js:message') {
    debug('received message: ', message.data);
    const logEvent = LoggingEvent.deserialise(message.data);
    sendToListeners(logEvent);
  }
};

if (!disabled) {
  configuration.addListener((config) => {
    // clear out the listeners, because configure has been called.
    listeners.length = 0;

    ({
      pm2,
      disableClustering: disabled,
      pm2InstanceVar = 'NODE_APP_INSTANCE',
    } = config);

    debug(`clustering disabled ? ${disabled}`);
    debug(`cluster.isMaster ? ${cluster && cluster.isMaster}`);
    debug(`pm2 enabled ? ${pm2}`);
    debug(`pm2InstanceVar = ${pm2InstanceVar}`);
    debug(`process.env[${pm2InstanceVar}] = ${process.env[pm2InstanceVar]}`);

    // just in case configure is called after shutdown
    if (pm2) {
      process.removeListener('message', receiver);
    }
    if (cluster && cluster.removeListener) {
      cluster.removeListener('message', receiver);
    }

    if (disabled || config.disableClustering) {
      debug('Not listening for cluster messages, because clustering disabled.');
    } else if (isPM2Master()) {
      // PM2 cluster support
      // PM2 runs everything as workers - install pm2-intercom for this to work.
      // we only want one of the app instances to write logs
      debug('listening for PM2 broadcast messages');
      process.on('message', receiver);
    } else if (cluster && cluster.isMaster) {
      debug('listening for cluster messages');
      cluster.on('message', receiver);
    } else {
      debug('not listening for messages, because we are not a master process');
    }
  });
}

module.exports = {
  onlyOnMaster: (fn, notMaster) => (isMaster() ? fn() : notMaster),
  isMaster,
  send: (msg) => {
    if (isMaster()) {
      sendToListeners(msg);
    } else {
      if (!pm2) {
        msg.cluster = {
          workerId: cluster.worker.id,
          worker: process.pid,
        };
      }
      process.send({ topic: 'log4js:message', data: msg.serialise() });
    }
  },
  onMessage: (listener) => {
    listeners.push(listener);
  },
};


/***/ }),

/***/ 65813:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const util = __nccwpck_require__(73837);
const debug = __nccwpck_require__(38237)('log4js:configuration');

const preProcessingListeners = [];
const listeners = [];

const not = (thing) => !thing;

const anObject = (thing) =>
  thing && typeof thing === 'object' && !Array.isArray(thing);

const validIdentifier = (thing) => /^[A-Za-z][A-Za-z0-9_]*$/g.test(thing);

const anInteger = (thing) =>
  thing && typeof thing === 'number' && Number.isInteger(thing);

const addListener = (fn) => {
  listeners.push(fn);
  debug(`Added listener, now ${listeners.length} listeners`);
};

const addPreProcessingListener = (fn) => {
  preProcessingListeners.push(fn);
  debug(
    `Added pre-processing listener, now ${preProcessingListeners.length} listeners`
  );
};

const throwExceptionIf = (config, checks, message) => {
  const tests = Array.isArray(checks) ? checks : [checks];
  tests.forEach((test) => {
    if (test) {
      throw new Error(
        `Problem with log4js configuration: (${util.inspect(config, {
          depth: 5,
        })}) - ${message}`
      );
    }
  });
};

const configure = (candidate) => {
  debug('New configuration to be validated: ', candidate);
  throwExceptionIf(candidate, not(anObject(candidate)), 'must be an object.');

  debug(`Calling pre-processing listeners (${preProcessingListeners.length})`);
  preProcessingListeners.forEach((listener) => listener(candidate));
  debug('Configuration pre-processing finished.');

  debug(`Calling configuration listeners (${listeners.length})`);
  listeners.forEach((listener) => listener(candidate));
  debug('Configuration finished.');
};

module.exports = {
  configure,
  addListener,
  addPreProcessingListener,
  throwExceptionIf,
  anObject,
  anInteger,
  validIdentifier,
  not,
};


/***/ }),

/***/ 61061:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* eslint no-underscore-dangle: ["error", { "allow": ["__statusCode", "_remoteAddress", "__headers", "_logging"] }] */

const levels = __nccwpck_require__(57117);

const DEFAULT_FORMAT =
  ':remote-addr - -' +
  ' ":method :url HTTP/:http-version"' +
  ' :status :content-length ":referrer"' +
  ' ":user-agent"';

/**
 * Return request url path,
 * adding this function prevents the Cyclomatic Complexity,
 * for the assemble_tokens function at low, to pass the tests.
 *
 * @param  {IncomingMessage} req
 * @return {string}
 * @api private
 */
function getUrl(req) {
  return req.originalUrl || req.url;
}

/**
 * Adds custom {token, replacement} objects to defaults,
 * overwriting the defaults if any tokens clash
 *
 * @param  {IncomingMessage} req
 * @param  {ServerResponse} res
 * @param  {Array} customTokens
 *    [{ token: string-or-regexp, replacement: string-or-replace-function }]
 * @return {Array}
 */
function assembleTokens(req, res, customTokens) {
  const arrayUniqueTokens = (array) => {
    const a = array.concat();
    for (let i = 0; i < a.length; ++i) {
      for (let j = i + 1; j < a.length; ++j) {
        // not === because token can be regexp object
        // eslint-disable-next-line eqeqeq
        if (a[i].token == a[j].token) {
          a.splice(j--, 1); // eslint-disable-line no-plusplus
        }
      }
    }
    return a;
  };

  const defaultTokens = [];
  defaultTokens.push({ token: ':url', replacement: getUrl(req) });
  defaultTokens.push({ token: ':protocol', replacement: req.protocol });
  defaultTokens.push({ token: ':hostname', replacement: req.hostname });
  defaultTokens.push({ token: ':method', replacement: req.method });
  defaultTokens.push({
    token: ':status',
    replacement: res.__statusCode || res.statusCode,
  });
  defaultTokens.push({
    token: ':response-time',
    replacement: res.responseTime,
  });
  defaultTokens.push({ token: ':date', replacement: new Date().toUTCString() });
  defaultTokens.push({
    token: ':referrer',
    replacement: req.headers.referer || req.headers.referrer || '',
  });
  defaultTokens.push({
    token: ':http-version',
    replacement: `${req.httpVersionMajor}.${req.httpVersionMinor}`,
  });
  defaultTokens.push({
    token: ':remote-addr',
    replacement:
      req.headers['x-forwarded-for'] ||
      req.ip ||
      req._remoteAddress ||
      (req.socket &&
        (req.socket.remoteAddress ||
          (req.socket.socket && req.socket.socket.remoteAddress))),
  });
  defaultTokens.push({
    token: ':user-agent',
    replacement: req.headers['user-agent'],
  });
  defaultTokens.push({
    token: ':content-length',
    replacement:
      res.getHeader('content-length') ||
      (res.__headers && res.__headers['Content-Length']) ||
      '-',
  });
  defaultTokens.push({
    token: /:req\[([^\]]+)]/g,
    replacement(_, field) {
      return req.headers[field.toLowerCase()];
    },
  });
  defaultTokens.push({
    token: /:res\[([^\]]+)]/g,
    replacement(_, field) {
      return (
        res.getHeader(field.toLowerCase()) ||
        (res.__headers && res.__headers[field])
      );
    },
  });

  return arrayUniqueTokens(customTokens.concat(defaultTokens));
}

/**
 * Return formatted log line.
 *
 * @param  {string} str
 * @param {Array} tokens
 * @return {string}
 * @api private
 */
function format(str, tokens) {
  for (let i = 0; i < tokens.length; i++) {
    str = str.replace(tokens[i].token, tokens[i].replacement);
  }
  return str;
}

/**
 * Return RegExp Object about nolog
 *
 * @param  {(string|Array)} nolog
 * @return {RegExp}
 * @api private
 *
 * syntax
 *  1. String
 *   1.1 "\\.gif"
 *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.gif?fuga
 *         LOGGING http://example.com/hoge.agif
 *   1.2 in "\\.gif|\\.jpg$"
 *         NOT LOGGING http://example.com/hoge.gif and
 *           http://example.com/hoge.gif?fuga and http://example.com/hoge.jpg?fuga
 *         LOGGING http://example.com/hoge.agif,
 *           http://example.com/hoge.ajpg and http://example.com/hoge.jpg?hoge
 *   1.3 in "\\.(gif|jpe?g|png)$"
 *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.jpeg
 *         LOGGING http://example.com/hoge.gif?uid=2 and http://example.com/hoge.jpg?pid=3
 *  2. RegExp
 *   2.1 in /\.(gif|jpe?g|png)$/
 *         SAME AS 1.3
 *  3. Array
 *   3.1 ["\\.jpg$", "\\.png", "\\.gif"]
 *         SAME AS "\\.jpg|\\.png|\\.gif"
 */
function createNoLogCondition(nolog) {
  let regexp = null;

  if (nolog instanceof RegExp) {
    regexp = nolog;
  }

  if (typeof nolog === 'string') {
    regexp = new RegExp(nolog);
  }

  if (Array.isArray(nolog)) {
    // convert to strings
    const regexpsAsStrings = nolog.map((reg) =>
      reg.source ? reg.source : reg
    );
    regexp = new RegExp(regexpsAsStrings.join('|'));
  }

  return regexp;
}

/**
 * Allows users to define rules around status codes to assign them to a specific
 * logging level.
 * There are two types of rules:
 *   - RANGE: matches a code within a certain range
 *     E.g. { 'from': 200, 'to': 299, 'level': 'info' }
 *   - CONTAINS: matches a code to a set of expected codes
 *     E.g. { 'codes': [200, 203], 'level': 'debug' }
 * Note*: Rules are respected only in order of prescendence.
 *
 * @param {Number} statusCode
 * @param {Level} currentLevel
 * @param {Object} ruleSet
 * @return {Level}
 * @api private
 */
function matchRules(statusCode, currentLevel, ruleSet) {
  let level = currentLevel;

  if (ruleSet) {
    const matchedRule = ruleSet.find((rule) => {
      let ruleMatched = false;
      if (rule.from && rule.to) {
        ruleMatched = statusCode >= rule.from && statusCode <= rule.to;
      } else {
        ruleMatched = rule.codes.indexOf(statusCode) !== -1;
      }
      return ruleMatched;
    });
    if (matchedRule) {
      level = levels.getLevel(matchedRule.level, level);
    }
  }
  return level;
}

/**
 * Log requests with the given `options` or a `format` string.
 *
 * Options:
 *
 *   - `format`        Format string, see below for tokens
 *   - `level`         A log4js levels instance. Supports also 'auto'
 *   - `nolog`         A string or RegExp to exclude target logs or function(req, res): boolean
 *   - `statusRules`   A array of rules for setting specific logging levels base on status codes
 *   - `context`       Whether to add a response of express to the context
 *
 * Tokens:
 *
 *   - `:req[header]` ex: `:req[Accept]`
 *   - `:res[header]` ex: `:res[Content-Length]`
 *   - `:http-version`
 *   - `:response-time`
 *   - `:remote-addr`
 *   - `:date`
 *   - `:method`
 *   - `:url`
 *   - `:referrer`
 *   - `:user-agent`
 *   - `:status`
 *
 * @return {Function}
 * @param logger4js
 * @param options
 * @api public
 */
module.exports = function getLogger(logger4js, options) {
  if (typeof options === 'string' || typeof options === 'function') {
    options = { format: options };
  } else {
    options = options || {};
  }

  const thisLogger = logger4js;
  let level = levels.getLevel(options.level, levels.INFO);
  const fmt = options.format || DEFAULT_FORMAT;

  return (req, res, next) => {
    // mount safety
    if (req._logging) return next();

    // nologs
    if (typeof options.nolog === 'function') {
      if (options.nolog(req, res) === true) return next();
    } else {
      const nolog = createNoLogCondition(options.nolog);
      if (nolog && nolog.test(req.originalUrl)) return next();
    }

    if (thisLogger.isLevelEnabled(level) || options.level === 'auto') {
      const start = new Date();
      const { writeHead } = res;

      // flag as logging
      req._logging = true;

      // proxy for statusCode.
      res.writeHead = (code, headers) => {
        res.writeHead = writeHead;
        res.writeHead(code, headers);

        res.__statusCode = code;
        res.__headers = headers || {};
      };

      // hook on end request to emit the log entry of the HTTP request.
      let finished = false;
      const handler = () => {
        if (finished) {
          return;
        }
        finished = true;
        res.responseTime = new Date() - start;
        // status code response level handling
        if (res.statusCode && options.level === 'auto') {
          level = levels.INFO;
          if (res.statusCode >= 300) level = levels.WARN;
          if (res.statusCode >= 400) level = levels.ERROR;
        }
        level = matchRules(res.statusCode, level, options.statusRules);

        const combinedTokens = assembleTokens(req, res, options.tokens || []);

        if (options.context) thisLogger.addContext('res', res);
        if (typeof fmt === 'function') {
          const line = fmt(req, res, (str) => format(str, combinedTokens));
          if (line) thisLogger.log(level, line);
        } else {
          thisLogger.log(level, format(fmt, combinedTokens));
        }
        if (options.context) thisLogger.removeContext('res');
      };
      res.on('end', handler);
      res.on('finish', handler);
      res.on('error', handler);
      res.on('close', handler);
    }

    // ensure next gets always called
    return next();
  };
};


/***/ }),

/***/ 22680:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const dateFormat = __nccwpck_require__(52087);
const os = __nccwpck_require__(22037);
const util = __nccwpck_require__(73837);
const path = __nccwpck_require__(71017);
const url = __nccwpck_require__(57310);
const debug = __nccwpck_require__(38237)('log4js:layouts');

const styles = {
  // styles
  bold: [1, 22],
  italic: [3, 23],
  underline: [4, 24],
  inverse: [7, 27],
  // grayscale
  white: [37, 39],
  grey: [90, 39],
  black: [90, 39],
  // colors
  blue: [34, 39],
  cyan: [36, 39],
  green: [32, 39],
  magenta: [35, 39],
  red: [91, 39],
  yellow: [33, 39],
};

function colorizeStart(style) {
  return style ? `\x1B[${styles[style][0]}m` : '';
}

function colorizeEnd(style) {
  return style ? `\x1B[${styles[style][1]}m` : '';
}

/**
 * Taken from masylum's fork (https://github.com/masylum/log4js-node)
 */
function colorize(str, style) {
  return colorizeStart(style) + str + colorizeEnd(style);
}

function timestampLevelAndCategory(loggingEvent, colour) {
  return colorize(
    util.format(
      '[%s] [%s] %s - ',
      dateFormat.asString(loggingEvent.startTime),
      loggingEvent.level.toString(),
      loggingEvent.categoryName
    ),
    colour
  );
}

/**
 * BasicLayout is a simple layout for storing the logs. The logs are stored
 * in following format:
 * <pre>
 * [startTime] [logLevel] categoryName - message\n
 * </pre>
 *
 * @author Stephan Strittmatter
 */
function basicLayout(loggingEvent) {
  return (
    timestampLevelAndCategory(loggingEvent) + util.format(...loggingEvent.data)
  );
}

/**
 * colouredLayout - taken from masylum's fork.
 * same as basicLayout, but with colours.
 */
function colouredLayout(loggingEvent) {
  return (
    timestampLevelAndCategory(loggingEvent, loggingEvent.level.colour) +
    util.format(...loggingEvent.data)
  );
}

function messagePassThroughLayout(loggingEvent) {
  return util.format(...loggingEvent.data);
}

function dummyLayout(loggingEvent) {
  return loggingEvent.data[0];
}

/**
 * PatternLayout
 * Format for specifiers is %[padding].[truncation][field]{[format]}
 * e.g. %5.10p - left pad the log level by 5 characters, up to a max of 10
 * both padding and truncation can be negative.
 * Negative truncation = trunc from end of string
 * Positive truncation = trunc from start of string
 * Negative padding = pad right
 * Positive padding = pad left
 *
 * Fields can be any of:
 *  - %r time in toLocaleTimeString format
 *  - %p log level
 *  - %c log category
 *  - %h hostname
 *  - %m log data
 *  - %d date in constious formats
 *  - %% %
 *  - %n newline
 *  - %z pid
 *  - %f filename
 *  - %l line number
 *  - %o column postion
 *  - %s call stack
 *  - %x{<tokenname>} add dynamic tokens to your log. Tokens are specified in the tokens parameter
 *  - %X{<tokenname>} add dynamic tokens to your log. Tokens are specified in logger context
 * You can use %[ and %] to define a colored block.
 *
 * Tokens are specified as simple key:value objects.
 * The key represents the token name whereas the value can be a string or function
 * which is called to extract the value to put in the log message. If token is not
 * found, it doesn't replace the field.
 *
 * A sample token would be: { 'pid' : function() { return process.pid; } }
 *
 * Takes a pattern string, array of tokens and returns a layout function.
 * @return {Function}
 * @param pattern
 * @param tokens
 * @param timezoneOffset
 *
 * @authors ['Stephan Strittmatter', 'Jan Schmidle']
 */
function patternLayout(pattern, tokens) {
  const TTCC_CONVERSION_PATTERN = '%r %p %c - %m%n';
  const regex =
    /%(-?[0-9]+)?(\.?-?[0-9]+)?([[\]cdhmnprzxXyflos%])(\{([^}]+)\})?|([^%]+)/;

  pattern = pattern || TTCC_CONVERSION_PATTERN;

  function categoryName(loggingEvent, specifier) {
    let loggerName = loggingEvent.categoryName;
    if (specifier) {
      const precision = parseInt(specifier, 10);
      const loggerNameBits = loggerName.split('.');
      if (precision < loggerNameBits.length) {
        loggerName = loggerNameBits
          .slice(loggerNameBits.length - precision)
          .join('.');
      }
    }
    return loggerName;
  }

  function formatAsDate(loggingEvent, specifier) {
    let format = dateFormat.ISO8601_FORMAT;
    if (specifier) {
      format = specifier;
      // Pick up special cases
      switch (format) {
        case 'ISO8601':
        case 'ISO8601_FORMAT':
          format = dateFormat.ISO8601_FORMAT;
          break;
        case 'ISO8601_WITH_TZ_OFFSET':
        case 'ISO8601_WITH_TZ_OFFSET_FORMAT':
          format = dateFormat.ISO8601_WITH_TZ_OFFSET_FORMAT;
          break;
        case 'ABSOLUTE':
          process.emitWarning(
            'Pattern %d{ABSOLUTE} is deprecated in favor of %d{ABSOLUTETIME}. ' +
              'Please use %d{ABSOLUTETIME} instead.',
            'DeprecationWarning',
            'log4js-node-DEP0003'
          );
          debug(
            '[log4js-node-DEP0003]',
            'DEPRECATION: Pattern %d{ABSOLUTE} is deprecated and replaced by %d{ABSOLUTETIME}.'
          );
        // falls through
        case 'ABSOLUTETIME':
        case 'ABSOLUTETIME_FORMAT':
          format = dateFormat.ABSOLUTETIME_FORMAT;
          break;
        case 'DATE':
          process.emitWarning(
            'Pattern %d{DATE} is deprecated due to the confusion it causes when used. ' +
              'Please use %d{DATETIME} instead.',
            'DeprecationWarning',
            'log4js-node-DEP0004'
          );
          debug(
            '[log4js-node-DEP0004]',
            'DEPRECATION: Pattern %d{DATE} is deprecated and replaced by %d{DATETIME}.'
          );
        // falls through
        case 'DATETIME':
        case 'DATETIME_FORMAT':
          format = dateFormat.DATETIME_FORMAT;
          break;
        // no default
      }
    }
    // Format the date
    return dateFormat.asString(format, loggingEvent.startTime);
  }

  function hostname() {
    return os.hostname().toString();
  }

  function formatMessage(loggingEvent) {
    return util.format(...loggingEvent.data);
  }

  function endOfLine() {
    return os.EOL;
  }

  function logLevel(loggingEvent) {
    return loggingEvent.level.toString();
  }

  function startTime(loggingEvent) {
    return dateFormat.asString('hh:mm:ss', loggingEvent.startTime);
  }

  function startColour(loggingEvent) {
    return colorizeStart(loggingEvent.level.colour);
  }

  function endColour(loggingEvent) {
    return colorizeEnd(loggingEvent.level.colour);
  }

  function percent() {
    return '%';
  }

  function pid(loggingEvent) {
    return loggingEvent && loggingEvent.pid
      ? loggingEvent.pid.toString()
      : process.pid.toString();
  }

  function clusterInfo() {
    // this used to try to return the master and worker pids,
    // but it would never have worked because master pid is not available to workers
    // leaving this here to maintain compatibility for patterns
    return pid();
  }

  function userDefined(loggingEvent, specifier) {
    if (typeof tokens[specifier] !== 'undefined') {
      return typeof tokens[specifier] === 'function'
        ? tokens[specifier](loggingEvent)
        : tokens[specifier];
    }

    return null;
  }

  function contextDefined(loggingEvent, specifier) {
    const resolver = loggingEvent.context[specifier];

    if (typeof resolver !== 'undefined') {
      return typeof resolver === 'function' ? resolver(loggingEvent) : resolver;
    }

    return null;
  }

  function fileName(loggingEvent, specifier) {
    let filename = loggingEvent.fileName || '';

    // support for ESM as it uses url instead of path for file
    /* istanbul ignore next: unsure how to simulate ESM for test coverage */
    const convertFileURLToPath = function (filepath) {
      const urlPrefix = 'file://';
      if (filepath.startsWith(urlPrefix)) {
        // https://nodejs.org/api/url.html#urlfileurltopathurl
        if (typeof url.fileURLToPath === 'function') {
          filepath = url.fileURLToPath(filepath);
        }
        // backward-compatible for nodejs pre-10.12.0 (without url.fileURLToPath method)
        else {
          // posix: file:///hello/world/foo.txt -> /hello/world/foo.txt -> /hello/world/foo.txt
          // win32: file:///C:/path/foo.txt     -> /C:/path/foo.txt     -> \C:\path\foo.txt     -> C:\path\foo.txt
          // win32: file://nas/foo.txt          -> //nas/foo.txt        -> nas\foo.txt          -> \\nas\foo.txt
          filepath = path.normalize(
            filepath.replace(new RegExp(`^${urlPrefix}`), '')
          );
          if (process.platform === 'win32') {
            if (filepath.startsWith('\\')) {
              filepath = filepath.slice(1);
            } else {
              filepath = path.sep + path.sep + filepath;
            }
          }
        }
      }
      return filepath;
    };
    filename = convertFileURLToPath(filename);

    if (specifier) {
      const fileDepth = parseInt(specifier, 10);
      const fileList = filename.split(path.sep);
      if (fileList.length > fileDepth) {
        filename = fileList.slice(-fileDepth).join(path.sep);
      }
    }

    return filename;
  }

  function lineNumber(loggingEvent) {
    return loggingEvent.lineNumber ? `${loggingEvent.lineNumber}` : '';
  }

  function columnNumber(loggingEvent) {
    return loggingEvent.columnNumber ? `${loggingEvent.columnNumber}` : '';
  }

  function callStack(loggingEvent) {
    return loggingEvent.callStack || '';
  }

  const replacers = {
    c: categoryName,
    d: formatAsDate,
    h: hostname,
    m: formatMessage,
    n: endOfLine,
    p: logLevel,
    r: startTime,
    '[': startColour,
    ']': endColour,
    y: clusterInfo,
    z: pid,
    '%': percent,
    x: userDefined,
    X: contextDefined,
    f: fileName,
    l: lineNumber,
    o: columnNumber,
    s: callStack,
  };

  function replaceToken(conversionCharacter, loggingEvent, specifier) {
    return replacers[conversionCharacter](loggingEvent, specifier);
  }

  function truncate(truncation, toTruncate) {
    let len;
    if (truncation) {
      len = parseInt(truncation.slice(1), 10);
      // negative truncate length means truncate from end of string
      return len > 0 ? toTruncate.slice(0, len) : toTruncate.slice(len);
    }

    return toTruncate;
  }

  function pad(padding, toPad) {
    let len;
    if (padding) {
      if (padding.charAt(0) === '-') {
        len = parseInt(padding.slice(1), 10);
        // Right pad with spaces
        while (toPad.length < len) {
          toPad += ' ';
        }
      } else {
        len = parseInt(padding, 10);
        // Left pad with spaces
        while (toPad.length < len) {
          toPad = ` ${toPad}`;
        }
      }
    }
    return toPad;
  }

  function truncateAndPad(toTruncAndPad, truncation, padding) {
    let replacement = toTruncAndPad;
    replacement = truncate(truncation, replacement);
    replacement = pad(padding, replacement);
    return replacement;
  }

  return function (loggingEvent) {
    let formattedString = '';
    let result;
    let searchString = pattern;

    while ((result = regex.exec(searchString)) !== null) {
      // const matchedString = result[0];
      const padding = result[1];
      const truncation = result[2];
      const conversionCharacter = result[3];
      const specifier = result[5];
      const text = result[6];

      // Check if the pattern matched was just normal text
      if (text) {
        formattedString += text.toString();
      } else {
        // Create a raw replacement string based on the conversion
        // character and specifier
        const replacement = replaceToken(
          conversionCharacter,
          loggingEvent,
          specifier
        );
        formattedString += truncateAndPad(replacement, truncation, padding);
      }
      searchString = searchString.slice(result.index + result[0].length);
    }
    return formattedString;
  };
}

const layoutMakers = {
  messagePassThrough() {
    return messagePassThroughLayout;
  },
  basic() {
    return basicLayout;
  },
  colored() {
    return colouredLayout;
  },
  coloured() {
    return colouredLayout;
  },
  pattern(config) {
    return patternLayout(config && config.pattern, config && config.tokens);
  },
  dummy() {
    return dummyLayout;
  },
};

module.exports = {
  basicLayout,
  messagePassThroughLayout,
  patternLayout,
  colouredLayout,
  coloredLayout: colouredLayout,
  dummyLayout,
  addLayout(name, serializerGenerator) {
    layoutMakers[name] = serializerGenerator;
  },
  layout(name, config) {
    return layoutMakers[name] && layoutMakers[name](config);
  },
};


/***/ }),

/***/ 57117:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const configuration = __nccwpck_require__(65813);

const validColours = [
  'white',
  'grey',
  'black',
  'blue',
  'cyan',
  'green',
  'magenta',
  'red',
  'yellow',
];

class Level {
  constructor(level, levelStr, colour) {
    this.level = level;
    this.levelStr = levelStr;
    this.colour = colour;
  }

  toString() {
    return this.levelStr;
  }

  /**
   * converts given String to corresponding Level
   * @param {(Level|string)} sArg -- String value of Level OR Log4js.Level
   * @param {Level} [defaultLevel] -- default Level, if no String representation
   * @return {Level}
   */
  static getLevel(sArg, defaultLevel) {
    if (!sArg) {
      return defaultLevel;
    }

    if (sArg instanceof Level) {
      return sArg;
    }

    // a json-serialised level won't be an instance of Level (see issue #768)
    if (sArg instanceof Object && sArg.levelStr) {
      sArg = sArg.levelStr;
    }

    return Level[sArg.toString().toUpperCase()] || defaultLevel;
  }

  static addLevels(customLevels) {
    if (customLevels) {
      const levels = Object.keys(customLevels);
      levels.forEach((l) => {
        const levelStr = l.toUpperCase();
        Level[levelStr] = new Level(
          customLevels[l].value,
          levelStr,
          customLevels[l].colour
        );
        const existingLevelIndex = Level.levels.findIndex(
          (lvl) => lvl.levelStr === levelStr
        );
        if (existingLevelIndex > -1) {
          Level.levels[existingLevelIndex] = Level[levelStr];
        } else {
          Level.levels.push(Level[levelStr]);
        }
      });
      Level.levels.sort((a, b) => a.level - b.level);
    }
  }

  isLessThanOrEqualTo(otherLevel) {
    if (typeof otherLevel === 'string') {
      otherLevel = Level.getLevel(otherLevel);
    }
    return this.level <= otherLevel.level;
  }

  isGreaterThanOrEqualTo(otherLevel) {
    if (typeof otherLevel === 'string') {
      otherLevel = Level.getLevel(otherLevel);
    }
    return this.level >= otherLevel.level;
  }

  isEqualTo(otherLevel) {
    if (typeof otherLevel === 'string') {
      otherLevel = Level.getLevel(otherLevel);
    }
    return this.level === otherLevel.level;
  }
}

Level.levels = [];
Level.addLevels({
  ALL: { value: Number.MIN_VALUE, colour: 'grey' },
  TRACE: { value: 5000, colour: 'blue' },
  DEBUG: { value: 10000, colour: 'cyan' },
  INFO: { value: 20000, colour: 'green' },
  WARN: { value: 30000, colour: 'yellow' },
  ERROR: { value: 40000, colour: 'red' },
  FATAL: { value: 50000, colour: 'magenta' },
  MARK: { value: 9007199254740992, colour: 'grey' }, // 2^53
  OFF: { value: Number.MAX_VALUE, colour: 'grey' },
});

configuration.addListener((config) => {
  const levelConfig = config.levels;
  if (levelConfig) {
    configuration.throwExceptionIf(
      config,
      configuration.not(configuration.anObject(levelConfig)),
      'levels must be an object'
    );
    const newLevels = Object.keys(levelConfig);
    newLevels.forEach((l) => {
      configuration.throwExceptionIf(
        config,
        configuration.not(configuration.validIdentifier(l)),
        `level name "${l}" is not a valid identifier (must start with a letter, only contain A-Z,a-z,0-9,_)`
      );
      configuration.throwExceptionIf(
        config,
        configuration.not(configuration.anObject(levelConfig[l])),
        `level "${l}" must be an object`
      );
      configuration.throwExceptionIf(
        config,
        configuration.not(levelConfig[l].value),
        `level "${l}" must have a 'value' property`
      );
      configuration.throwExceptionIf(
        config,
        configuration.not(configuration.anInteger(levelConfig[l].value)),
        `level "${l}".value must have an integer value`
      );
      configuration.throwExceptionIf(
        config,
        configuration.not(levelConfig[l].colour),
        `level "${l}" must have a 'colour' property`
      );
      configuration.throwExceptionIf(
        config,
        configuration.not(validColours.indexOf(levelConfig[l].colour) > -1),
        `level "${l}".colour must be one of ${validColours.join(', ')}`
      );
    });
  }
});

configuration.addListener((config) => {
  Level.addLevels(config.levels);
});

module.exports = Level;


/***/ }),

/***/ 13048:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/**
 * @fileoverview log4js is a library to log in JavaScript in similar manner
 * than in log4j for Java (but not really).
 *
 * <h3>Example:</h3>
 * <pre>
 *  const logging = require('log4js');
 *  const log = logging.getLogger('some-category');
 *
 *  //call the log
 *  log.trace('trace me' );
 * </pre>
 *
 * NOTE: the authors below are the original browser-based log4js authors
 * don't try to contact them about bugs in this version :)
 * @author Stephan Strittmatter - http://jroller.com/page/stritti
 * @author Seth Chisamore - http://www.chisamore.com
 * @since 2005-05-20
 * Website: http://log4js.berlios.de
 */
const debug = __nccwpck_require__(38237)('log4js:main');
const fs = __nccwpck_require__(57147);
const deepClone = __nccwpck_require__(11868)({ proto: true });
const configuration = __nccwpck_require__(65813);
const layouts = __nccwpck_require__(22680);
const levels = __nccwpck_require__(57117);
const appenders = __nccwpck_require__(5709);
const categories = __nccwpck_require__(45798);
const Logger = __nccwpck_require__(88048);
const clustering = __nccwpck_require__(2560);
const connectLogger = __nccwpck_require__(61061);
const recordingModule = __nccwpck_require__(578);

let enabled = false;

function sendLogEventToAppender(logEvent) {
  if (!enabled) return;
  debug('Received log event ', logEvent);
  const categoryAppenders = categories.appendersForCategory(
    logEvent.categoryName
  );
  categoryAppenders.forEach((appender) => {
    appender(logEvent);
  });
}

function loadConfigurationFile(filename) {
  debug(`Loading configuration from ${filename}`);
  try {
    return JSON.parse(fs.readFileSync(filename, 'utf8'));
  } catch (e) {
    throw new Error(
      `Problem reading config from file "${filename}". Error was ${e.message}`,
      e
    );
  }
}

function configure(configurationFileOrObject) {
  if (enabled) {
    // eslint-disable-next-line no-use-before-define
    shutdown();
  }

  let configObject = configurationFileOrObject;

  if (typeof configObject === 'string') {
    configObject = loadConfigurationFile(configurationFileOrObject);
  }
  debug(`Configuration is ${configObject}`);

  configuration.configure(deepClone(configObject));

  clustering.onMessage(sendLogEventToAppender);

  enabled = true;

  // eslint-disable-next-line no-use-before-define
  return log4js;
}

function recording() {
  return recordingModule;
}

/**
 * Shutdown all log appenders. This will first disable all writing to appenders
 * and then call the shutdown function each appender.
 *
 * @params {Function} cb - The callback to be invoked once all appenders have
 *  shutdown. If an error occurs, the callback will be given the error object
 *  as the first argument.
 */
function shutdown(cb) {
  debug('Shutdown called. Disabling all log writing.');
  // First, disable all writing to appenders. This prevents appenders from
  // not being able to be drained because of run-away log writes.
  enabled = false;

  // Clone out to maintain a reference
  const appendersToCheck = Array.from(appenders.values());

  // Reset immediately to prevent leaks
  appenders.init();
  categories.init();

  // Call each of the shutdown functions in parallel
  const shutdownFunctions = appendersToCheck.reduceRight(
    (accum, next) => (next.shutdown ? accum + 1 : accum),
    0
  );
  if (shutdownFunctions === 0) {
    debug('No appenders with shutdown functions found.');
    return cb !== undefined && cb();
  }

  let completed = 0;
  let error;
  debug(`Found ${shutdownFunctions} appenders with shutdown functions.`);
  function complete(err) {
    error = error || err;
    completed += 1;
    debug(`Appender shutdowns complete: ${completed} / ${shutdownFunctions}`);
    if (completed >= shutdownFunctions) {
      debug('All shutdown functions completed.');
      if (cb) {
        cb(error);
      }
    }
  }
  appendersToCheck
    .filter((a) => a.shutdown)
    .forEach((a) => a.shutdown(complete));

  return null;
}

/**
 * Get a logger instance.
 * @static
 * @param loggerCategoryName
 * @return {Logger} instance of logger for the category
 */
function getLogger(category) {
  if (!enabled) {
    configure(
      process.env.LOG4JS_CONFIG || {
        appenders: { out: { type: 'stdout' } },
        categories: { default: { appenders: ['out'], level: 'OFF' } },
      }
    );
  }
  return new Logger(category || 'default');
}

/**
 * @name log4js
 * @namespace Log4js
 * @property getLogger
 * @property configure
 * @property shutdown
 */
const log4js = {
  getLogger,
  configure,
  shutdown,
  connectLogger,
  levels,
  addLayout: layouts.addLayout,
  recording,
};

module.exports = log4js;


/***/ }),

/***/ 88048:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* eslint no-underscore-dangle: ["error", { "allow": ["_log"] }] */

const debug = __nccwpck_require__(38237)('log4js:logger');
const LoggingEvent = __nccwpck_require__(59060);
const levels = __nccwpck_require__(57117);
const clustering = __nccwpck_require__(2560);
const categories = __nccwpck_require__(45798);
const configuration = __nccwpck_require__(65813);

const stackReg = /at (?:(.+)\s+\()?(?:(.+?):(\d+)(?::(\d+))?|([^)]+))\)?/;

function defaultParseCallStack(data, skipIdx = 4) {
  try {
    const stacklines = data.stack.split('\n').slice(skipIdx);
    const lineMatch = stackReg.exec(stacklines[0]);
    /* istanbul ignore else: failsafe */
    if (lineMatch && lineMatch.length === 6) {
      return {
        functionName: lineMatch[1],
        fileName: lineMatch[2],
        lineNumber: parseInt(lineMatch[3], 10),
        columnNumber: parseInt(lineMatch[4], 10),
        callStack: stacklines.join('\n'),
      };
      // eslint-disable-next-line no-else-return
    } else {
      // will never get here unless nodejs has changes to Error
      console.error('log4js.logger - defaultParseCallStack error'); // eslint-disable-line no-console
    }
  } catch (err) {
    // will never get error unless nodejs has breaking changes to Error
    console.error('log4js.logger - defaultParseCallStack error', err); // eslint-disable-line no-console
  }
  return null;
}

/**
 * Logger to log messages.
 * use {@see log4js#getLogger(String)} to get an instance.
 *
 * @name Logger
 * @namespace Log4js
 * @param name name of category to log to
 * @param level - the loglevel for the category
 * @param dispatch - the function which will receive the logevents
 *
 * @author Stephan Strittmatter
 */
class Logger {
  constructor(name) {
    if (!name) {
      throw new Error('No category provided.');
    }
    this.category = name;
    this.context = {};
    this.parseCallStack = defaultParseCallStack;
    debug(`Logger created (${this.category}, ${this.level})`);
  }

  get level() {
    return levels.getLevel(
      categories.getLevelForCategory(this.category),
      levels.OFF
    );
  }

  set level(level) {
    categories.setLevelForCategory(
      this.category,
      levels.getLevel(level, this.level)
    );
  }

  get useCallStack() {
    return categories.getEnableCallStackForCategory(this.category);
  }

  set useCallStack(bool) {
    categories.setEnableCallStackForCategory(this.category, bool === true);
  }

  log(level, ...args) {
    const logLevel = levels.getLevel(level);
    if (!logLevel) {
      if (configuration.validIdentifier(level) && args.length > 0) {
        // logLevel not found but of valid signature, WARN before fallback to INFO
        this.log(
          levels.WARN,
          'log4js:logger.log: valid log-level not found as first parameter given:',
          level
        );
        this.log(levels.INFO, `[${level}]`, ...args);
      } else {
        // apart from fallback, allow .log(...args) to be synonym with .log("INFO", ...args)
        this.log(levels.INFO, level, ...args);
      }
    } else if (this.isLevelEnabled(logLevel)) {
      this._log(logLevel, args);
    }
  }

  isLevelEnabled(otherLevel) {
    return this.level.isLessThanOrEqualTo(otherLevel);
  }

  _log(level, data) {
    debug(`sending log data (${level}) to appenders`);
    const loggingEvent = new LoggingEvent(
      this.category,
      level,
      data,
      this.context,
      this.useCallStack && this.parseCallStack(new Error())
    );
    clustering.send(loggingEvent);
  }

  addContext(key, value) {
    this.context[key] = value;
  }

  removeContext(key) {
    delete this.context[key];
  }

  clearContext() {
    this.context = {};
  }

  setParseCallStackFunction(parseFunction) {
    this.parseCallStack = parseFunction;
  }
}

function addLevelMethods(target) {
  const level = levels.getLevel(target);

  const levelStrLower = level.toString().toLowerCase();
  const levelMethod = levelStrLower.replace(/_([a-z])/g, (g) =>
    g[1].toUpperCase()
  );
  const isLevelMethod = levelMethod[0].toUpperCase() + levelMethod.slice(1);

  Logger.prototype[`is${isLevelMethod}Enabled`] = function () {
    return this.isLevelEnabled(level);
  };

  Logger.prototype[levelMethod] = function (...args) {
    this.log(level, ...args);
  };
}

levels.levels.forEach(addLevelMethods);

configuration.addListener(() => {
  levels.levels.forEach(addLevelMethods);
});

module.exports = Logger;


/***/ }),

/***/ 99623:
/***/ (function(module, __unused_webpack_exports, __nccwpck_require__) {

/* module decorator */ module = __nccwpck_require__.nmd(module);
//! moment.js
//! version : 2.29.4
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
     true ? module.exports = factory() :
    0
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i,
            arrLen = arr.length;
        for (i = 0; i < arrLen; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i,
            prop,
            val,
            momentPropertiesLen = momentProperties.length;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentPropertiesLen > 0) {
            for (i = 0; i < momentPropertiesLen; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key,
                    argLen = arguments.length;
                for (i = 0; i < argLen; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens =
            /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i,
                prioritizedLen = prioritized.length;
            for (i = 0; i < prioritizedLen; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord =
            /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(
                    /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
                    function (matched, p1, p2, p3, p4) {
                        return p1 || p2 || p3 || p4;
                    }
                )
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback,
            tokenLen;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        tokenLen = token.length;
        for (i = 0; i < tokenLen; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths =
            'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
            ),
        defaultLocaleMonthsShort =
            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(
        ['w', 'ww', 'W', 'WW'],
        function (input, week, config, token) {
            week[token.substr(0, 1)] = toInt(input);
        }
    );

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays =
            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function isLocaleNameSane(name) {
        // Prevent names that look like filesystem paths, i.e contain '/' or '\'
        return name.match('^[^/\\\\]*$') != null;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            "object" !== 'undefined' &&
            module &&
            module.exports &&
            isLocaleNameSane(name)
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex =
            /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex =
            /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 =
            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat,
            isoDatesLen = isoDates.length,
            isoTimesLen = isoTimes.length;

        if (match) {
            getParsingFlags(config).iso = true;
            for (i = 0, l = isoDatesLen; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimesLen; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^()]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era,
            tokenLen;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];
        tokenLen = tokens.length;
        for (i = 0; i < tokenLen; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false,
            configfLen = config._f.length;

        if (configfLen === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < configfLen; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i,
            orderLen = ordering.length;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < orderLen; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex =
            /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property,
            propertyLen = properties.length;

        for (i = 0; i < propertyLen; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (!arguments[0]) {
                time = undefined;
                formats = undefined;
            } else if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(
        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],
        function (input, array, config, token) {
            var era = config._locale.erasParse(input, token, config._strict);
            if (era) {
                getParsingFlags(config).era = era;
            } else {
                getParsingFlags(config).invalidEra = input;
            }
        }
    );

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(
        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],
        function (input, week, config, token) {
            week[token.substr(0, 2)] = toInt(input);
        }
    );

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.29.4';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));


/***/ }),

/***/ 80900:
/***/ ((module) => {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),

/***/ 11868:
/***/ ((module) => {

"use strict";

module.exports = rfdc

function copyBuffer (cur) {
  if (cur instanceof Buffer) {
    return Buffer.from(cur)
  }

  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length)
}

function rfdc (opts) {
  opts = opts || {}

  if (opts.circles) return rfdcCircles(opts)
  return opts.proto ? cloneProto : clone

  function cloneArray (a, fn) {
    var keys = Object.keys(a)
    var a2 = new Array(keys.length)
    for (var i = 0; i < keys.length; i++) {
      var k = keys[i]
      var cur = a[k]
      if (typeof cur !== 'object' || cur === null) {
        a2[k] = cur
      } else if (cur instanceof Date) {
        a2[k] = new Date(cur)
      } else if (ArrayBuffer.isView(cur)) {
        a2[k] = copyBuffer(cur)
      } else {
        a2[k] = fn(cur)
      }
    }
    return a2
  }

  function clone (o) {
    if (typeof o !== 'object' || o === null) return o
    if (o instanceof Date) return new Date(o)
    if (Array.isArray(o)) return cloneArray(o, clone)
    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))
    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))
    var o2 = {}
    for (var k in o) {
      if (Object.hasOwnProperty.call(o, k) === false) continue
      var cur = o[k]
      if (typeof cur !== 'object' || cur === null) {
        o2[k] = cur
      } else if (cur instanceof Date) {
        o2[k] = new Date(cur)
      } else if (cur instanceof Map) {
        o2[k] = new Map(cloneArray(Array.from(cur), clone))
      } else if (cur instanceof Set) {
        o2[k] = new Set(cloneArray(Array.from(cur), clone))
      } else if (ArrayBuffer.isView(cur)) {
        o2[k] = copyBuffer(cur)
      } else {
        o2[k] = clone(cur)
      }
    }
    return o2
  }

  function cloneProto (o) {
    if (typeof o !== 'object' || o === null) return o
    if (o instanceof Date) return new Date(o)
    if (Array.isArray(o)) return cloneArray(o, cloneProto)
    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))
    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))
    var o2 = {}
    for (var k in o) {
      var cur = o[k]
      if (typeof cur !== 'object' || cur === null) {
        o2[k] = cur
      } else if (cur instanceof Date) {
        o2[k] = new Date(cur)
      } else if (cur instanceof Map) {
        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))
      } else if (cur instanceof Set) {
        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))
      } else if (ArrayBuffer.isView(cur)) {
        o2[k] = copyBuffer(cur)
      } else {
        o2[k] = cloneProto(cur)
      }
    }
    return o2
  }
}

function rfdcCircles (opts) {
  var refs = []
  var refsNew = []

  return opts.proto ? cloneProto : clone

  function cloneArray (a, fn) {
    var keys = Object.keys(a)
    var a2 = new Array(keys.length)
    for (var i = 0; i < keys.length; i++) {
      var k = keys[i]
      var cur = a[k]
      if (typeof cur !== 'object' || cur === null) {
        a2[k] = cur
      } else if (cur instanceof Date) {
        a2[k] = new Date(cur)
      } else if (ArrayBuffer.isView(cur)) {
        a2[k] = copyBuffer(cur)
      } else {
        var index = refs.indexOf(cur)
        if (index !== -1) {
          a2[k] = refsNew[index]
        } else {
          a2[k] = fn(cur)
        }
      }
    }
    return a2
  }

  function clone (o) {
    if (typeof o !== 'object' || o === null) return o
    if (o instanceof Date) return new Date(o)
    if (Array.isArray(o)) return cloneArray(o, clone)
    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))
    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))
    var o2 = {}
    refs.push(o)
    refsNew.push(o2)
    for (var k in o) {
      if (Object.hasOwnProperty.call(o, k) === false) continue
      var cur = o[k]
      if (typeof cur !== 'object' || cur === null) {
        o2[k] = cur
      } else if (cur instanceof Date) {
        o2[k] = new Date(cur)
      } else if (cur instanceof Map) {
        o2[k] = new Map(cloneArray(Array.from(cur), clone))
      } else if (cur instanceof Set) {
        o2[k] = new Set(cloneArray(Array.from(cur), clone))
      } else if (ArrayBuffer.isView(cur)) {
        o2[k] = copyBuffer(cur)
      } else {
        var i = refs.indexOf(cur)
        if (i !== -1) {
          o2[k] = refsNew[i]
        } else {
          o2[k] = clone(cur)
        }
      }
    }
    refs.pop()
    refsNew.pop()
    return o2
  }

  function cloneProto (o) {
    if (typeof o !== 'object' || o === null) return o
    if (o instanceof Date) return new Date(o)
    if (Array.isArray(o)) return cloneArray(o, cloneProto)
    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))
    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))
    var o2 = {}
    refs.push(o)
    refsNew.push(o2)
    for (var k in o) {
      var cur = o[k]
      if (typeof cur !== 'object' || cur === null) {
        o2[k] = cur
      } else if (cur instanceof Date) {
        o2[k] = new Date(cur)
      } else if (cur instanceof Map) {
        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))
      } else if (cur instanceof Set) {
        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))
      } else if (ArrayBuffer.isView(cur)) {
        o2[k] = copyBuffer(cur)
      } else {
        var i = refs.indexOf(cur)
        if (i !== -1) {
          o2[k] = refsNew[i]
        } else {
          o2[k] = cloneProto(cur)
        }
      }
    }
    refs.pop()
    refsNew.pop()
    return o2
  }
}


/***/ }),

/***/ 93917:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const RollingFileWriteStream = __nccwpck_require__(8796);

// just to adapt the previous version
class DateRollingFileStream extends RollingFileWriteStream {
  constructor(filename, pattern, options) {
    if (pattern && typeof(pattern) === 'object') {
      options = pattern;
      pattern = null;
    }
    if (!options) {
      options = {};
    }
    if (!pattern) {
      pattern = 'yyyy-MM-dd';
    }
    options.pattern = pattern;
    if (!options.numBackups && options.numBackups !== 0) {
      if (!options.daysToKeep && options.daysToKeep !== 0) {
        options.daysToKeep = 1;
      } else {
        process.emitWarning(
          "options.daysToKeep is deprecated due to the confusion it causes when used " + 
          "together with file size rolling. Please use options.numBackups instead.",
          "DeprecationWarning", "streamroller-DEP0001"
        );
      }
      options.numBackups = options.daysToKeep;
    } else {
      options.daysToKeep = options.numBackups;
    }
    super(filename, options);
    this.mode = this.options.mode;
  }

  get theStream() {
    return this.currentFileStream;
  }

}

module.exports = DateRollingFileStream;


/***/ }),

/***/ 95476:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const RollingFileWriteStream = __nccwpck_require__(8796);

// just to adapt the previous version
class RollingFileStream extends RollingFileWriteStream {
  constructor(filename, size, backups, options) {
    if (!options) {
      options = {};
    }
    if (size) {
      options.maxSize = size;
    }
    if (!options.numBackups && options.numBackups !== 0) {
      if (!backups && backups !== 0) {
        backups = 1;
      }
      options.numBackups = backups;
    }
    super(filename, options);
    this.backups = options.numBackups;
    this.size = this.options.maxSize;
  }

  get theStream() {
    return this.currentFileStream;
  }

}

module.exports = RollingFileStream;


/***/ }),

/***/ 8796:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)("streamroller:RollingFileWriteStream");
const fs = __nccwpck_require__(5630);
const path = __nccwpck_require__(71017);
const os = __nccwpck_require__(22037);
const newNow = __nccwpck_require__(79652);
const format = __nccwpck_require__(52087);
const { Writable } = __nccwpck_require__(12781);
const fileNameFormatter = __nccwpck_require__(10360);
const fileNameParser = __nccwpck_require__(22592);
const moveAndMaybeCompressFile = __nccwpck_require__(66);

const deleteFiles = fileNames => {
  debug(`deleteFiles: files to delete: ${fileNames}`);
  return Promise.all(fileNames.map(f => fs.unlink(f).catch((e) => {
    debug(`deleteFiles: error when unlinking ${f}, ignoring. Error was ${e}`);
  })));
};

/**
 * RollingFileWriteStream is mainly used when writing to a file rolling by date or size.
 * RollingFileWriteStream inherits from stream.Writable
 */
class RollingFileWriteStream extends Writable {
  /**
   * Create a RollingFileWriteStream
   * @constructor
   * @param {string} filePath - The file path to write.
   * @param {object} options - The extra options
   * @param {number} options.numToKeep - The max numbers of files to keep.
   * @param {number} options.maxSize - The maxSize one file can reach. Unit is Byte.
   *                                   This should be more than 1024. The default is 0.
   *                                   If not specified or 0, then no log rolling will happen.
   * @param {string} options.mode - The mode of the files. The default is '0600'. Refer to stream.writable for more.
   * @param {string} options.flags - The default is 'a'. Refer to stream.flags for more.
   * @param {boolean} options.compress - Whether to compress backup files.
   * @param {boolean} options.keepFileExt - Whether to keep the file extension.
   * @param {string} options.pattern - The date string pattern in the file name.
   * @param {boolean} options.alwaysIncludePattern - Whether to add date to the name of the first file.
   */
  constructor(filePath, options) {
    debug(`constructor: creating RollingFileWriteStream. path=${filePath}`);
    if (typeof filePath !== "string" || filePath.length === 0) {
      throw new Error(`Invalid filename: ${filePath}`);
    } else if (filePath.endsWith(path.sep)) {
      throw new Error(`Filename is a directory: ${filePath}`);
    } else {
      // handle ~ expansion: https://github.com/nodejs/node/issues/684
      // exclude ~ and ~filename as these can be valid files
      filePath = filePath.replace(new RegExp(`^~(?=${path.sep}.+)`), os.homedir());
    }
    super(options);
    this.options = this._parseOption(options);
    this.fileObject = path.parse(filePath);
    if (this.fileObject.dir === "") {
      this.fileObject = path.parse(path.join(process.cwd(), filePath));
    }
    this.fileFormatter = fileNameFormatter({
      file: this.fileObject,
      alwaysIncludeDate: this.options.alwaysIncludePattern,
      needsIndex: this.options.maxSize < Number.MAX_SAFE_INTEGER,
      compress: this.options.compress,
      keepFileExt: this.options.keepFileExt,
      fileNameSep: this.options.fileNameSep
    });

    this.fileNameParser = fileNameParser({
      file: this.fileObject,
      keepFileExt: this.options.keepFileExt,
      pattern: this.options.pattern,
      fileNameSep: this.options.fileNameSep
    });

    this.state = {
      currentSize: 0
    };

    if (this.options.pattern) {
      this.state.currentDate = format(this.options.pattern, newNow());
    }

    this.filename = this.fileFormatter({
      index: 0,
      date: this.state.currentDate
    });
    if (["a", "a+", "as", "as+"].includes(this.options.flags)) {
      this._setExistingSizeAndDate();
    }

    debug(
      `constructor: create new file ${this.filename}, state=${JSON.stringify(
        this.state
      )}`
    );
    this._renewWriteStream();
  }

  _setExistingSizeAndDate() {
    try {
      const stats = fs.statSync(this.filename);
      this.state.currentSize = stats.size;
      if (this.options.pattern) {
        this.state.currentDate = format(this.options.pattern, stats.mtime);
      }
    } catch (e) {
      //file does not exist, that's fine - move along
      return;
    }
  }

  _parseOption(rawOptions) {
    const defaultOptions = {
      maxSize: 0,
      numToKeep: Number.MAX_SAFE_INTEGER,
      encoding: "utf8",
      mode: parseInt("0600", 8),
      flags: "a",
      compress: false,
      keepFileExt: false,
      alwaysIncludePattern: false
    };
    const options = Object.assign({}, defaultOptions, rawOptions);
    if (!options.maxSize) {
      delete options.maxSize;
    } else if (options.maxSize <= 0) {
      throw new Error(`options.maxSize (${options.maxSize}) should be > 0`);
    }
    // options.numBackups will supercede options.numToKeep
    if (options.numBackups || options.numBackups === 0) {
      if (options.numBackups < 0) {
        throw new Error(`options.numBackups (${options.numBackups}) should be >= 0`);
      } else if (options.numBackups >= Number.MAX_SAFE_INTEGER) {
        // to cater for numToKeep (include the hot file) at Number.MAX_SAFE_INTEGER
        throw new Error(`options.numBackups (${options.numBackups}) should be < Number.MAX_SAFE_INTEGER`);
      } else {
        options.numToKeep = options.numBackups + 1;
      }
    } else if (options.numToKeep <= 0) {
      throw new Error(`options.numToKeep (${options.numToKeep}) should be > 0`);
    }
    debug(
      `_parseOption: creating stream with option=${JSON.stringify(options)}`
    );
    return options;
  }

  _final(callback) {
    this.currentFileStream.end("", this.options.encoding, callback);
  }

  _write(chunk, encoding, callback) {
    this._shouldRoll().then(() => {
      debug(
        `_write: writing chunk. ` +
          `file=${this.currentFileStream.path} ` +
          `state=${JSON.stringify(this.state)} ` +
          `chunk=${chunk}`
      );
      this.currentFileStream.write(chunk, encoding, e => {
        this.state.currentSize += chunk.length;
        callback(e);
      });
    });
  }

  async _shouldRoll() {
    if (this._dateChanged() || this._tooBig()) {
      debug(
        `_shouldRoll: rolling because dateChanged? ${this._dateChanged()} or tooBig? ${this._tooBig()}`
      );
      await this._roll();
    }
  }

  _dateChanged() {
    return (
      this.state.currentDate &&
      this.state.currentDate !== format(this.options.pattern, newNow())
    );
  }

  _tooBig() {
    return this.state.currentSize >= this.options.maxSize;
  }

  _roll() {
    debug(`_roll: closing the current stream`);
    return new Promise((resolve, reject) => {
      this.currentFileStream.end("", this.options.encoding, () => {
        this._moveOldFiles()
          .then(resolve)
          .catch(reject);
      });
    });
  }

  async _moveOldFiles() {
    const files = await this._getExistingFiles();
    const todaysFiles = this.state.currentDate
      ? files.filter(f => f.date === this.state.currentDate)
      : files;
    for (let i = todaysFiles.length; i >= 0; i--) {
      debug(`_moveOldFiles: i = ${i}`);
      const sourceFilePath = this.fileFormatter({
        date: this.state.currentDate,
        index: i
      });
      const targetFilePath = this.fileFormatter({
        date: this.state.currentDate,
        index: i + 1
      });

      const moveAndCompressOptions = {
        compress: this.options.compress && i === 0,
        mode: this.options.mode
      };
      await moveAndMaybeCompressFile(
        sourceFilePath,
        targetFilePath,
        moveAndCompressOptions
      );
    }

    this.state.currentSize = 0;
    this.state.currentDate = this.state.currentDate
      ? format(this.options.pattern, newNow())
      : null;
    debug(
      `_moveOldFiles: finished rolling files. state=${JSON.stringify(
        this.state
      )}`
    );
    this._renewWriteStream();
    // wait for the file to be open before cleaning up old ones,
    // otherwise the daysToKeep calculations can be off
    await new Promise((resolve, reject) => {
      this.currentFileStream.write("", "utf8", () => {
        this._clean()
          .then(resolve)
          .catch(reject);
      });
    });
  }

  // Sorted from the oldest to the latest
  async _getExistingFiles() {
    const files = await fs.readdir(this.fileObject.dir)
      .catch( /* istanbul ignore next: will not happen on windows */ () => []);

    debug(`_getExistingFiles: files=${files}`);
    const existingFileDetails = files
      .map(n => this.fileNameParser(n))
      .filter(n => n);

    const getKey = n =>
      (n.timestamp ? n.timestamp : newNow().getTime()) - n.index;
    existingFileDetails.sort((a, b) => getKey(a) - getKey(b));

    return existingFileDetails;
  }

  _renewWriteStream() {
    const filePath = this.fileFormatter({
      date: this.state.currentDate,
      index: 0
    });

    // attempt to create the directory
    const mkdir = (dir) => {
      try {
        return fs.mkdirSync(dir, { recursive: true });
      }
      // backward-compatible fs.mkdirSync for nodejs pre-10.12.0 (without recursive option)
      catch (e) {
        // recursive creation of parent first
        if (e.code === "ENOENT") {
          mkdir(path.dirname(dir));
          return mkdir(dir);
        }

        // throw error for all except EEXIST and EROFS (read-only filesystem)
        if (e.code !== "EEXIST" && e.code !== "EROFS") {
          throw e;
        }

        // EEXIST: throw if file and not directory
        // EROFS : throw if directory not found
        else {
          try {
            if (fs.statSync(dir).isDirectory()) {
              return dir;
            }
            throw e;
          } catch (err) {
            throw e;
          }
        }
      }
    };
    mkdir(this.fileObject.dir);

    const ops = {
      flags: this.options.flags,
      encoding: this.options.encoding,
      mode: this.options.mode
    };
    const renameKey = function(obj, oldKey, newKey) {
      obj[newKey] = obj[oldKey];
      delete obj[oldKey];
      return obj;
    };
    // try to throw EISDIR, EROFS, EACCES
    fs.appendFileSync(filePath, "", renameKey({ ...ops }, "flags", "flag"));
    this.currentFileStream = fs.createWriteStream(filePath, ops);
    this.currentFileStream.on("error", e => {
      this.emit("error", e);
    });
  }

  async _clean() {
    const existingFileDetails = await this._getExistingFiles();
    debug(
      `_clean: numToKeep = ${this.options.numToKeep}, existingFiles = ${existingFileDetails.length}`
    );
    debug("_clean: existing files are: ", existingFileDetails);
    if (this._tooManyFiles(existingFileDetails.length)) {
      const fileNamesToRemove = existingFileDetails
        .slice(0, existingFileDetails.length - this.options.numToKeep)
        .map(f => path.format({ dir: this.fileObject.dir, base: f.filename }));
      await deleteFiles(fileNamesToRemove);
    }
  }

  _tooManyFiles(numFiles) {
    return this.options.numToKeep > 0 && numFiles > this.options.numToKeep;
  }
}

module.exports = RollingFileWriteStream;


/***/ }),

/***/ 10360:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)("streamroller:fileNameFormatter");
const path = __nccwpck_require__(71017);
const ZIP_EXT = ".gz";
const DEFAULT_FILENAME_SEP = ".";

module.exports = ({
  file,
  keepFileExt,
  needsIndex,
  alwaysIncludeDate,
  compress,
  fileNameSep
}) => {
  let FILENAME_SEP = fileNameSep || DEFAULT_FILENAME_SEP;
  const dirAndName = path.join(file.dir, file.name);

  const ext = f => f + file.ext;

  const index = (f, i, d) =>
    (needsIndex || !d) && i ? f + FILENAME_SEP + i : f;

  const date = (f, i, d) => {
    return (i > 0 || alwaysIncludeDate) && d ? f + FILENAME_SEP + d : f;
  };

  const gzip = (f, i) => (i && compress ? f + ZIP_EXT : f);

  const parts = keepFileExt
    ? [date, index, ext, gzip]
    : [ext, date, index, gzip];

  return ({ date, index }) => {
    debug(`_formatFileName: date=${date}, index=${index}`);
    return parts.reduce(
      (filename, part) => part(filename, index, date),
      dirAndName
    );
  };
};


/***/ }),

/***/ 22592:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)("streamroller:fileNameParser");
const ZIP_EXT = ".gz";
const format = __nccwpck_require__(52087);
const DEFAULT_FILENAME_SEP = ".";

module.exports = ({ file, keepFileExt, pattern, fileNameSep }) => {
  let FILENAME_SEP = fileNameSep || DEFAULT_FILENAME_SEP;
  // All these functions take two arguments: f, the filename, and p, the result placeholder
  // They return the filename with any matching parts removed.
  // The "zip" function, for instance, removes the ".gz" part of the filename (if present)
  const zip = (f, p) => {
    if (f.endsWith(ZIP_EXT)) {
      debug("it is gzipped");
      p.isCompressed = true;
      return f.slice(0, -1 * ZIP_EXT.length);
    }
    return f;
  };

  const __NOT_MATCHING__ = "__NOT_MATCHING__";

  const extAtEnd = f => {
    if (f.startsWith(file.name) && f.endsWith(file.ext)) {
      debug("it starts and ends with the right things");
      return f.slice(file.name.length + 1, -1 * file.ext.length);
    }
    return __NOT_MATCHING__;
  };

  const extInMiddle = f => {
    if (f.startsWith(file.base)) {
      debug("it starts with the right things");
      return f.slice(file.base.length + 1);
    }
    return __NOT_MATCHING__;
  };

  const dateAndIndex = (f, p) => {
    const items = f.split(FILENAME_SEP);
    let indexStr = items[items.length - 1];
    debug("items: ", items, ", indexStr: ", indexStr);
    let dateStr = f;
    if (indexStr !== undefined && indexStr.match(/^\d+$/)) {
      dateStr = f.slice(0, -1 * (indexStr.length + 1));
      debug(`dateStr is ${dateStr}`);
      if (pattern && !dateStr) {
        dateStr = indexStr;
        indexStr = "0";
      }
    } else {
      indexStr = "0";
    }

    try {
      // Two arguments for new Date() are intentional. This will set other date
      // components to minimal values in the current timezone instead of UTC,
      // as new Date(0) will do.
      const date = format.parse(pattern, dateStr, new Date(0, 0));
      if (format.asString(pattern, date) !== dateStr) return f;
      p.index = parseInt(indexStr, 10);
      p.date = dateStr;
      p.timestamp = date.getTime();
      return "";
    } catch (e) {
      //not a valid date, don't panic.
      debug(`Problem parsing ${dateStr} as ${pattern}, error was: `, e);
      return f;
    }
  };

  const index = (f, p) => {
    if (f.match(/^\d+$/)) {
      debug("it has an index");
      p.index = parseInt(f, 10);
      return "";
    }
    return f;
  };

  let parts = [
    zip,
    keepFileExt ? extAtEnd : extInMiddle,
    pattern ? dateAndIndex : index
  ];

  return filename => {
    let result = { filename, index: 0, isCompressed: false };
    // pass the filename through each of the file part parsers
    let whatsLeftOver = parts.reduce(
      (remains, part) => part(remains, result),
      filename
    );
    // if there's anything left after parsing, then it wasn't a valid filename
    return whatsLeftOver ? null : result;
  };
};


/***/ }),

/***/ 85735:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = {
  RollingFileWriteStream: __nccwpck_require__(8796),
  RollingFileStream: __nccwpck_require__(95476),
  DateRollingFileStream: __nccwpck_require__(93917)
};


/***/ }),

/***/ 66:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(38237)('streamroller:moveAndMaybeCompressFile');
const fs = __nccwpck_require__(5630);
const zlib = __nccwpck_require__(59796);

const _parseOption = function(rawOptions){
  const defaultOptions = {
    mode: parseInt("0600", 8),
    compress: false,
  };
  const options = Object.assign({}, defaultOptions, rawOptions);
  debug(`_parseOption: moveAndMaybeCompressFile called with option=${JSON.stringify(options)}`);
  return options;
};

const moveAndMaybeCompressFile = async (
  sourceFilePath,
  targetFilePath,
  options
) => {
  options = _parseOption(options);

  if (sourceFilePath === targetFilePath) {
    debug(`moveAndMaybeCompressFile: source and target are the same, not doing anything`);
    return;
  }

  if (await fs.pathExists(sourceFilePath)) {
    debug(
      `moveAndMaybeCompressFile: moving file from ${sourceFilePath} to ${targetFilePath} ${
        options.compress ? "with" : "without"
      } compress`
    );
    if (options.compress) {
      await new Promise((resolve, reject) => {
        let isCreated = false;
        // to avoid concurrency, the forked process which can create the file will proceed (using flags wx)
        const writeStream = fs.createWriteStream(targetFilePath, { mode: options.mode, flags: "wx" })
          // wait until writable stream is valid before proceeding to read
          .on("open", () => {
            isCreated = true;
            const readStream = fs.createReadStream(sourceFilePath)
              // wait until readable stream is valid before piping
              .on("open", () => {
                readStream.pipe(zlib.createGzip()).pipe(writeStream);
              })
              .on("error", (e) => {
                debug(`moveAndMaybeCompressFile: error reading ${sourceFilePath}`, e);
                // manually close writable: https://nodejs.org/api/stream.html#readablepipedestination-options
                writeStream.destroy(e);
              });
          })
          .on("finish", () => {
            debug(`moveAndMaybeCompressFile: finished compressing ${targetFilePath}, deleting ${sourceFilePath}`);
            // delete sourceFilePath
            fs.unlink(sourceFilePath)
              .then(resolve)
              .catch((e) => {
                debug(`moveAndMaybeCompressFile: error deleting ${sourceFilePath}, truncating instead`, e);
                // fallback to truncate
                fs.truncate(sourceFilePath)
                  .then(resolve)
                  .catch((e) => {
                    debug(`moveAndMaybeCompressFile: error truncating ${sourceFilePath}`, e);
                    reject(e);
                  });
              });
          })
          .on("error", (e) => {
            if (!isCreated) {
              debug(`moveAndMaybeCompressFile: error creating ${targetFilePath}`, e);
              // do not do anything if handled by another forked process
              reject(e);
            } else {
              debug(`moveAndMaybeCompressFile: error writing ${targetFilePath}, deleting`, e);
              // delete targetFilePath (taking as nothing happened)
              fs.unlink(targetFilePath)
                .then(() => { reject(e); })
                .catch((e) => {
                  debug(`moveAndMaybeCompressFile: error deleting ${targetFilePath}`, e);
                  reject(e);
                });
            }
          });
      }).catch(() => {});
    } else {
      debug(`moveAndMaybeCompressFile: renaming ${sourceFilePath} to ${targetFilePath}`);
      try {
        await fs.move(sourceFilePath, targetFilePath, { overwrite: true });
      } catch (e) {
        debug(`moveAndMaybeCompressFile: error renaming ${sourceFilePath} to ${targetFilePath}`, e);
        debug(`moveAndMaybeCompressFile: trying copy+truncate instead`);
        await fs.copy(sourceFilePath, targetFilePath, { overwrite: true });
        await fs.truncate(sourceFilePath);
      }
    }
  }
};

module.exports = moveAndMaybeCompressFile;


/***/ }),

/***/ 79652:
/***/ ((module) => {

// allows us to inject a mock date in tests
module.exports = () => new Date();


/***/ }),

/***/ 59318:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const os = __nccwpck_require__(22037);
const tty = __nccwpck_require__(76224);
const hasFlag = __nccwpck_require__(31621);

const {env} = process;

let forceColor;
if (hasFlag('no-color') ||
	hasFlag('no-colors') ||
	hasFlag('color=false') ||
	hasFlag('color=never')) {
	forceColor = 0;
} else if (hasFlag('color') ||
	hasFlag('colors') ||
	hasFlag('color=true') ||
	hasFlag('color=always')) {
	forceColor = 1;
}

if ('FORCE_COLOR' in env) {
	if (env.FORCE_COLOR === 'true') {
		forceColor = 1;
	} else if (env.FORCE_COLOR === 'false') {
		forceColor = 0;
	} else {
		forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
	}
}

function translateLevel(level) {
	if (level === 0) {
		return false;
	}

	return {
		level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
}

function supportsColor(haveStream, streamIsTTY) {
	if (forceColor === 0) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (haveStream && !streamIsTTY && forceColor === undefined) {
		return 0;
	}

	const min = forceColor || 0;

	if (env.TERM === 'dumb') {
		return min;
	}

	if (process.platform === 'win32') {
		// Windows 10 build 10586 is the first Windows release that supports 256 colors.
		// Windows 10 build 14931 is the first release that supports 16m/TrueColor.
		const osRelease = os.release().split('.');
		if (
			Number(osRelease[0]) >= 10 &&
			Number(osRelease[2]) >= 10586
		) {
			return Number(osRelease[2]) >= 14931 ? 3 : 2;
		}

		return 1;
	}

	if ('CI' in env) {
		if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {
			return 1;
		}

		return min;
	}

	if ('TEAMCITY_VERSION' in env) {
		return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
	}

	if (env.COLORTERM === 'truecolor') {
		return 3;
	}

	if ('TERM_PROGRAM' in env) {
		const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

		switch (env.TERM_PROGRAM) {
			case 'iTerm.app':
				return version >= 3 ? 3 : 2;
			case 'Apple_Terminal':
				return 2;
			// No default
		}
	}

	if (/-256(color)?$/i.test(env.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
		return 1;
	}

	if ('COLORTERM' in env) {
		return 1;
	}

	return min;
}

function getSupportLevel(stream) {
	const level = supportsColor(stream, stream && stream.isTTY);
	return translateLevel(level);
}

module.exports = {
	supportsColor: getSupportLevel,
	stdout: translateLevel(supportsColor(true, tty.isatty(1))),
	stderr: translateLevel(supportsColor(true, tty.isatty(2)))
};


/***/ }),

/***/ 74294:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(54219);


/***/ }),

/***/ 54219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


var net = __nccwpck_require__(41808);
var tls = __nccwpck_require__(24404);
var http = __nccwpck_require__(13685);
var https = __nccwpck_require__(95687);
var events = __nccwpck_require__(82361);
var assert = __nccwpck_require__(39491);
var util = __nccwpck_require__(73837);


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ 9046:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.fromCallback = function (fn) {
  return Object.defineProperty(function (...args) {
    if (typeof args[args.length - 1] === 'function') fn.apply(this, args)
    else {
      return new Promise((resolve, reject) => {
        fn.call(
          this,
          ...args,
          (err, res) => (err != null) ? reject(err) : resolve(res)
        )
      })
    }
  }, 'name', { value: fn.name })
}

exports.fromPromise = function (fn) {
  return Object.defineProperty(function (...args) {
    const cb = args[args.length - 1]
    if (typeof cb !== 'function') return fn.apply(this, args)
    else fn.apply(this, args.slice(0, -1)).then(r => cb(null, r), cb)
  }, 'name', { value: fn.name })
}


/***/ }),

/***/ 39491:
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ 35001:
/***/ ((module) => {

"use strict";
module.exports = require("cluster");

/***/ }),

/***/ 22057:
/***/ ((module) => {

"use strict";
module.exports = require("constants");

/***/ }),

/***/ 6113:
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ 82361:
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ 57147:
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ 13685:
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ 95687:
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ 41808:
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ 22037:
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ 71017:
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ 63477:
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ 12781:
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ 24404:
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ 76224:
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ 57310:
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ 73837:
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ 59796:
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ 98048:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*! (c) 2020 Andrea Giammarchi */

const {parse: $parse, stringify: $stringify} = JSON;
const {keys} = Object;

const Primitive = String;   // it could be Number
const primitive = 'string'; // it could be 'number'

const ignore = {};
const object = 'object';

const noop = (_, value) => value;

const primitives = value => (
  value instanceof Primitive ? Primitive(value) : value
);

const Primitives = (_, value) => (
  typeof value === primitive ? new Primitive(value) : value
);

const revive = (input, parsed, output, $) => {
  const lazy = [];
  for (let ke = keys(output), {length} = ke, y = 0; y < length; y++) {
    const k = ke[y];
    const value = output[k];
    if (value instanceof Primitive) {
      const tmp = input[value];
      if (typeof tmp === object && !parsed.has(tmp)) {
        parsed.add(tmp);
        output[k] = ignore;
        lazy.push({k, a: [input, parsed, tmp, $]});
      }
      else
        output[k] = $.call(output, k, tmp);
    }
    else if (output[k] !== ignore)
      output[k] = $.call(output, k, value);
  }
  for (let {length} = lazy, i = 0; i < length; i++) {
    const {k, a} = lazy[i];
    output[k] = $.call(output, k, revive.apply(null, a));
  }
  return output;
};

const set = (known, input, value) => {
  const index = Primitive(input.push(value) - 1);
  known.set(value, index);
  return index;
};

const parse = (text, reviver) => {
  const input = $parse(text, Primitives).map(primitives);
  const value = input[0];
  const $ = reviver || noop;
  const tmp = typeof value === object && value ?
              revive(input, new Set, value, $) :
              value;
  return $.call({'': tmp}, '', tmp);
};
exports.parse = parse;

const stringify = (value, replacer, space) => {
  const $ = replacer && typeof replacer === object ?
            (k, v) => (k === '' || -1 < replacer.indexOf(k) ? v : void 0) :
            (replacer || noop);
  const known = new Map;
  const input = [];
  const output = [];
  let i = +set(known, input, $.call({'': value}, '', value));
  let firstRun = !i;
  while (i < input.length) {
    firstRun = true;
    output[i] = $stringify(input[i++], replace, space);
  }
  return '[' + output.join(',') + ']';
  function replace(key, value) {
    if (firstRun) {
      firstRun = !firstRun;
      return value;
    }
    const after = $.call(this, key, value);
    switch (typeof after) {
      case object:
        if (after === null) return after;
      case primitive:
        return known.get(after) || set(known, input, after);
    }
    return after;
  }
};
exports.stringify = stringify;

const toJSON = any => $parse(stringify(any));
exports.toJSON = toJSON;
const fromJSON = any => parse($stringify(any));
exports.fromJSON = fromJSON;


/***/ }),

/***/ 88593:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__nccwpck_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __nccwpck_require__(3109);
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;
//# sourceMappingURL=index.js.map